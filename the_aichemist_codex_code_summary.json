{
    "D:/Coding/Python_Projects/the_aichemist_codex/scripts/run_analysis.py": [
        {
            "type": "function",
            "name": "select_directory",
            "args": [
                "prompt"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "main",
            "args": [
                "directory",
                "output_directory",
                "generate_tree",
                "summarize_codebase"
            ],
            "lineno": 22
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/tests/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/__init__.py": [
        {
            "type": "function",
            "name": "main",
            "args": [
                "args"
            ],
            "lineno": 6
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/__main__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/__pip-runner__.py": [
        {
            "type": "function",
            "name": "version_str",
            "args": [
                "version"
            ],
            "lineno": 15
        },
        {
            "type": "class",
            "name": "PipImportRedirectingFinder",
            "methods": [
                "Method `find_spec` (line 38)"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "find_spec",
            "args": [
                "self",
                "fullname",
                "path",
                "target"
            ],
            "lineno": 38
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/build_env.py": [
        {
            "type": "function",
            "name": "_dedup",
            "args": [
                "a",
                "b"
            ],
            "lineno": 31
        },
        {
            "type": "class",
            "name": "_Prefix",
            "methods": [
                "Method `__init__` (line 36)"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "get_runnable_pip",
            "args": [],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "_get_system_sitepackages",
            "args": [],
            "lineno": 60
        },
        {
            "type": "class",
            "name": "BuildEnvironment",
            "methods": [
                "Method `__init__` (line 83)",
                "Method `__enter__` (line 137)",
                "Method `__exit__` (line 158)",
                "Method `check_requirements` (line 170)",
                "Method `install_requirements` (line 204)",
                "Method `_install_requirements` (line 226)"
            ],
            "lineno": 80
        },
        {
            "type": "class",
            "name": "NoOpBuildEnvironment",
            "methods": [
                "Method `__init__` (line 286)",
                "Method `__enter__` (line 289)",
                "Method `__exit__` (line 292)",
                "Method `cleanup` (line 300)",
                "Method `install_requirements` (line 303)"
            ],
            "lineno": 283
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "path"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 137
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 158
        },
        {
            "type": "function",
            "name": "check_requirements",
            "args": [
                "self",
                "reqs"
            ],
            "lineno": 170
        },
        {
            "type": "function",
            "name": "install_requirements",
            "args": [
                "self",
                "finder",
                "requirements",
                "prefix_as_string"
            ],
            "lineno": 204
        },
        {
            "type": "function",
            "name": "_install_requirements",
            "args": [
                "pip_runnable",
                "finder",
                "requirements",
                "prefix"
            ],
            "lineno": 226
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 286
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 289
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 292
        },
        {
            "type": "function",
            "name": "cleanup",
            "args": [
                "self"
            ],
            "lineno": 300
        },
        {
            "type": "function",
            "name": "install_requirements",
            "args": [
                "self",
                "finder",
                "requirements",
                "prefix_as_string"
            ],
            "lineno": 303
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/cache.py": [
        {
            "type": "function",
            "name": "_hash_dict",
            "args": [
                "d"
            ],
            "lineno": 26
        },
        {
            "type": "class",
            "name": "Cache",
            "methods": [
                "Method `__init__` (line 38)",
                "Method `_get_cache_path_parts` (line 43)",
                "Method `_get_candidates` (line 76)",
                "Method `get_path_for_link` (line 86)",
                "Method `get` (line 90)"
            ],
            "lineno": 32
        },
        {
            "type": "class",
            "name": "SimpleWheelCache",
            "methods": [
                "Method `__init__` (line 105)",
                "Method `get_path_for_link` (line 108)",
                "Method `get` (line 128)"
            ],
            "lineno": 102
        },
        {
            "type": "class",
            "name": "EphemWheelCache",
            "methods": [
                "Method `__init__` (line 175)"
            ],
            "lineno": 172
        },
        {
            "type": "class",
            "name": "CacheEntry",
            "methods": [
                "Method `__init__` (line 185)"
            ],
            "lineno": 184
        },
        {
            "type": "class",
            "name": "WheelCache",
            "methods": [
                "Method `__init__` (line 215)",
                "Method `get_path_for_link` (line 220)",
                "Method `get_ephem_path_for_link` (line 223)",
                "Method `get` (line 226)",
                "Method `get_cache_entry` (line 237)",
                "Method `record_download_origin` (line 266)"
            ],
            "lineno": 208
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "cache_dir"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "_get_cache_path_parts",
            "args": [
                "self",
                "link"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "_get_candidates",
            "args": [
                "self",
                "link",
                "canonical_package_name"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "get_path_for_link",
            "args": [
                "self",
                "link"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "link",
                "package_name",
                "supported_tags"
            ],
            "lineno": 90
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "cache_dir"
            ],
            "lineno": 105
        },
        {
            "type": "function",
            "name": "get_path_for_link",
            "args": [
                "self",
                "link"
            ],
            "lineno": 108
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "link",
                "package_name",
                "supported_tags"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "link",
                "persistent"
            ],
            "lineno": 185
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "cache_dir"
            ],
            "lineno": 215
        },
        {
            "type": "function",
            "name": "get_path_for_link",
            "args": [
                "self",
                "link"
            ],
            "lineno": 220
        },
        {
            "type": "function",
            "name": "get_ephem_path_for_link",
            "args": [
                "self",
                "link"
            ],
            "lineno": 223
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "link",
                "package_name",
                "supported_tags"
            ],
            "lineno": 226
        },
        {
            "type": "function",
            "name": "get_cache_entry",
            "args": [
                "self",
                "link",
                "package_name",
                "supported_tags"
            ],
            "lineno": 237
        },
        {
            "type": "function",
            "name": "record_download_origin",
            "args": [
                "cache_dir",
                "download_info"
            ],
            "lineno": 266
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/configuration.py": [
        {
            "type": "function",
            "name": "_normalize_name",
            "args": [
                "name"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "_disassemble_key",
            "args": [
                "name"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "get_configuration_files",
            "args": [],
            "lineno": 68
        },
        {
            "type": "class",
            "name": "Configuration",
            "methods": [
                "Method `__init__` (line 101)",
                "Method `load` (line 122)",
                "Method `get_file_to_edit` (line 128)",
                "Method `items` (line 137)",
                "Method `get_value` (line 143)",
                "Method `set_value` (line 155)",
                "Method `unset_value` (line 174)",
                "Method `save` (line 203)",
                "Method `_ensure_have_load_only` (line 227)",
                "Method `_dictionary` (line 233)",
                "Method `_load_config_files` (line 244)",
                "Method `_load_file` (line 267)",
                "Method `_construct_parser` (line 277)",
                "Method `_load_environment_vars` (line 298)",
                "Method `_normalized_keys` (line 304)",
                "Method `get_environ_vars` (line 318)",
                "Method `iter_config_files` (line 327)",
                "Method `get_values_in_config` (line 359)",
                "Method `_get_parser_to_modify` (line 363)",
                "Method `_mark_as_modified` (line 377)",
                "Method `__repr__` (line 382)"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "isolated",
                "load_only"
            ],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "load",
            "args": [
                "self"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "get_file_to_edit",
            "args": [
                "self"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "items",
            "args": [
                "self"
            ],
            "lineno": 137
        },
        {
            "type": "function",
            "name": "get_value",
            "args": [
                "self",
                "key"
            ],
            "lineno": 143
        },
        {
            "type": "function",
            "name": "set_value",
            "args": [
                "self",
                "key",
                "value"
            ],
            "lineno": 155
        },
        {
            "type": "function",
            "name": "unset_value",
            "args": [
                "self",
                "key"
            ],
            "lineno": 174
        },
        {
            "type": "function",
            "name": "save",
            "args": [
                "self"
            ],
            "lineno": 203
        },
        {
            "type": "function",
            "name": "_ensure_have_load_only",
            "args": [
                "self"
            ],
            "lineno": 227
        },
        {
            "type": "function",
            "name": "_dictionary",
            "args": [
                "self"
            ],
            "lineno": 233
        },
        {
            "type": "function",
            "name": "_load_config_files",
            "args": [
                "self"
            ],
            "lineno": 244
        },
        {
            "type": "function",
            "name": "_load_file",
            "args": [
                "self",
                "variant",
                "fname"
            ],
            "lineno": 267
        },
        {
            "type": "function",
            "name": "_construct_parser",
            "args": [
                "self",
                "fname"
            ],
            "lineno": 277
        },
        {
            "type": "function",
            "name": "_load_environment_vars",
            "args": [
                "self"
            ],
            "lineno": 298
        },
        {
            "type": "function",
            "name": "_normalized_keys",
            "args": [
                "self",
                "section",
                "items"
            ],
            "lineno": 304
        },
        {
            "type": "function",
            "name": "get_environ_vars",
            "args": [
                "self"
            ],
            "lineno": 318
        },
        {
            "type": "function",
            "name": "iter_config_files",
            "args": [
                "self"
            ],
            "lineno": 327
        },
        {
            "type": "function",
            "name": "get_values_in_config",
            "args": [
                "self",
                "variant"
            ],
            "lineno": 359
        },
        {
            "type": "function",
            "name": "_get_parser_to_modify",
            "args": [
                "self"
            ],
            "lineno": 363
        },
        {
            "type": "function",
            "name": "_mark_as_modified",
            "args": [
                "self",
                "fname",
                "parser"
            ],
            "lineno": 377
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 382
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/exceptions.py": [
        {
            "type": "function",
            "name": "_is_kebab_case",
            "args": [
                "s"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "_prefix_with_indent",
            "args": [
                "s",
                "console"
            ],
            "lineno": 40
        },
        {
            "type": "class",
            "name": "PipError",
            "methods": null,
            "lineno": 57
        },
        {
            "type": "class",
            "name": "DiagnosticPipError",
            "methods": [
                "Method `__init__` (line 74)",
                "Method `__repr__` (line 104)",
                "Method `__rich_console__` (line 115)"
            ],
            "lineno": 61
        },
        {
            "type": "class",
            "name": "ConfigurationError",
            "methods": null,
            "lineno": 179
        },
        {
            "type": "class",
            "name": "InstallationError",
            "methods": null,
            "lineno": 183
        },
        {
            "type": "class",
            "name": "UninstallationError",
            "methods": null,
            "lineno": 187
        },
        {
            "type": "class",
            "name": "MissingPyProjectBuildRequires",
            "methods": [
                "Method `__init__` (line 196)"
            ],
            "lineno": 191
        },
        {
            "type": "class",
            "name": "InvalidPyProjectBuildRequires",
            "methods": [
                "Method `__init__` (line 213)"
            ],
            "lineno": 208
        },
        {
            "type": "class",
            "name": "NoneMetadataError",
            "methods": [
                "Method `__init__` (line 234)",
                "Method `__str__` (line 247)"
            ],
            "lineno": 225
        },
        {
            "type": "class",
            "name": "UserInstallationInvalid",
            "methods": [
                "Method `__str__` (line 256)"
            ],
            "lineno": 253
        },
        {
            "type": "class",
            "name": "InvalidSchemeCombination",
            "methods": [
                "Method `__str__` (line 261)"
            ],
            "lineno": 260
        },
        {
            "type": "class",
            "name": "DistributionNotFound",
            "methods": null,
            "lineno": 266
        },
        {
            "type": "class",
            "name": "RequirementsFileParseError",
            "methods": null,
            "lineno": 270
        },
        {
            "type": "class",
            "name": "BestVersionAlreadyInstalled",
            "methods": null,
            "lineno": 274
        },
        {
            "type": "class",
            "name": "BadCommand",
            "methods": null,
            "lineno": 279
        },
        {
            "type": "class",
            "name": "CommandError",
            "methods": null,
            "lineno": 283
        },
        {
            "type": "class",
            "name": "PreviousBuildDirError",
            "methods": null,
            "lineno": 287
        },
        {
            "type": "class",
            "name": "NetworkConnectionError",
            "methods": [
                "Method `__init__` (line 294)",
                "Method `__str__` (line 315)"
            ],
            "lineno": 291
        },
        {
            "type": "class",
            "name": "InvalidWheelFilename",
            "methods": null,
            "lineno": 319
        },
        {
            "type": "class",
            "name": "UnsupportedWheel",
            "methods": null,
            "lineno": 323
        },
        {
            "type": "class",
            "name": "InvalidWheel",
            "methods": [
                "Method `__init__` (line 330)",
                "Method `__str__` (line 334)"
            ],
            "lineno": 327
        },
        {
            "type": "class",
            "name": "MetadataInconsistent",
            "methods": [
                "Method `__init__` (line 346)",
                "Method `__str__` (line 354)"
            ],
            "lineno": 338
        },
        {
            "type": "class",
            "name": "InstallationSubprocessError",
            "methods": [
                "Method `__init__` (line 366)",
                "Method `__str__` (line 398)"
            ],
            "lineno": 361
        },
        {
            "type": "class",
            "name": "MetadataGenerationFailed",
            "methods": [
                "Method `__init__` (line 405)",
                "Method `__str__` (line 417)"
            ],
            "lineno": 402
        },
        {
            "type": "class",
            "name": "HashErrors",
            "methods": [
                "Method `__init__` (line 424)",
                "Method `append` (line 427)",
                "Method `__str__` (line 430)",
                "Method `__bool__` (line 440)"
            ],
            "lineno": 421
        },
        {
            "type": "class",
            "name": "HashError",
            "methods": [
                "Method `body` (line 465)",
                "Method `__str__` (line 477)",
                "Method `_requirement_name` (line 480)"
            ],
            "lineno": 444
        },
        {
            "type": "class",
            "name": "VcsHashUnsupported",
            "methods": null,
            "lineno": 490
        },
        {
            "type": "class",
            "name": "DirectoryUrlHashUnsupported",
            "methods": null,
            "lineno": 501
        },
        {
            "type": "class",
            "name": "HashMissing",
            "methods": [
                "Method `__init__` (line 526)",
                "Method `body` (line 533)"
            ],
            "lineno": 512
        },
        {
            "type": "class",
            "name": "HashUnpinned",
            "methods": null,
            "lineno": 554
        },
        {
            "type": "class",
            "name": "HashMismatch",
            "methods": [
                "Method `__init__` (line 583)",
                "Method `body` (line 593)",
                "Method `_hash_comparison` (line 596)"
            ],
            "lineno": 565
        },
        {
            "type": "class",
            "name": "UnsupportedPythonVersion",
            "methods": null,
            "lineno": 623
        },
        {
            "type": "class",
            "name": "ConfigurationFileCouldNotBeLoaded",
            "methods": [
                "Method `__init__` (line 631)",
                "Method `__str__` (line 642)"
            ],
            "lineno": 628
        },
        {
            "type": "class",
            "name": "ExternallyManagedEnvironment",
            "methods": [
                "Method `__init__` (line 670)",
                "Method `_iter_externally_managed_error_keys` (line 688)",
                "Method `from_config` (line 710)"
            ],
            "lineno": 658
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 74
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 115
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 196
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 213
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "dist",
                "metadata_name"
            ],
            "lineno": 234
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 247
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 256
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 261
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "error_msg",
                "response",
                "request"
            ],
            "lineno": 294
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 315
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "location",
                "name"
            ],
            "lineno": 330
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 334
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "ireq",
                "field",
                "f_val",
                "m_val"
            ],
            "lineno": 346
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 354
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 366
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 398
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 405
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 417
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 424
        },
        {
            "type": "function",
            "name": "append",
            "args": [
                "self",
                "error"
            ],
            "lineno": 427
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 430
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 440
        },
        {
            "type": "function",
            "name": "body",
            "args": [
                "self"
            ],
            "lineno": 465
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 477
        },
        {
            "type": "function",
            "name": "_requirement_name",
            "args": [
                "self"
            ],
            "lineno": 480
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "gotten_hash"
            ],
            "lineno": 526
        },
        {
            "type": "function",
            "name": "body",
            "args": [
                "self"
            ],
            "lineno": 533
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "allowed",
                "gots"
            ],
            "lineno": 583
        },
        {
            "type": "function",
            "name": "body",
            "args": [
                "self"
            ],
            "lineno": 593
        },
        {
            "type": "function",
            "name": "_hash_comparison",
            "args": [
                "self"
            ],
            "lineno": 596
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "reason",
                "fname",
                "error"
            ],
            "lineno": 631
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 642
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "error"
            ],
            "lineno": 670
        },
        {
            "type": "function",
            "name": "_iter_externally_managed_error_keys",
            "args": [],
            "lineno": 688
        },
        {
            "type": "function",
            "name": "from_config",
            "args": [
                "cls",
                "config"
            ],
            "lineno": 710
        },
        {
            "type": "function",
            "name": "hash_then_or",
            "args": [
                "hash_name"
            ],
            "lineno": 608
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/main.py": [
        {
            "type": "function",
            "name": "main",
            "args": [
                "args"
            ],
            "lineno": 4
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/pyproject.py": [
        {
            "type": "function",
            "name": "_is_list_of_str",
            "args": [
                "obj"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "make_pyproject_path",
            "args": [
                "unpacked_source_directory"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "load_pyproject_toml",
            "args": [
                "use_pep517",
                "pyproject_toml",
                "setup_py",
                "req_name"
            ],
            "lineno": 29
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/self_outdated_check.py": [
        {
            "type": "function",
            "name": "_get_statefile_name",
            "args": [
                "key"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "_convert_date",
            "args": [
                "isodate"
            ],
            "lineno": 42
        },
        {
            "type": "class",
            "name": "SelfCheckState",
            "methods": [
                "Method `__init__` (line 52)",
                "Method `key` (line 70)",
                "Method `get` (line 73)",
                "Method `set` (line 92)"
            ],
            "lineno": 51
        },
        {
            "type": "class",
            "name": "UpgradePrompt",
            "methods": [
                "Method `__rich__` (line 132)"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "was_installed_by_pip",
            "args": [
                "pkg"
            ],
            "lineno": 152
        },
        {
            "type": "function",
            "name": "_get_current_remote_pip_version",
            "args": [
                "session",
                "options"
            ],
            "lineno": 162
        },
        {
            "type": "function",
            "name": "_self_version_check_logic",
            "args": [],
            "lineno": 190
        },
        {
            "type": "function",
            "name": "pip_self_version_check",
            "args": [
                "session",
                "options"
            ],
            "lineno": 224
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "cache_dir"
            ],
            "lineno": 52
        },
        {
            "type": "function",
            "name": "key",
            "args": [
                "self"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "current_time"
            ],
            "lineno": 73
        },
        {
            "type": "function",
            "name": "set",
            "args": [
                "self",
                "pypi_version",
                "current_time"
            ],
            "lineno": 92
        },
        {
            "type": "function",
            "name": "__rich__",
            "args": [
                "self"
            ],
            "lineno": 132
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/wheel_builder.py": [
        {
            "type": "function",
            "name": "_contains_egg_info",
            "args": [
                "s"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "_should_build",
            "args": [
                "req",
                "need_wheel"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "should_build_for_wheel_command",
            "args": [
                "req"
            ],
            "lineno": 78
        },
        {
            "type": "function",
            "name": "should_build_for_install_command",
            "args": [
                "req"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "_should_cache",
            "args": [
                "req"
            ],
            "lineno": 90
        },
        {
            "type": "function",
            "name": "_get_cache_dir",
            "args": [
                "req",
                "wheel_cache"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "_verify_one",
            "args": [
                "req",
                "wheel_path"
            ],
            "lineno": 138
        },
        {
            "type": "function",
            "name": "_build_one",
            "args": [
                "req",
                "output_dir",
                "verify",
                "build_options",
                "global_options",
                "editable"
            ],
            "lineno": 167
        },
        {
            "type": "function",
            "name": "_build_one_inside_env",
            "args": [
                "req",
                "output_dir",
                "build_options",
                "global_options",
                "editable"
            ],
            "lineno": 205
        },
        {
            "type": "function",
            "name": "_clean_one_legacy",
            "args": [
                "req",
                "global_options"
            ],
            "lineno": 276
        },
        {
            "type": "function",
            "name": "build",
            "args": [
                "requirements",
                "wheel_cache",
                "verify",
                "build_options",
                "global_options"
            ],
            "lineno": 293
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/__init__.py": [
        {
            "type": "function",
            "name": "main",
            "args": [
                "args"
            ],
            "lineno": 10
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/six.py": [
        {
            "type": "function",
            "name": "_add_doc",
            "args": [
                "func",
                "doc"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "_import_module",
            "args": [
                "name"
            ],
            "lineno": 85
        },
        {
            "type": "class",
            "name": "_LazyDescr",
            "methods": [
                "Method `__init__` (line 93)",
                "Method `__get__` (line 96)"
            ],
            "lineno": 91
        },
        {
            "type": "class",
            "name": "MovedModule",
            "methods": [
                "Method `__init__` (line 110)",
                "Method `_resolve` (line 119)",
                "Method `__getattr__` (line 122)"
            ],
            "lineno": 108
        },
        {
            "type": "class",
            "name": "_LazyModule",
            "methods": [
                "Method `__init__` (line 131)",
                "Method `__dir__` (line 135)"
            ],
            "lineno": 129
        },
        {
            "type": "class",
            "name": "MovedAttribute",
            "methods": [
                "Method `__init__` (line 146)",
                "Method `_resolve` (line 164)"
            ],
            "lineno": 144
        },
        {
            "type": "class",
            "name": "_SixMetaPathImporter",
            "methods": [
                "Method `__init__` (line 178)",
                "Method `_add_module` (line 182)",
                "Method `_get_module` (line 186)",
                "Method `find_module` (line 189)",
                "Method `find_spec` (line 194)",
                "Method `__get_module` (line 199)",
                "Method `load_module` (line 205)",
                "Method `is_package` (line 219)",
                "Method `get_code` (line 228)",
                "Method `create_module` (line 236)",
                "Method `exec_module` (line 239)"
            ],
            "lineno": 169
        },
        {
            "type": "class",
            "name": "_MovedItems",
            "methods": null,
            "lineno": 245
        },
        {
            "type": "class",
            "name": "Module_six_moves_urllib_parse",
            "methods": null,
            "lineno": 340
        },
        {
            "type": "class",
            "name": "Module_six_moves_urllib_error",
            "methods": null,
            "lineno": 382
        },
        {
            "type": "class",
            "name": "Module_six_moves_urllib_request",
            "methods": null,
            "lineno": 402
        },
        {
            "type": "class",
            "name": "Module_six_moves_urllib_response",
            "methods": null,
            "lineno": 454
        },
        {
            "type": "class",
            "name": "Module_six_moves_urllib_robotparser",
            "methods": null,
            "lineno": 475
        },
        {
            "type": "class",
            "name": "Module_six_moves_urllib",
            "methods": [
                "Method `__dir__` (line 503)"
            ],
            "lineno": 493
        },
        {
            "type": "function",
            "name": "add_move",
            "args": [
                "move"
            ],
            "lineno": 510
        },
        {
            "type": "function",
            "name": "remove_move",
            "args": [
                "name"
            ],
            "lineno": 515
        },
        {
            "type": "function",
            "name": "assertCountEqual",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 694
        },
        {
            "type": "function",
            "name": "assertRaisesRegex",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 698
        },
        {
            "type": "function",
            "name": "assertRegex",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 702
        },
        {
            "type": "function",
            "name": "assertNotRegex",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 706
        },
        {
            "type": "function",
            "name": "with_metaclass",
            "args": [
                "meta",
                "*bases"
            ],
            "lineno": 856
        },
        {
            "type": "function",
            "name": "add_metaclass",
            "args": [
                "metaclass"
            ],
            "lineno": 880
        },
        {
            "type": "function",
            "name": "ensure_binary",
            "args": [
                "s",
                "encoding",
                "errors"
            ],
            "lineno": 898
        },
        {
            "type": "function",
            "name": "ensure_str",
            "args": [
                "s",
                "encoding",
                "errors"
            ],
            "lineno": 916
        },
        {
            "type": "function",
            "name": "ensure_text",
            "args": [
                "s",
                "encoding",
                "errors"
            ],
            "lineno": 939
        },
        {
            "type": "function",
            "name": "python_2_unicode_compatible",
            "args": [
                "klass"
            ],
            "lineno": 958
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "__get__",
            "args": [
                "self",
                "obj",
                "tp"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "old",
                "new"
            ],
            "lineno": 110
        },
        {
            "type": "function",
            "name": "_resolve",
            "args": [
                "self"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "attr"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 131
        },
        {
            "type": "function",
            "name": "__dir__",
            "args": [
                "self"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "old_mod",
                "new_mod",
                "old_attr",
                "new_attr"
            ],
            "lineno": 146
        },
        {
            "type": "function",
            "name": "_resolve",
            "args": [
                "self"
            ],
            "lineno": 164
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "six_module_name"
            ],
            "lineno": 178
        },
        {
            "type": "function",
            "name": "_add_module",
            "args": [
                "self",
                "mod",
                "*fullnames"
            ],
            "lineno": 182
        },
        {
            "type": "function",
            "name": "_get_module",
            "args": [
                "self",
                "fullname"
            ],
            "lineno": 186
        },
        {
            "type": "function",
            "name": "find_module",
            "args": [
                "self",
                "fullname",
                "path"
            ],
            "lineno": 189
        },
        {
            "type": "function",
            "name": "find_spec",
            "args": [
                "self",
                "fullname",
                "path",
                "target"
            ],
            "lineno": 194
        },
        {
            "type": "function",
            "name": "__get_module",
            "args": [
                "self",
                "fullname"
            ],
            "lineno": 199
        },
        {
            "type": "function",
            "name": "load_module",
            "args": [
                "self",
                "fullname"
            ],
            "lineno": 205
        },
        {
            "type": "function",
            "name": "is_package",
            "args": [
                "self",
                "fullname"
            ],
            "lineno": 219
        },
        {
            "type": "function",
            "name": "get_code",
            "args": [
                "self",
                "fullname"
            ],
            "lineno": 228
        },
        {
            "type": "function",
            "name": "create_module",
            "args": [
                "self",
                "spec"
            ],
            "lineno": 236
        },
        {
            "type": "function",
            "name": "exec_module",
            "args": [
                "self",
                "module"
            ],
            "lineno": 239
        },
        {
            "type": "function",
            "name": "__dir__",
            "args": [
                "self"
            ],
            "lineno": 503
        },
        {
            "type": "function",
            "name": "get_unbound_function",
            "args": [
                "unbound"
            ],
            "lineno": 560
        },
        {
            "type": "function",
            "name": "create_unbound_method",
            "args": [
                "func",
                "cls"
            ],
            "lineno": 565
        },
        {
            "type": "function",
            "name": "get_unbound_function",
            "args": [
                "unbound"
            ],
            "lineno": 570
        },
        {
            "type": "function",
            "name": "create_bound_method",
            "args": [
                "func",
                "obj"
            ],
            "lineno": 573
        },
        {
            "type": "function",
            "name": "create_unbound_method",
            "args": [
                "func",
                "cls"
            ],
            "lineno": 576
        },
        {
            "type": "class",
            "name": "Iterator",
            "methods": [
                "Method `next` (line 581)"
            ],
            "lineno": 579
        },
        {
            "type": "function",
            "name": "iterkeys",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 598
        },
        {
            "type": "function",
            "name": "itervalues",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 601
        },
        {
            "type": "function",
            "name": "iteritems",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 604
        },
        {
            "type": "function",
            "name": "iterlists",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 607
        },
        {
            "type": "function",
            "name": "iterkeys",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 616
        },
        {
            "type": "function",
            "name": "itervalues",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 619
        },
        {
            "type": "function",
            "name": "iteritems",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 622
        },
        {
            "type": "function",
            "name": "iterlists",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 625
        },
        {
            "type": "function",
            "name": "b",
            "args": [
                "s"
            ],
            "lineno": 643
        },
        {
            "type": "function",
            "name": "u",
            "args": [
                "s"
            ],
            "lineno": 646
        },
        {
            "type": "function",
            "name": "b",
            "args": [
                "s"
            ],
            "lineno": 669
        },
        {
            "type": "function",
            "name": "u",
            "args": [
                "s"
            ],
            "lineno": 673
        },
        {
            "type": "function",
            "name": "byte2int",
            "args": [
                "bs"
            ],
            "lineno": 678
        },
        {
            "type": "function",
            "name": "indexbytes",
            "args": [
                "buf",
                "i"
            ],
            "lineno": 681
        },
        {
            "type": "function",
            "name": "reraise",
            "args": [
                "tp",
                "value",
                "tb"
            ],
            "lineno": 713
        },
        {
            "type": "function",
            "name": "exec_",
            "args": [
                "_code_",
                "_globs_",
                "_locs_"
            ],
            "lineno": 725
        },
        {
            "type": "function",
            "name": "raise_from",
            "args": [
                "value",
                "from_value"
            ],
            "lineno": 753
        },
        {
            "type": "function",
            "name": "print_",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 759
        },
        {
            "type": "function",
            "name": "print_",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 815
        },
        {
            "type": "function",
            "name": "_update_wrapper",
            "args": [
                "wrapper",
                "wrapped",
                "assigned",
                "updated"
            ],
            "lineno": 830
        },
        {
            "type": "function",
            "name": "wraps",
            "args": [
                "wrapped",
                "assigned",
                "updated"
            ],
            "lineno": 846
        },
        {
            "type": "class",
            "name": "metaclass",
            "methods": [
                "Method `__new__` (line 863)",
                "Method `__prepare__` (line 875)"
            ],
            "lineno": 861
        },
        {
            "type": "function",
            "name": "wrapper",
            "args": [
                "cls"
            ],
            "lineno": 882
        },
        {
            "type": "class",
            "name": "X",
            "methods": [
                "Method `__len__` (line 62)"
            ],
            "lineno": 60
        },
        {
            "type": "function",
            "name": "advance_iterator",
            "args": [
                "it"
            ],
            "lineno": 547
        },
        {
            "type": "function",
            "name": "callable",
            "args": [
                "obj"
            ],
            "lineno": 555
        },
        {
            "type": "function",
            "name": "next",
            "args": [
                "self"
            ],
            "lineno": 581
        },
        {
            "type": "function",
            "name": "write",
            "args": [
                "data"
            ],
            "lineno": 765
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "name",
                "this_bases",
                "d"
            ],
            "lineno": 863
        },
        {
            "type": "function",
            "name": "__prepare__",
            "args": [
                "cls",
                "name",
                "this_bases"
            ],
            "lineno": 875
        },
        {
            "type": "function",
            "name": "__len__",
            "args": [
                "self"
            ],
            "lineno": 62
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/typing_extensions.py": [
        {
            "type": "class",
            "name": "_Sentinel",
            "methods": [
                "Method `__repr__` (line 140)"
            ],
            "lineno": 139
        },
        {
            "type": "function",
            "name": "_check_generic",
            "args": [
                "cls",
                "parameters",
                "elen"
            ],
            "lineno": 147
        },
        {
            "type": "function",
            "name": "_collect_type_vars",
            "args": [
                "types",
                "typevar_types"
            ],
            "lineno": 181
        },
        {
            "type": "class",
            "name": "_ExtensionsSpecialForm",
            "methods": [
                "Method `__repr__` (line 247)"
            ],
            "lineno": 246
        },
        {
            "type": "function",
            "name": "IntVar",
            "args": [
                "name"
            ],
            "lineno": 316
        },
        {
            "type": "function",
            "name": "_get_protocol_attrs",
            "args": [
                "cls"
            ],
            "lineno": 526
        },
        {
            "type": "function",
            "name": "_maybe_adjust_parameters",
            "args": [
                "cls"
            ],
            "lineno": 538
        },
        {
            "type": "function",
            "name": "_caller",
            "args": [
                "depth"
            ],
            "lineno": 578
        },
        {
            "type": "function",
            "name": "_ensure_subclassable",
            "args": [
                "mro_entries"
            ],
            "lineno": 956
        },
        {
            "type": "function",
            "name": "_set_default",
            "args": [
                "type_param",
                "default"
            ],
            "lineno": 1482
        },
        {
            "type": "function",
            "name": "_set_module",
            "args": [
                "typevarlike"
            ],
            "lineno": 1492
        },
        {
            "type": "class",
            "name": "_DefaultMixin",
            "methods": null,
            "lineno": 1499
        },
        {
            "type": "class",
            "name": "_TypeVarLikeMeta",
            "methods": [
                "Method `__instancecheck__` (line 1508)"
            ],
            "lineno": 1507
        },
        {
            "type": "class",
            "name": "TypeVar",
            "methods": [
                "Method `__new__` (line 1518)",
                "Method `__init_subclass__` (line 1536)"
            ],
            "lineno": 1513
        },
        {
            "type": "function",
            "name": "_concatenate_getitem",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 1775
        },
        {
            "type": "class",
            "name": "_SpecialForm",
            "methods": [
                "Method `__init__` (line 1935)",
                "Method `__getattr__` (line 1940)",
                "Method `__mro_entries__` (line 1946)",
                "Method `__repr__` (line 1949)",
                "Method `__reduce__` (line 1952)",
                "Method `__call__` (line 1955)",
                "Method `__or__` (line 1958)",
                "Method `__ror__` (line 1961)",
                "Method `__instancecheck__` (line 1964)",
                "Method `__subclasscheck__` (line 1967)",
                "Method `__getitem__` (line 1971)"
            ],
            "lineno": 1932
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 140
        },
        {
            "type": "function",
            "name": "_should_collect_from_parameters",
            "args": [
                "t"
            ],
            "lineno": 169
        },
        {
            "type": "class",
            "name": "_AnyMeta",
            "methods": [
                "Method `__instancecheck__` (line 218)",
                "Method `__repr__` (line 223)"
            ],
            "lineno": 217
        },
        {
            "type": "class",
            "name": "Any",
            "methods": [
                "Method `__new__` (line 237)"
            ],
            "lineno": 228
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 247
        },
        {
            "type": "class",
            "name": "_FinalForm",
            "methods": [
                "Method `__getitem__` (line 258)"
            ],
            "lineno": 257
        },
        {
            "type": "function",
            "name": "final",
            "args": [
                "f"
            ],
            "lineno": 284
        },
        {
            "type": "function",
            "name": "_flatten_literal_params",
            "args": [
                "parameters"
            ],
            "lineno": 324
        },
        {
            "type": "function",
            "name": "_value_and_type_iter",
            "args": [
                "params"
            ],
            "lineno": 334
        },
        {
            "type": "class",
            "name": "_LiteralGenericAlias",
            "methods": [
                "Method `__eq__` (line 339)",
                "Method `__hash__` (line 346)"
            ],
            "lineno": 338
        },
        {
            "type": "class",
            "name": "_LiteralForm",
            "methods": [
                "Method `__init__` (line 350)",
                "Method `__getitem__` (line 354)"
            ],
            "lineno": 349
        },
        {
            "type": "function",
            "name": "overload",
            "args": [
                "func"
            ],
            "lineno": 407
        },
        {
            "type": "function",
            "name": "get_overloads",
            "args": [
                "func"
            ],
            "lineno": 447
        },
        {
            "type": "function",
            "name": "clear_overloads",
            "args": [],
            "lineno": 458
        },
        {
            "type": "function",
            "name": "_allow_reckless_class_checks",
            "args": [
                "depth"
            ],
            "lineno": 590
        },
        {
            "type": "function",
            "name": "_no_init",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 597
        },
        {
            "type": "class",
            "name": "_ProtocolMeta",
            "methods": [
                "Method `__new__` (line 618)",
                "Method `__init__` (line 634)",
                "Method `__subclasscheck__` (line 644)",
                "Method `__instancecheck__` (line 668)",
                "Method `__eq__` (line 699)",
                "Method `__hash__` (line 712)"
            ],
            "lineno": 611
        },
        {
            "type": "function",
            "name": "_proto_hook",
            "args": [
                "cls",
                "other"
            ],
            "lineno": 716
        },
        {
            "type": "function",
            "name": "runtime_checkable",
            "args": [
                "cls"
            ],
            "lineno": 857
        },
        {
            "type": "class",
            "name": "SupportsInt",
            "methods": [
                "Method `__int__` (line 895)"
            ],
            "lineno": 890
        },
        {
            "type": "class",
            "name": "SupportsFloat",
            "methods": [
                "Method `__float__` (line 904)"
            ],
            "lineno": 899
        },
        {
            "type": "class",
            "name": "SupportsComplex",
            "methods": [
                "Method `__complex__` (line 913)"
            ],
            "lineno": 908
        },
        {
            "type": "class",
            "name": "SupportsBytes",
            "methods": [
                "Method `__bytes__` (line 922)"
            ],
            "lineno": 917
        },
        {
            "type": "class",
            "name": "SupportsIndex",
            "methods": [
                "Method `__index__` (line 930)"
            ],
            "lineno": 926
        },
        {
            "type": "class",
            "name": "SupportsAbs",
            "methods": [
                "Method `__abs__` (line 941)"
            ],
            "lineno": 934
        },
        {
            "type": "class",
            "name": "SupportsRound",
            "methods": [
                "Method `__round__` (line 952)"
            ],
            "lineno": 945
        },
        {
            "type": "function",
            "name": "inner",
            "args": [
                "func"
            ],
            "lineno": 957
        },
        {
            "type": "class",
            "name": "_TypedDictMeta",
            "methods": [
                "Method `__new__` (line 995)",
                "Method `__subclasscheck__` (line 1071)"
            ],
            "lineno": 994
        },
        {
            "type": "function",
            "name": "TypedDict",
            "args": [
                "__typename",
                "__fields",
                "**kwargs"
            ],
            "lineno": 1080
        },
        {
            "type": "function",
            "name": "is_typeddict",
            "args": [
                "tp"
            ],
            "lineno": 1168
        },
        {
            "type": "function",
            "name": "assert_type",
            "args": [
                "__val",
                "__typ"
            ],
            "lineno": 1189
        },
        {
            "type": "function",
            "name": "_strip_extras",
            "args": [
                "t"
            ],
            "lineno": 1209
        },
        {
            "type": "function",
            "name": "get_type_hints",
            "args": [
                "obj",
                "globalns",
                "localns",
                "include_extras"
            ],
            "lineno": 1233
        },
        {
            "type": "class",
            "name": "_AnnotatedAlias",
            "methods": [
                "Method `__init__` (line 1292)",
                "Method `copy_with` (line 1299)",
                "Method `__repr__` (line 1304)",
                "Method `__reduce__` (line 1308)",
                "Method `__eq__` (line 1313)",
                "Method `__hash__` (line 1320)"
            ],
            "lineno": 1284
        },
        {
            "type": "class",
            "name": "Annotated",
            "methods": [
                "Method `__new__` (line 1358)",
                "Method `__class_getitem__` (line 1362)",
                "Method `__init_subclass__` (line 1376)"
            ],
            "lineno": 1323
        },
        {
            "type": "function",
            "name": "get_origin",
            "args": [
                "tp"
            ],
            "lineno": 1400
        },
        {
            "type": "function",
            "name": "get_args",
            "args": [
                "tp"
            ],
            "lineno": 1424
        },
        {
            "type": "function",
            "name": "__instancecheck__",
            "args": [
                "cls",
                "__instance"
            ],
            "lineno": 1508
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "name",
                "*constraints"
            ],
            "lineno": 1518
        },
        {
            "type": "function",
            "name": "__init_subclass__",
            "args": [
                "cls"
            ],
            "lineno": 1536
        },
        {
            "type": "class",
            "name": "_Immutable",
            "methods": [
                "Method `__copy__` (line 1550)",
                "Method `__deepcopy__` (line 1553)"
            ],
            "lineno": 1546
        },
        {
            "type": "class",
            "name": "ParamSpecArgs",
            "methods": [
                "Method `__init__` (line 1568)",
                "Method `__repr__` (line 1571)",
                "Method `__eq__` (line 1574)"
            ],
            "lineno": 1556
        },
        {
            "type": "class",
            "name": "ParamSpecKwargs",
            "methods": [
                "Method `__init__` (line 1591)",
                "Method `__repr__` (line 1594)",
                "Method `__eq__` (line 1597)"
            ],
            "lineno": 1579
        },
        {
            "type": "class",
            "name": "ParamSpec",
            "methods": [
                "Method `__new__` (line 1611)",
                "Method `__init_subclass__` (line 1630)"
            ],
            "lineno": 1606
        },
        {
            "type": "class",
            "name": "ParamSpec",
            "methods": [
                "Method `args` (line 1688)",
                "Method `kwargs` (line 1692)",
                "Method `__init__` (line 1695)",
                "Method `__repr__` (line 1713)",
                "Method `__hash__` (line 1724)",
                "Method `__eq__` (line 1727)",
                "Method `__reduce__` (line 1730)",
                "Method `__call__` (line 1734)"
            ],
            "lineno": 1637
        },
        {
            "type": "class",
            "name": "_ConcatenateGenericAlias",
            "methods": [
                "Method `__init__` (line 1749)",
                "Method `__repr__` (line 1754)",
                "Method `__hash__` (line 1759)",
                "Method `__call__` (line 1763)",
                "Method `__parameters__` (line 1767)"
            ],
            "lineno": 1741
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "getitem"
            ],
            "lineno": 1935
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "item"
            ],
            "lineno": 1940
        },
        {
            "type": "function",
            "name": "__mro_entries__",
            "args": [
                "self",
                "bases"
            ],
            "lineno": 1946
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 1949
        },
        {
            "type": "function",
            "name": "__reduce__",
            "args": [
                "self"
            ],
            "lineno": 1952
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "*args",
                "**kwds"
            ],
            "lineno": 1955
        },
        {
            "type": "function",
            "name": "__or__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1958
        },
        {
            "type": "function",
            "name": "__ror__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1961
        },
        {
            "type": "function",
            "name": "__instancecheck__",
            "args": [
                "self",
                "obj"
            ],
            "lineno": 1964
        },
        {
            "type": "function",
            "name": "__subclasscheck__",
            "args": [
                "self",
                "cls"
            ],
            "lineno": 1967
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 1971
        },
        {
            "type": "function",
            "name": "LiteralString",
            "args": [
                "self",
                "params"
            ],
            "lineno": 1979
        },
        {
            "type": "function",
            "name": "Self",
            "args": [
                "self",
                "params"
            ],
            "lineno": 2002
        },
        {
            "type": "function",
            "name": "Never",
            "args": [
                "self",
                "params"
            ],
            "lineno": 2023
        },
        {
            "type": "function",
            "name": "_is_unpack",
            "args": [
                "obj"
            ],
            "lineno": 2175
        },
        {
            "type": "class",
            "name": "TypeVarTuple",
            "methods": [
                "Method `__new__` (line 2219)",
                "Method `__init_subclass__` (line 2225)"
            ],
            "lineno": 2214
        },
        {
            "type": "class",
            "name": "TypeVarTuple",
            "methods": [
                "Method `__iter__` (line 2276)",
                "Method `__init__` (line 2279)",
                "Method `__repr__` (line 2290)",
                "Method `__hash__` (line 2293)",
                "Method `__eq__` (line 2296)",
                "Method `__reduce__` (line 2299)",
                "Method `__init_subclass__` (line 2302)"
            ],
            "lineno": 2229
        },
        {
            "type": "function",
            "name": "reveal_type",
            "args": [
                "__obj"
            ],
            "lineno": 2310
        },
        {
            "type": "function",
            "name": "assert_never",
            "args": [
                "__arg"
            ],
            "lineno": 2333
        },
        {
            "type": "function",
            "name": "dataclass_transform",
            "args": [
                "**kwargs"
            ],
            "lineno": 2360
        },
        {
            "type": "function",
            "name": "override",
            "args": [
                "__arg"
            ],
            "lineno": 2451
        },
        {
            "type": "function",
            "name": "deprecated",
            "args": [
                "__msg"
            ],
            "lineno": 2492
        },
        {
            "type": "function",
            "name": "_make_nmtuple",
            "args": [
                "name",
                "types",
                "module",
                "defaults"
            ],
            "lineno": 2595
        },
        {
            "type": "class",
            "name": "_NamedTupleMeta",
            "methods": [
                "Method `__new__` (line 2612)"
            ],
            "lineno": 2611
        },
        {
            "type": "function",
            "name": "_namedtuple_mro_entries",
            "args": [
                "bases"
            ],
            "lineno": 2653
        },
        {
            "type": "function",
            "name": "NamedTuple",
            "args": [
                "__typename",
                "__fields",
                "**kwargs"
            ],
            "lineno": 2658
        },
        {
            "type": "class",
            "name": "Buffer",
            "methods": null,
            "lineno": 2737
        },
        {
            "type": "function",
            "name": "get_original_bases",
            "args": [
                "__cls"
            ],
            "lineno": 2767
        },
        {
            "type": "class",
            "name": "NewType",
            "methods": [
                "Method `__call__` (line 2818)",
                "Method `__init__` (line 2821)",
                "Method `__mro_entries__` (line 2831)",
                "Method `__repr__` (line 2847)",
                "Method `__reduce__` (line 2850)"
            ],
            "lineno": 2804
        },
        {
            "type": "function",
            "name": "_is_unionable",
            "args": [
                "obj"
            ],
            "lineno": 2867
        },
        {
            "type": "class",
            "name": "TypeAliasType",
            "methods": [
                "Method `__init__` (line 2904)",
                "Method `__setattr__` (line 2923)",
                "Method `__delattr__` (line 2928)",
                "Method `_raise_attribute_error` (line 2931)",
                "Method `__repr__` (line 2945)",
                "Method `__getitem__` (line 2948)",
                "Method `__reduce__` (line 2959)",
                "Method `__init_subclass__` (line 2962)",
                "Method `__call__` (line 2969)"
            ],
            "lineno": 2876
        },
        {
            "type": "function",
            "name": "is_protocol",
            "args": [
                "__tp"
            ],
            "lineno": 2990
        },
        {
            "type": "function",
            "name": "get_protocol_members",
            "args": [
                "__tp"
            ],
            "lineno": 3011
        },
        {
            "type": "function",
            "name": "_should_collect_from_parameters",
            "args": [
                "t"
            ],
            "lineno": 174
        },
        {
            "type": "function",
            "name": "_should_collect_from_parameters",
            "args": [
                "t"
            ],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "__instancecheck__",
            "args": [
                "self",
                "obj"
            ],
            "lineno": 218
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 223
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "*args",
                "**kwargs"
            ],
            "lineno": 237
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 258
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 339
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 346
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "doc"
            ],
            "lineno": 350
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 354
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "mcls",
                "name",
                "bases",
                "namespace",
                "**kwargs"
            ],
            "lineno": 618
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "cls",
                "*args",
                "**kwargs"
            ],
            "lineno": 634
        },
        {
            "type": "function",
            "name": "__subclasscheck__",
            "args": [
                "cls",
                "other"
            ],
            "lineno": 644
        },
        {
            "type": "function",
            "name": "__instancecheck__",
            "args": [
                "cls",
                "instance"
            ],
            "lineno": 668
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "cls",
                "other"
            ],
            "lineno": 699
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "cls"
            ],
            "lineno": 712
        },
        {
            "type": "class",
            "name": "Protocol",
            "methods": [
                "Method `__init_subclass__` (line 747)"
            ],
            "lineno": 741
        },
        {
            "type": "class",
            "name": "Protocol",
            "methods": [
                "Method `__new__` (line 800)",
                "Method `__class_getitem__` (line 807)",
                "Method `__init_subclass__` (line 832)"
            ],
            "lineno": 763
        },
        {
            "type": "function",
            "name": "__int__",
            "args": [
                "self"
            ],
            "lineno": 895
        },
        {
            "type": "function",
            "name": "__float__",
            "args": [
                "self"
            ],
            "lineno": 904
        },
        {
            "type": "function",
            "name": "__complex__",
            "args": [
                "self"
            ],
            "lineno": 913
        },
        {
            "type": "function",
            "name": "__bytes__",
            "args": [
                "self"
            ],
            "lineno": 922
        },
        {
            "type": "function",
            "name": "__index__",
            "args": [
                "self"
            ],
            "lineno": 930
        },
        {
            "type": "function",
            "name": "__abs__",
            "args": [
                "self"
            ],
            "lineno": 941
        },
        {
            "type": "function",
            "name": "__round__",
            "args": [
                "self",
                "ndigits"
            ],
            "lineno": 952
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "name",
                "bases",
                "ns",
                "total"
            ],
            "lineno": 995
        },
        {
            "type": "function",
            "name": "__subclasscheck__",
            "args": [
                "cls",
                "other"
            ],
            "lineno": 1071
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "origin",
                "metadata"
            ],
            "lineno": 1292
        },
        {
            "type": "function",
            "name": "copy_with",
            "args": [
                "self",
                "params"
            ],
            "lineno": 1299
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 1304
        },
        {
            "type": "function",
            "name": "__reduce__",
            "args": [
                "self"
            ],
            "lineno": 1308
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1313
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 1320
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "*args",
                "**kwargs"
            ],
            "lineno": 1358
        },
        {
            "type": "function",
            "name": "__class_getitem__",
            "args": [
                "cls",
                "params"
            ],
            "lineno": 1362
        },
        {
            "type": "function",
            "name": "__init_subclass__",
            "args": [
                "cls",
                "*args",
                "**kwargs"
            ],
            "lineno": 1376
        },
        {
            "type": "function",
            "name": "TypeAlias",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 1453
        },
        {
            "type": "function",
            "name": "__copy__",
            "args": [
                "self"
            ],
            "lineno": 1550
        },
        {
            "type": "function",
            "name": "__deepcopy__",
            "args": [
                "self",
                "memo"
            ],
            "lineno": 1553
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "origin"
            ],
            "lineno": 1568
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 1571
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1574
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "origin"
            ],
            "lineno": 1591
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 1594
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1597
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "name"
            ],
            "lineno": 1611
        },
        {
            "type": "function",
            "name": "__init_subclass__",
            "args": [
                "cls"
            ],
            "lineno": 1630
        },
        {
            "type": "function",
            "name": "args",
            "args": [
                "self"
            ],
            "lineno": 1688
        },
        {
            "type": "function",
            "name": "kwargs",
            "args": [
                "self"
            ],
            "lineno": 1692
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 1695
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 1713
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 1724
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1727
        },
        {
            "type": "function",
            "name": "__reduce__",
            "args": [
                "self"
            ],
            "lineno": 1730
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 1734
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "origin",
                "args"
            ],
            "lineno": 1749
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 1754
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 1759
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 1763
        },
        {
            "type": "function",
            "name": "__parameters__",
            "args": [
                "self"
            ],
            "lineno": 1767
        },
        {
            "type": "function",
            "name": "Concatenate",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 1795
        },
        {
            "type": "class",
            "name": "_ConcatenateForm",
            "methods": [
                "Method `__getitem__` (line 1810)"
            ],
            "lineno": 1809
        },
        {
            "type": "function",
            "name": "TypeGuard",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 1832
        },
        {
            "type": "class",
            "name": "_TypeGuardForm",
            "methods": [
                "Method `__getitem__` (line 1880)"
            ],
            "lineno": 1879
        },
        {
            "type": "function",
            "name": "Required",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 2054
        },
        {
            "type": "function",
            "name": "NotRequired",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 2074
        },
        {
            "type": "class",
            "name": "_RequiredForm",
            "methods": [
                "Method `__getitem__` (line 2092)"
            ],
            "lineno": 2091
        },
        {
            "type": "class",
            "name": "_UnpackSpecialForm",
            "methods": [
                "Method `__init__` (line 2180)"
            ],
            "lineno": 2179
        },
        {
            "type": "class",
            "name": "_UnpackAlias",
            "methods": null,
            "lineno": 2184
        },
        {
            "type": "function",
            "name": "Unpack",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 2188
        },
        {
            "type": "function",
            "name": "_is_unpack",
            "args": [
                "obj"
            ],
            "lineno": 2192
        },
        {
            "type": "class",
            "name": "_UnpackAlias",
            "methods": null,
            "lineno": 2196
        },
        {
            "type": "class",
            "name": "_UnpackForm",
            "methods": [
                "Method `__getitem__` (line 2200)"
            ],
            "lineno": 2199
        },
        {
            "type": "function",
            "name": "_is_unpack",
            "args": [
                "obj"
            ],
            "lineno": 2207
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "name"
            ],
            "lineno": 2219
        },
        {
            "type": "function",
            "name": "__init_subclass__",
            "args": [
                "self",
                "*args",
                "**kwds"
            ],
            "lineno": 2225
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 2276
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 2279
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 2290
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 2293
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 2296
        },
        {
            "type": "function",
            "name": "__reduce__",
            "args": [
                "self"
            ],
            "lineno": 2299
        },
        {
            "type": "function",
            "name": "__init_subclass__",
            "args": [
                "self",
                "*args",
                "**kwds"
            ],
            "lineno": 2302
        },
        {
            "type": "function",
            "name": "decorator",
            "args": [
                "cls_or_fn"
            ],
            "lineno": 2433
        },
        {
            "type": "function",
            "name": "decorator",
            "args": [
                "__arg"
            ],
            "lineno": 2536
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "typename",
                "bases",
                "ns"
            ],
            "lineno": 2612
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "obj"
            ],
            "lineno": 2818
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "tp"
            ],
            "lineno": 2821
        },
        {
            "type": "function",
            "name": "__mro_entries__",
            "args": [
                "self",
                "bases"
            ],
            "lineno": 2831
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 2847
        },
        {
            "type": "function",
            "name": "__reduce__",
            "args": [
                "self"
            ],
            "lineno": 2850
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "value"
            ],
            "lineno": 2904
        },
        {
            "type": "function",
            "name": "__setattr__",
            "args": [
                "self",
                "__name",
                "__value"
            ],
            "lineno": 2923
        },
        {
            "type": "function",
            "name": "__delattr__",
            "args": [
                "self",
                "__name"
            ],
            "lineno": 2928
        },
        {
            "type": "function",
            "name": "_raise_attribute_error",
            "args": [
                "self",
                "name"
            ],
            "lineno": 2931
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 2945
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 2948
        },
        {
            "type": "function",
            "name": "__reduce__",
            "args": [
                "self"
            ],
            "lineno": 2959
        },
        {
            "type": "function",
            "name": "__init_subclass__",
            "args": [
                "cls",
                "*args",
                "**kwargs"
            ],
            "lineno": 2962
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self"
            ],
            "lineno": 2969
        },
        {
            "type": "function",
            "name": "__init_subclass__",
            "args": [
                "cls",
                "*args",
                "**kwargs"
            ],
            "lineno": 747
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "*args",
                "**kwds"
            ],
            "lineno": 800
        },
        {
            "type": "function",
            "name": "__class_getitem__",
            "args": [
                "cls",
                "params"
            ],
            "lineno": 807
        },
        {
            "type": "function",
            "name": "__init_subclass__",
            "args": [
                "cls",
                "*args",
                "**kwargs"
            ],
            "lineno": 832
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 1810
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 1880
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 2092
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "getitem"
            ],
            "lineno": 2180
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "parameters"
            ],
            "lineno": 2200
        },
        {
            "type": "class",
            "name": "Dummy",
            "methods": [
                "Method `__init_subclass__` (line 2837)"
            ],
            "lineno": 2836
        },
        {
            "type": "function",
            "name": "__or__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 2857
        },
        {
            "type": "function",
            "name": "__ror__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 2860
        },
        {
            "type": "function",
            "name": "__or__",
            "args": [
                "self",
                "right"
            ],
            "lineno": 2973
        },
        {
            "type": "function",
            "name": "__ror__",
            "args": [
                "self",
                "left"
            ],
            "lineno": 2980
        },
        {
            "type": "function",
            "name": "__init_subclass__",
            "args": [
                "cls"
            ],
            "lineno": 2837
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "*args",
                "**kwargs"
            ],
            "lineno": 2545
        },
        {
            "type": "function",
            "name": "wrapper",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 2560
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/__init__.py": [
        {
            "type": "function",
            "name": "vendored",
            "args": [
                "modulename"
            ],
            "lineno": 29
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/cli/autocompletion.py": [
        {
            "type": "function",
            "name": "autocomplete",
            "args": [],
            "lineno": 15
        },
        {
            "type": "function",
            "name": "get_path_completion_type",
            "args": [
                "cwords",
                "cword",
                "opts"
            ],
            "lineno": 120
        },
        {
            "type": "function",
            "name": "auto_complete_paths",
            "args": [
                "current",
                "completion_type"
            ],
            "lineno": 144
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/cli/base_command.py": [
        {
            "type": "class",
            "name": "Command",
            "methods": [
                "Method `__init__` (line 49)",
                "Method `add_options` (line 79)",
                "Method `handle_pip_version_check` (line 82)",
                "Method `run` (line 91)",
                "Method `parse_args` (line 94)",
                "Method `main` (line 98)",
                "Method `_main` (line 105)"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "summary",
                "isolated"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "handle_pip_version_check",
            "args": [
                "self",
                "options"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "parse_args",
            "args": [
                "self",
                "args"
            ],
            "lineno": 94
        },
        {
            "type": "function",
            "name": "main",
            "args": [
                "self",
                "args"
            ],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "_main",
            "args": [
                "self",
                "args"
            ],
            "lineno": 105
        },
        {
            "type": "function",
            "name": "intercepts_unhandled_exc",
            "args": [
                "run_func"
            ],
            "lineno": 174
        },
        {
            "type": "function",
            "name": "exc_logging_wrapper",
            "args": [
                "*args"
            ],
            "lineno": 178
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/cli/cmdoptions.py": [
        {
            "type": "function",
            "name": "raise_option_error",
            "args": [
                "parser",
                "option",
                "msg"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "make_option_group",
            "args": [
                "group",
                "parser"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "check_dist_restriction",
            "args": [
                "options",
                "check_target"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "_path_option_check",
            "args": [
                "option",
                "opt",
                "value"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "_package_name_option_check",
            "args": [
                "option",
                "opt",
                "value"
            ],
            "lineno": 106
        },
        {
            "type": "class",
            "name": "PipOption",
            "methods": null,
            "lineno": 110
        },
        {
            "type": "function",
            "name": "exists_action",
            "args": [],
            "lineno": 299
        },
        {
            "type": "function",
            "name": "extra_index_url",
            "args": [],
            "lineno": 354
        },
        {
            "type": "function",
            "name": "find_links",
            "args": [],
            "lineno": 377
        },
        {
            "type": "function",
            "name": "trusted_host",
            "args": [],
            "lineno": 393
        },
        {
            "type": "function",
            "name": "constraints",
            "args": [],
            "lineno": 405
        },
        {
            "type": "function",
            "name": "requirements",
            "args": [],
            "lineno": 418
        },
        {
            "type": "function",
            "name": "editable",
            "args": [],
            "lineno": 431
        },
        {
            "type": "function",
            "name": "_handle_src",
            "args": [
                "option",
                "opt_str",
                "value",
                "parser"
            ],
            "lineno": 446
        },
        {
            "type": "function",
            "name": "_get_format_control",
            "args": [
                "values",
                "option"
            ],
            "lineno": 469
        },
        {
            "type": "function",
            "name": "_handle_no_binary",
            "args": [
                "option",
                "opt_str",
                "value",
                "parser"
            ],
            "lineno": 474
        },
        {
            "type": "function",
            "name": "_handle_only_binary",
            "args": [
                "option",
                "opt_str",
                "value",
                "parser"
            ],
            "lineno": 485
        },
        {
            "type": "function",
            "name": "no_binary",
            "args": [],
            "lineno": 496
        },
        {
            "type": "function",
            "name": "only_binary",
            "args": [],
            "lineno": 514
        },
        {
            "type": "function",
            "name": "_convert_python_version",
            "args": [
                "value"
            ],
            "lineno": 548
        },
        {
            "type": "function",
            "name": "_handle_python_version",
            "args": [
                "option",
                "opt_str",
                "value",
                "parser"
            ],
            "lineno": 577
        },
        {
            "type": "function",
            "name": "add_target_python_options",
            "args": [
                "cmd_opts"
            ],
            "lineno": 646
        },
        {
            "type": "function",
            "name": "make_target_python",
            "args": [
                "options"
            ],
            "lineno": 653
        },
        {
            "type": "function",
            "name": "prefer_binary",
            "args": [],
            "lineno": 664
        },
        {
            "type": "function",
            "name": "_handle_no_cache_dir",
            "args": [
                "option",
                "opt",
                "value",
                "parser"
            ],
            "lineno": 688
        },
        {
            "type": "function",
            "name": "_handle_no_use_pep517",
            "args": [
                "option",
                "opt",
                "value",
                "parser"
            ],
            "lineno": 765
        },
        {
            "type": "function",
            "name": "_handle_config_settings",
            "args": [
                "option",
                "opt_str",
                "value",
                "parser"
            ],
            "lineno": 821
        },
        {
            "type": "function",
            "name": "_handle_merge_hash",
            "args": [
                "option",
                "opt_str",
                "value",
                "parser"
            ],
            "lineno": 910
        },
        {
            "type": "function",
            "name": "check_list_path_option",
            "args": [
                "options"
            ],
            "lineno": 971
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/cli/command_context.py": [
        {
            "type": "class",
            "name": "CommandContextMixIn",
            "methods": [
                "Method `__init__` (line 8)",
                "Method `main_context` (line 14)",
                "Method `enter_context` (line 24)"
            ],
            "lineno": 7
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 8
        },
        {
            "type": "function",
            "name": "main_context",
            "args": [
                "self"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "enter_context",
            "args": [
                "self",
                "context_provider"
            ],
            "lineno": 24
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/cli/main.py": [
        {
            "type": "function",
            "name": "main",
            "args": [
                "args"
            ],
            "lineno": 46
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/cli/main_parser.py": [
        {
            "type": "function",
            "name": "create_main_parser",
            "args": [],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "identify_python_interpreter",
            "args": [
                "python"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "parse_command",
            "args": [
                "args"
            ],
            "lineno": 69
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/cli/parser.py": [
        {
            "type": "class",
            "name": "PrettyHelpFormatter",
            "methods": [
                "Method `__init__` (line 21)",
                "Method `format_option_strings` (line 28)",
                "Method `_format_option_strings` (line 31)",
                "Method `format_heading` (line 57)",
                "Method `format_usage` (line 62)",
                "Method `format_description` (line 70)",
                "Method `format_epilog` (line 88)",
                "Method `indent_lines` (line 95)"
            ],
            "lineno": 18
        },
        {
            "type": "class",
            "name": "UpdatingDefaultsHelpFormatter",
            "methods": [
                "Method `expand_default` (line 109)"
            ],
            "lineno": 100
        },
        {
            "type": "class",
            "name": "CustomOptionParser",
            "methods": [
                "Method `insert_option_group` (line 133)",
                "Method `option_list_all` (line 145)"
            ],
            "lineno": 132
        },
        {
            "type": "class",
            "name": "ConfigOptionParser",
            "methods": [
                "Method `__init__` (line 158)",
                "Method `check_default` (line 171)",
                "Method `_get_ordered_configuration_items` (line 178)",
                "Method `_update_defaults` (line 206)",
                "Method `get_default_values` (line 270)",
                "Method `error` (line 292)"
            ],
            "lineno": 154
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "format_option_strings",
            "args": [
                "self",
                "option"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "_format_option_strings",
            "args": [
                "self",
                "option",
                "mvarfmt",
                "optsep"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "format_heading",
            "args": [
                "self",
                "heading"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "format_usage",
            "args": [
                "self",
                "usage"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "format_description",
            "args": [
                "self",
                "description"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "format_epilog",
            "args": [
                "self",
                "epilog"
            ],
            "lineno": 88
        },
        {
            "type": "function",
            "name": "indent_lines",
            "args": [
                "self",
                "text",
                "indent"
            ],
            "lineno": 95
        },
        {
            "type": "function",
            "name": "expand_default",
            "args": [
                "self",
                "option"
            ],
            "lineno": 109
        },
        {
            "type": "function",
            "name": "insert_option_group",
            "args": [
                "self",
                "idx",
                "*args",
                "**kwargs"
            ],
            "lineno": 133
        },
        {
            "type": "function",
            "name": "option_list_all",
            "args": [
                "self"
            ],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 158
        },
        {
            "type": "function",
            "name": "check_default",
            "args": [
                "self",
                "option",
                "key",
                "val"
            ],
            "lineno": 171
        },
        {
            "type": "function",
            "name": "_get_ordered_configuration_items",
            "args": [
                "self"
            ],
            "lineno": 178
        },
        {
            "type": "function",
            "name": "_update_defaults",
            "args": [
                "self",
                "defaults"
            ],
            "lineno": 206
        },
        {
            "type": "function",
            "name": "get_default_values",
            "args": [
                "self"
            ],
            "lineno": 270
        },
        {
            "type": "function",
            "name": "error",
            "args": [
                "self",
                "msg"
            ],
            "lineno": 292
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/cli/progress_bars.py": [
        {
            "type": "function",
            "name": "_rich_progress_bar",
            "args": [
                "iterable"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "get_download_progress_renderer",
            "args": [],
            "lineno": 58
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/cli/req_command.py": [
        {
            "type": "function",
            "name": "_create_truststore_ssl_context",
            "args": [],
            "lineno": 50
        },
        {
            "type": "class",
            "name": "SessionCommandMixin",
            "methods": [
                "Method `__init__` (line 74)",
                "Method `_get_index_urls` (line 79)",
                "Method `get_default_session` (line 92)",
                "Method `_build_session` (line 102)"
            ],
            "lineno": 68
        },
        {
            "type": "class",
            "name": "IndexGroupCommand",
            "methods": [
                "Method `handle_pip_version_check` (line 164)"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "warn_if_run_as_root",
            "args": [],
            "lineno": 198
        },
        {
            "type": "function",
            "name": "with_cleanup",
            "args": [
                "func"
            ],
            "lineno": 228
        },
        {
            "type": "class",
            "name": "RequirementCommand",
            "methods": [
                "Method `__init__` (line 257)",
                "Method `determine_resolver_variant` (line 263)",
                "Method `make_requirement_preparer` (line 271)",
                "Method `make_resolver` (line 326)",
                "Method `get_requirements` (line 384)",
                "Method `trace_basic_info` (line 469)",
                "Method `_build_package_finder` (line 479)"
            ],
            "lineno": 256
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 74
        },
        {
            "type": "function",
            "name": "_get_index_urls",
            "args": [
                "cls",
                "options"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "get_default_session",
            "args": [
                "self",
                "options"
            ],
            "lineno": 92
        },
        {
            "type": "function",
            "name": "_build_session",
            "args": [
                "self",
                "options",
                "retries",
                "timeout",
                "fallback_to_certifi"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "handle_pip_version_check",
            "args": [
                "self",
                "options"
            ],
            "lineno": 164
        },
        {
            "type": "function",
            "name": "configure_tempdir_registry",
            "args": [
                "registry"
            ],
            "lineno": 233
        },
        {
            "type": "function",
            "name": "wrapper",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 237
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*args",
                "**kw"
            ],
            "lineno": 257
        },
        {
            "type": "function",
            "name": "determine_resolver_variant",
            "args": [
                "options"
            ],
            "lineno": 263
        },
        {
            "type": "function",
            "name": "make_requirement_preparer",
            "args": [
                "cls",
                "temp_build_dir",
                "options",
                "build_tracker",
                "session",
                "finder",
                "use_user_site",
                "download_dir",
                "verbosity"
            ],
            "lineno": 271
        },
        {
            "type": "function",
            "name": "make_resolver",
            "args": [
                "cls",
                "preparer",
                "finder",
                "options",
                "wheel_cache",
                "use_user_site",
                "ignore_installed",
                "ignore_requires_python",
                "force_reinstall",
                "upgrade_strategy",
                "use_pep517",
                "py_version_info"
            ],
            "lineno": 326
        },
        {
            "type": "function",
            "name": "get_requirements",
            "args": [
                "self",
                "args",
                "options",
                "finder",
                "session"
            ],
            "lineno": 384
        },
        {
            "type": "function",
            "name": "trace_basic_info",
            "args": [
                "finder"
            ],
            "lineno": 469
        },
        {
            "type": "function",
            "name": "_build_package_finder",
            "args": [
                "self",
                "options",
                "session",
                "target_python",
                "ignore_requires_python"
            ],
            "lineno": 479
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/cli/spinners.py": [
        {
            "type": "class",
            "name": "SpinnerInterface",
            "methods": [
                "Method `spin` (line 15)",
                "Method `finish` (line 18)"
            ],
            "lineno": 14
        },
        {
            "type": "class",
            "name": "InteractiveSpinner",
            "methods": [
                "Method `__init__` (line 23)",
                "Method `_write` (line 43)",
                "Method `spin` (line 55)",
                "Method `finish` (line 62)"
            ],
            "lineno": 22
        },
        {
            "type": "class",
            "name": "NonInteractiveSpinner",
            "methods": [
                "Method `__init__` (line 76)",
                "Method `_update` (line 82)",
                "Method `spin` (line 87)",
                "Method `finish` (line 94)"
            ],
            "lineno": 75
        },
        {
            "type": "class",
            "name": "RateLimiter",
            "methods": [
                "Method `__init__` (line 102)",
                "Method `ready` (line 106)",
                "Method `reset` (line 111)"
            ],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "open_spinner",
            "args": [
                "message"
            ],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "hidden_cursor",
            "args": [
                "file"
            ],
            "lineno": 144
        },
        {
            "type": "function",
            "name": "spin",
            "args": [
                "self"
            ],
            "lineno": 15
        },
        {
            "type": "function",
            "name": "finish",
            "args": [
                "self",
                "final_status"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "message",
                "file",
                "spin_chars",
                "min_update_interval_seconds"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "_write",
            "args": [
                "self",
                "status"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "spin",
            "args": [
                "self"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "finish",
            "args": [
                "self",
                "final_status"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "message",
                "min_update_interval_seconds"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "_update",
            "args": [
                "self",
                "status"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "spin",
            "args": [
                "self"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "finish",
            "args": [
                "self",
                "final_status"
            ],
            "lineno": 94
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "min_update_interval_seconds"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "ready",
            "args": [
                "self"
            ],
            "lineno": 106
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 111
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/cli/status_codes.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/cli/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/cache.py": [
        {
            "type": "class",
            "name": "CacheCommand",
            "methods": [
                "Method `add_options` (line 39)",
                "Method `run` (line 51)",
                "Method `get_cache_dir` (line 83)",
                "Method `get_cache_info` (line 89)",
                "Method `list_cache_items` (line 131)",
                "Method `format_for_human` (line 146)",
                "Method `format_for_abspath` (line 159)",
                "Method `remove_cache_items` (line 163)",
                "Method `purge_cache` (line 188)",
                "Method `_cache_dir` (line 194)",
                "Method `_find_http_files` (line 197)",
                "Method `_find_wheels` (line 204)"
            ],
            "lineno": 15
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "get_cache_dir",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "get_cache_info",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "list_cache_items",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 131
        },
        {
            "type": "function",
            "name": "format_for_human",
            "args": [
                "self",
                "files"
            ],
            "lineno": 146
        },
        {
            "type": "function",
            "name": "format_for_abspath",
            "args": [
                "self",
                "files"
            ],
            "lineno": 159
        },
        {
            "type": "function",
            "name": "remove_cache_items",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 163
        },
        {
            "type": "function",
            "name": "purge_cache",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 188
        },
        {
            "type": "function",
            "name": "_cache_dir",
            "args": [
                "self",
                "options",
                "subdir"
            ],
            "lineno": 194
        },
        {
            "type": "function",
            "name": "_find_http_files",
            "args": [
                "self",
                "options"
            ],
            "lineno": 197
        },
        {
            "type": "function",
            "name": "_find_wheels",
            "args": [
                "self",
                "options",
                "pattern"
            ],
            "lineno": 204
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/check.py": [
        {
            "type": "class",
            "name": "CheckCommand",
            "methods": [
                "Method `run` (line 23)"
            ],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 23
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/completion.py": [
        {
            "type": "class",
            "name": "CompletionCommand",
            "methods": [
                "Method `add_options` (line 80)",
                "Method `run` (line 116)"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 116
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/configuration.py": [
        {
            "type": "class",
            "name": "ConfigurationCommand",
            "methods": [
                "Method `add_options` (line 58)",
                "Method `run` (line 96)",
                "Method `_determine_file` (line 141)",
                "Method `list_values` (line 171)",
                "Method `get_name` (line 177)",
                "Method `set_name_value` (line 183)",
                "Method `unset_name` (line 189)",
                "Method `list_config_values` (line 195)",
                "Method `print_config_file_values` (line 211)",
                "Method `print_env_var_values` (line 217)",
                "Method `open_in_editor` (line 225)",
                "Method `_get_n_args` (line 247)",
                "Method `_save_configuration` (line 261)",
                "Method `_determine_editor` (line 272)"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "_determine_file",
            "args": [
                "self",
                "options",
                "need_value"
            ],
            "lineno": 141
        },
        {
            "type": "function",
            "name": "list_values",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 171
        },
        {
            "type": "function",
            "name": "get_name",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "set_name_value",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 183
        },
        {
            "type": "function",
            "name": "unset_name",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 189
        },
        {
            "type": "function",
            "name": "list_config_values",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 195
        },
        {
            "type": "function",
            "name": "print_config_file_values",
            "args": [
                "self",
                "variant"
            ],
            "lineno": 211
        },
        {
            "type": "function",
            "name": "print_env_var_values",
            "args": [
                "self"
            ],
            "lineno": 217
        },
        {
            "type": "function",
            "name": "open_in_editor",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 225
        },
        {
            "type": "function",
            "name": "_get_n_args",
            "args": [
                "self",
                "args",
                "example",
                "n"
            ],
            "lineno": 247
        },
        {
            "type": "function",
            "name": "_save_configuration",
            "args": [
                "self"
            ],
            "lineno": 261
        },
        {
            "type": "function",
            "name": "_determine_editor",
            "args": [
                "self",
                "options"
            ],
            "lineno": 272
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/debug.py": [
        {
            "type": "function",
            "name": "show_value",
            "args": [
                "name",
                "value"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "show_sys_implementation",
            "args": [],
            "lineno": 30
        },
        {
            "type": "function",
            "name": "create_vendor_txt_map",
            "args": [],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "get_module_from_module_name",
            "args": [
                "module_name"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "get_vendor_version_from_module",
            "args": [
                "module_name"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "show_actual_vendor_versions",
            "args": [
                "vendor_txt_versions"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "show_vendor_versions",
            "args": [],
            "lineno": 103
        },
        {
            "type": "function",
            "name": "show_tags",
            "args": [
                "options"
            ],
            "lineno": 111
        },
        {
            "type": "function",
            "name": "ca_bundle_info",
            "args": [
                "config"
            ],
            "lineno": 141
        },
        {
            "type": "class",
            "name": "DebugCommand",
            "methods": [
                "Method `add_options` (line 167)",
                "Method `run` (line 172)"
            ],
            "lineno": 158
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 167
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 172
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/download.py": [
        {
            "type": "class",
            "name": "DownloadCommand",
            "methods": [
                "Method `add_options` (line 38)",
                "Method `run` (line 78)"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 78
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/freeze.py": [
        {
            "type": "function",
            "name": "_should_suppress_build_backends",
            "args": [],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "_dev_pkgs",
            "args": [],
            "lineno": 16
        },
        {
            "type": "class",
            "name": "FreezeCommand",
            "methods": [
                "Method `add_options` (line 36)",
                "Method `run` (line 88)"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 88
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/hash.py": [
        {
            "type": "class",
            "name": "HashCommand",
            "methods": [
                "Method `add_options` (line 26)",
                "Method `run` (line 40)"
            ],
            "lineno": 15
        },
        {
            "type": "function",
            "name": "_hash_of_file",
            "args": [
                "path",
                "algorithm"
            ],
            "lineno": 53
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 40
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/help.py": [
        {
            "type": "class",
            "name": "HelpCommand",
            "methods": [
                "Method `run` (line 16)"
            ],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 16
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/index.py": [
        {
            "type": "class",
            "name": "IndexCommand",
            "methods": [
                "Method `add_options` (line 32)",
                "Method `run` (line 48)",
                "Method `_build_package_finder` (line 78)",
                "Method `get_available_package_versions` (line 103)"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "_build_package_finder",
            "args": [
                "self",
                "options",
                "session",
                "target_python",
                "ignore_requires_python"
            ],
            "lineno": 78
        },
        {
            "type": "function",
            "name": "get_available_package_versions",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 103
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/inspect.py": [
        {
            "type": "class",
            "name": "InspectCommand",
            "methods": [
                "Method `add_options` (line 28)",
                "Method `run` (line 48)",
                "Method `_dist_to_dict` (line 65)"
            ],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "_dist_to_dict",
            "args": [
                "self",
                "dist"
            ],
            "lineno": 65
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/install.py": [
        {
            "type": "class",
            "name": "InstallCommand",
            "methods": [
                "Method `add_options` (line 72)",
                "Method `run` (line 266)",
                "Method `_handle_target_dir` (line 517)",
                "Method `_determine_conflicts` (line 571)",
                "Method `_warn_about_conflicts` (line 583)"
            ],
            "lineno": 52
        },
        {
            "type": "function",
            "name": "get_lib_location_guesses",
            "args": [
                "user",
                "home",
                "root",
                "isolated",
                "prefix"
            ],
            "lineno": 634
        },
        {
            "type": "function",
            "name": "site_packages_writable",
            "args": [
                "root",
                "isolated"
            ],
            "lineno": 652
        },
        {
            "type": "function",
            "name": "decide_user_install",
            "args": [
                "use_user_site",
                "prefix_path",
                "target_dir",
                "root_path",
                "isolated_mode"
            ],
            "lineno": 659
        },
        {
            "type": "function",
            "name": "create_os_error_message",
            "args": [
                "error",
                "show_traceback",
                "using_user_site"
            ],
            "lineno": 720
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 266
        },
        {
            "type": "function",
            "name": "_handle_target_dir",
            "args": [
                "self",
                "target_dir",
                "target_temp_dir",
                "upgrade"
            ],
            "lineno": 517
        },
        {
            "type": "function",
            "name": "_determine_conflicts",
            "args": [
                "self",
                "to_install"
            ],
            "lineno": 571
        },
        {
            "type": "function",
            "name": "_warn_about_conflicts",
            "args": [
                "self",
                "conflict_details",
                "resolver_variant"
            ],
            "lineno": 583
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/list.py": [
        {
            "type": "class",
            "name": "ListCommand",
            "methods": [
                "Method `add_options` (line 50)",
                "Method `_build_package_finder` (line 138)",
                "Method `run` (line 157)",
                "Method `get_outdated` (line 198)",
                "Method `get_uptodate` (line 207)",
                "Method `get_not_required` (line 216)",
                "Method `iter_packages_latest_infos` (line 230)",
                "Method `output_package_listing` (line 268)",
                "Method `output_package_listing_columns` (line 289)"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "format_for_columns",
            "args": [
                "pkgs",
                "options"
            ],
            "lineno": 306
        },
        {
            "type": "function",
            "name": "format_for_json",
            "args": [
                "packages",
                "options"
            ],
            "lineno": 351
        },
        {
            "type": "class",
            "name": "_DistWithLatestInfo",
            "methods": null,
            "lineno": 23
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "_build_package_finder",
            "args": [
                "self",
                "options",
                "session"
            ],
            "lineno": 138
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "get_outdated",
            "args": [
                "self",
                "packages",
                "options"
            ],
            "lineno": 198
        },
        {
            "type": "function",
            "name": "get_uptodate",
            "args": [
                "self",
                "packages",
                "options"
            ],
            "lineno": 207
        },
        {
            "type": "function",
            "name": "get_not_required",
            "args": [
                "self",
                "packages",
                "options"
            ],
            "lineno": 216
        },
        {
            "type": "function",
            "name": "iter_packages_latest_infos",
            "args": [
                "self",
                "packages",
                "options"
            ],
            "lineno": 230
        },
        {
            "type": "function",
            "name": "output_package_listing",
            "args": [
                "self",
                "packages",
                "options"
            ],
            "lineno": 268
        },
        {
            "type": "function",
            "name": "output_package_listing_columns",
            "args": [
                "self",
                "data",
                "header"
            ],
            "lineno": 289
        },
        {
            "type": "function",
            "name": "latest_info",
            "args": [
                "dist"
            ],
            "lineno": 236
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/search.py": [
        {
            "type": "class",
            "name": "SearchCommand",
            "methods": [
                "Method `add_options` (line 41)",
                "Method `run` (line 53)",
                "Method `search` (line 69)"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "transform_hits",
            "args": [
                "hits"
            ],
            "lineno": 88
        },
        {
            "type": "function",
            "name": "print_dist_installation_info",
            "args": [
                "name",
                "latest"
            ],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "print_results",
            "args": [
                "hits",
                "name_column_width",
                "terminal_width"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "highest_version",
            "args": [
                "versions"
            ],
            "lineno": 173
        },
        {
            "type": "class",
            "name": "TransformedHit",
            "methods": null,
            "lineno": 25
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 53
        },
        {
            "type": "function",
            "name": "search",
            "args": [
                "self",
                "query",
                "options"
            ],
            "lineno": 69
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/show.py": [
        {
            "type": "class",
            "name": "ShowCommand",
            "methods": [
                "Method `add_options` (line 26)",
                "Method `run` (line 38)"
            ],
            "lineno": 15
        },
        {
            "type": "class",
            "name": "_PackageInfo",
            "methods": null,
            "lineno": 52
        },
        {
            "type": "function",
            "name": "search_packages_info",
            "args": [
                "query"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "print_results",
            "args": [
                "distributions",
                "list_files",
                "verbose"
            ],
            "lineno": 141
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "_get_requiring_packages",
            "args": [
                "current_dist"
            ],
            "lineno": 89
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/uninstall.py": [
        {
            "type": "class",
            "name": "UninstallCommand",
            "methods": [
                "Method `add_options` (line 40)",
                "Method `run` (line 64)"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 64
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/wheel.py": [
        {
            "type": "class",
            "name": "WheelCommand",
            "methods": [
                "Method `add_options` (line 44)",
                "Method `run` (line 104)"
            ],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "add_options",
            "args": [
                "self"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self",
                "options",
                "args"
            ],
            "lineno": 104
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/commands/__init__.py": [
        {
            "type": "function",
            "name": "create_command",
            "args": [
                "name",
                "**kwargs"
            ],
            "lineno": 109
        },
        {
            "type": "function",
            "name": "get_similar_commands",
            "args": [
                "name"
            ],
            "lineno": 121
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/distributions/base.py": [
        {
            "type": "class",
            "name": "AbstractDistribution",
            "methods": [
                "Method `__init__` (line 28)",
                "Method `build_tracker_id` (line 33)",
                "Method `get_metadata_distribution` (line 41)",
                "Method `prepare_distribution_metadata` (line 45)"
            ],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "req"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "build_tracker_id",
            "args": [
                "self"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "get_metadata_distribution",
            "args": [
                "self"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "prepare_distribution_metadata",
            "args": [
                "self",
                "finder",
                "build_isolation",
                "check_build_deps"
            ],
            "lineno": 45
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/distributions/installed.py": [
        {
            "type": "class",
            "name": "InstalledDistribution",
            "methods": [
                "Method `build_tracker_id` (line 16)",
                "Method `get_metadata_distribution` (line 19)",
                "Method `prepare_distribution_metadata` (line 23)"
            ],
            "lineno": 8
        },
        {
            "type": "function",
            "name": "build_tracker_id",
            "args": [
                "self"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "get_metadata_distribution",
            "args": [
                "self"
            ],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "prepare_distribution_metadata",
            "args": [
                "self",
                "finder",
                "build_isolation",
                "check_build_deps"
            ],
            "lineno": 23
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/distributions/sdist.py": [
        {
            "type": "class",
            "name": "SourceDistribution",
            "methods": [
                "Method `build_tracker_id` (line 22)",
                "Method `get_metadata_distribution` (line 27)",
                "Method `prepare_distribution_metadata` (line 30)",
                "Method `_prepare_build_backend` (line 69)",
                "Method `_get_build_requires_wheel` (line 95)",
                "Method `_get_build_requires_editable` (line 103)",
                "Method `_install_build_reqs` (line 113)",
                "Method `_raise_conflicts` (line 132)",
                "Method `_raise_missing_reqs` (line 149)"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "build_tracker_id",
            "args": [
                "self"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "get_metadata_distribution",
            "args": [
                "self"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "prepare_distribution_metadata",
            "args": [
                "self",
                "finder",
                "build_isolation",
                "check_build_deps"
            ],
            "lineno": 30
        },
        {
            "type": "function",
            "name": "_prepare_build_backend",
            "args": [
                "self",
                "finder"
            ],
            "lineno": 69
        },
        {
            "type": "function",
            "name": "_get_build_requires_wheel",
            "args": [
                "self"
            ],
            "lineno": 95
        },
        {
            "type": "function",
            "name": "_get_build_requires_editable",
            "args": [
                "self"
            ],
            "lineno": 103
        },
        {
            "type": "function",
            "name": "_install_build_reqs",
            "args": [
                "self",
                "finder"
            ],
            "lineno": 113
        },
        {
            "type": "function",
            "name": "_raise_conflicts",
            "args": [
                "self",
                "conflicting_with",
                "conflicting_reqs"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "_raise_missing_reqs",
            "args": [
                "self",
                "missing"
            ],
            "lineno": 149
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/distributions/wheel.py": [
        {
            "type": "class",
            "name": "WheelDistribution",
            "methods": [
                "Method `build_tracker_id` (line 21)",
                "Method `get_metadata_distribution` (line 24)",
                "Method `prepare_distribution_metadata` (line 34)"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "build_tracker_id",
            "args": [
                "self"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "get_metadata_distribution",
            "args": [
                "self"
            ],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "prepare_distribution_metadata",
            "args": [
                "self",
                "finder",
                "build_isolation",
                "check_build_deps"
            ],
            "lineno": 34
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/distributions/__init__.py": [
        {
            "type": "function",
            "name": "make_distribution_for_install_requirement",
            "args": [
                "install_req"
            ],
            "lineno": 7
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/index/collector.py": [
        {
            "type": "function",
            "name": "_match_vcs_scheme",
            "args": [
                "url"
            ],
            "lineno": 55
        },
        {
            "type": "class",
            "name": "_NotAPIContent",
            "methods": [
                "Method `__init__` (line 67)"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "_ensure_api_header",
            "args": [
                "response"
            ],
            "lineno": 73
        },
        {
            "type": "class",
            "name": "_NotHTTP",
            "methods": null,
            "lineno": 95
        },
        {
            "type": "function",
            "name": "_ensure_api_response",
            "args": [
                "url",
                "session"
            ],
            "lineno": 99
        },
        {
            "type": "function",
            "name": "_get_simple_response",
            "args": [
                "url",
                "session"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "_get_encoding_from_headers",
            "args": [
                "headers"
            ],
            "lineno": 180
        },
        {
            "type": "class",
            "name": "CacheablePageContent",
            "methods": [
                "Method `__init__` (line 192)",
                "Method `__eq__` (line 196)",
                "Method `__hash__` (line 199)"
            ],
            "lineno": 191
        },
        {
            "type": "class",
            "name": "ParseLinks",
            "methods": [
                "Method `__call__` (line 204)"
            ],
            "lineno": 203
        },
        {
            "type": "function",
            "name": "with_cached_index_content",
            "args": [
                "fn"
            ],
            "lineno": 208
        },
        {
            "type": "function",
            "name": "parse_links",
            "args": [
                "page"
            ],
            "lineno": 229
        },
        {
            "type": "class",
            "name": "IndexContent",
            "methods": [
                "Method `__init__` (line 260)",
                "Method `__str__` (line 281)"
            ],
            "lineno": 257
        },
        {
            "type": "class",
            "name": "HTMLLinkParser",
            "methods": [
                "Method `__init__` (line 291)",
                "Method `handle_starttag` (line 298)",
                "Method `get_href` (line 306)"
            ],
            "lineno": 285
        },
        {
            "type": "function",
            "name": "_handle_get_simple_fail",
            "args": [
                "link",
                "reason",
                "meth"
            ],
            "lineno": 313
        },
        {
            "type": "function",
            "name": "_make_index_content",
            "args": [
                "response",
                "cache_link_parsing"
            ],
            "lineno": 323
        },
        {
            "type": "function",
            "name": "_get_index_content",
            "args": [
                "link"
            ],
            "lineno": 336
        },
        {
            "type": "class",
            "name": "CollectedSources",
            "methods": null,
            "lineno": 397
        },
        {
            "type": "class",
            "name": "LinkCollector",
            "methods": [
                "Method `__init__` (line 411)",
                "Method `create` (line 420)",
                "Method `find_links` (line 454)",
                "Method `fetch_response` (line 457)",
                "Method `collect_sources` (line 463)"
            ],
            "lineno": 402
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "content_type",
                "request_desc"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "page"
            ],
            "lineno": 192
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 196
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 199
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "page"
            ],
            "lineno": 204
        },
        {
            "type": "function",
            "name": "wrapper",
            "args": [
                "cacheable_page"
            ],
            "lineno": 216
        },
        {
            "type": "function",
            "name": "wrapper_wrapper",
            "args": [
                "page"
            ],
            "lineno": 220
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "content",
                "content_type",
                "encoding",
                "url",
                "cache_link_parsing"
            ],
            "lineno": 260
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 281
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "url"
            ],
            "lineno": 291
        },
        {
            "type": "function",
            "name": "handle_starttag",
            "args": [
                "self",
                "tag",
                "attrs"
            ],
            "lineno": 298
        },
        {
            "type": "function",
            "name": "get_href",
            "args": [
                "self",
                "attrs"
            ],
            "lineno": 306
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "session",
                "search_scope"
            ],
            "lineno": 411
        },
        {
            "type": "function",
            "name": "create",
            "args": [
                "cls",
                "session",
                "options",
                "suppress_no_index"
            ],
            "lineno": 420
        },
        {
            "type": "function",
            "name": "find_links",
            "args": [
                "self"
            ],
            "lineno": 454
        },
        {
            "type": "function",
            "name": "fetch_response",
            "args": [
                "self",
                "location"
            ],
            "lineno": 457
        },
        {
            "type": "function",
            "name": "collect_sources",
            "args": [
                "self",
                "project_name",
                "candidates_from_page"
            ],
            "lineno": 463
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/index/package_finder.py": [
        {
            "type": "function",
            "name": "_check_link_requires_python",
            "args": [
                "link",
                "version_info",
                "ignore_requires_python"
            ],
            "lineno": 51
        },
        {
            "type": "class",
            "name": "LinkType",
            "methods": null,
            "lineno": 98
        },
        {
            "type": "class",
            "name": "LinkEvaluator",
            "methods": [
                "Method `__init__` (line 120)",
                "Method `evaluate_link` (line 157)"
            ],
            "lineno": 108
        },
        {
            "type": "function",
            "name": "filter_unallowed_hashes",
            "args": [
                "candidates",
                "hashes",
                "project_name"
            ],
            "lineno": 252
        },
        {
            "type": "class",
            "name": "CandidatePreferences",
            "methods": [
                "Method `__init__` (line 333)"
            ],
            "lineno": 326
        },
        {
            "type": "class",
            "name": "BestCandidateResult",
            "methods": [
                "Method `__init__` (line 352)",
                "Method `iter_all` (line 376)",
                "Method `iter_applicable` (line 380)"
            ],
            "lineno": 345
        },
        {
            "type": "class",
            "name": "CandidateEvaluator",
            "methods": [
                "Method `create` (line 393)",
                "Method `__init__` (line 428)",
                "Method `get_applicable_candidates` (line 454)",
                "Method `_sort_key` (line 490)",
                "Method `sort_best_candidate` (line 559)",
                "Method `compute_best_candidate` (line 572)"
            ],
            "lineno": 385
        },
        {
            "type": "class",
            "name": "PackageFinder",
            "methods": [
                "Method `__init__` (line 597)",
                "Method `create` (line 637)",
                "Method `target_python` (line 669)",
                "Method `search_scope` (line 673)",
                "Method `search_scope` (line 677)",
                "Method `find_links` (line 681)",
                "Method `index_urls` (line 685)",
                "Method `trusted_hosts` (line 689)",
                "Method `allow_all_prereleases` (line 694)",
                "Method `set_allow_all_prereleases` (line 697)",
                "Method `prefer_binary` (line 701)",
                "Method `set_prefer_binary` (line 704)",
                "Method `requires_python_skipped_reasons` (line 707)",
                "Method `make_link_evaluator` (line 715)",
                "Method `_sort_links` (line 728)",
                "Method `_log_skipped_link` (line 744)",
                "Method `get_install_candidate` (line 752)",
                "Method `evaluate_links` (line 770)",
                "Method `process_project_url` (line 784)",
                "Method `find_all_candidates` (line 806)",
                "Method `make_candidate_evaluator` (line 858)",
                "Method `find_best_candidate` (line 876)",
                "Method `find_requirement` (line 898)"
            ],
            "lineno": 590
        },
        {
            "type": "function",
            "name": "_find_name_version_sep",
            "args": [
                "fragment",
                "canonical_name"
            ],
            "lineno": 986
        },
        {
            "type": "function",
            "name": "_extract_version_from_fragment",
            "args": [
                "fragment",
                "canonical_name"
            ],
            "lineno": 1012
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "project_name",
                "canonical_name",
                "formats",
                "target_python",
                "allow_yanked",
                "ignore_requires_python"
            ],
            "lineno": 120
        },
        {
            "type": "function",
            "name": "evaluate_link",
            "args": [
                "self",
                "link"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "prefer_binary",
                "allow_all_prereleases"
            ],
            "lineno": 333
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "candidates",
                "applicable_candidates",
                "best_candidate"
            ],
            "lineno": 352
        },
        {
            "type": "function",
            "name": "iter_all",
            "args": [
                "self"
            ],
            "lineno": 376
        },
        {
            "type": "function",
            "name": "iter_applicable",
            "args": [
                "self"
            ],
            "lineno": 380
        },
        {
            "type": "function",
            "name": "create",
            "args": [
                "cls",
                "project_name",
                "target_python",
                "prefer_binary",
                "allow_all_prereleases",
                "specifier",
                "hashes"
            ],
            "lineno": 393
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "project_name",
                "supported_tags",
                "specifier",
                "prefer_binary",
                "allow_all_prereleases",
                "hashes"
            ],
            "lineno": 428
        },
        {
            "type": "function",
            "name": "get_applicable_candidates",
            "args": [
                "self",
                "candidates"
            ],
            "lineno": 454
        },
        {
            "type": "function",
            "name": "_sort_key",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 490
        },
        {
            "type": "function",
            "name": "sort_best_candidate",
            "args": [
                "self",
                "candidates"
            ],
            "lineno": 559
        },
        {
            "type": "function",
            "name": "compute_best_candidate",
            "args": [
                "self",
                "candidates"
            ],
            "lineno": 572
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "link_collector",
                "target_python",
                "allow_yanked",
                "format_control",
                "candidate_prefs",
                "ignore_requires_python"
            ],
            "lineno": 597
        },
        {
            "type": "function",
            "name": "create",
            "args": [
                "cls",
                "link_collector",
                "selection_prefs",
                "target_python"
            ],
            "lineno": 637
        },
        {
            "type": "function",
            "name": "target_python",
            "args": [
                "self"
            ],
            "lineno": 669
        },
        {
            "type": "function",
            "name": "search_scope",
            "args": [
                "self"
            ],
            "lineno": 673
        },
        {
            "type": "function",
            "name": "search_scope",
            "args": [
                "self",
                "search_scope"
            ],
            "lineno": 677
        },
        {
            "type": "function",
            "name": "find_links",
            "args": [
                "self"
            ],
            "lineno": 681
        },
        {
            "type": "function",
            "name": "index_urls",
            "args": [
                "self"
            ],
            "lineno": 685
        },
        {
            "type": "function",
            "name": "trusted_hosts",
            "args": [
                "self"
            ],
            "lineno": 689
        },
        {
            "type": "function",
            "name": "allow_all_prereleases",
            "args": [
                "self"
            ],
            "lineno": 694
        },
        {
            "type": "function",
            "name": "set_allow_all_prereleases",
            "args": [
                "self"
            ],
            "lineno": 697
        },
        {
            "type": "function",
            "name": "prefer_binary",
            "args": [
                "self"
            ],
            "lineno": 701
        },
        {
            "type": "function",
            "name": "set_prefer_binary",
            "args": [
                "self"
            ],
            "lineno": 704
        },
        {
            "type": "function",
            "name": "requires_python_skipped_reasons",
            "args": [
                "self"
            ],
            "lineno": 707
        },
        {
            "type": "function",
            "name": "make_link_evaluator",
            "args": [
                "self",
                "project_name"
            ],
            "lineno": 715
        },
        {
            "type": "function",
            "name": "_sort_links",
            "args": [
                "self",
                "links"
            ],
            "lineno": 728
        },
        {
            "type": "function",
            "name": "_log_skipped_link",
            "args": [
                "self",
                "link",
                "result",
                "detail"
            ],
            "lineno": 744
        },
        {
            "type": "function",
            "name": "get_install_candidate",
            "args": [
                "self",
                "link_evaluator",
                "link"
            ],
            "lineno": 752
        },
        {
            "type": "function",
            "name": "evaluate_links",
            "args": [
                "self",
                "link_evaluator",
                "links"
            ],
            "lineno": 770
        },
        {
            "type": "function",
            "name": "process_project_url",
            "args": [
                "self",
                "project_url",
                "link_evaluator"
            ],
            "lineno": 784
        },
        {
            "type": "function",
            "name": "find_all_candidates",
            "args": [
                "self",
                "project_name"
            ],
            "lineno": 806
        },
        {
            "type": "function",
            "name": "make_candidate_evaluator",
            "args": [
                "self",
                "project_name",
                "specifier",
                "hashes"
            ],
            "lineno": 858
        },
        {
            "type": "function",
            "name": "find_best_candidate",
            "args": [
                "self",
                "project_name",
                "specifier",
                "hashes"
            ],
            "lineno": 876
        },
        {
            "type": "function",
            "name": "find_requirement",
            "args": [
                "self",
                "req",
                "upgrade"
            ],
            "lineno": 898
        },
        {
            "type": "function",
            "name": "_format_versions",
            "args": [
                "cand_iter"
            ],
            "lineno": 919
        },
        {
            "type": "function",
            "name": "_should_install_candidate",
            "args": [
                "candidate"
            ],
            "lineno": 944
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/index/sources.py": [
        {
            "type": "class",
            "name": "LinkSource",
            "methods": [
                "Method `link` (line 31)",
                "Method `page_candidates` (line 35)",
                "Method `file_links` (line 39)"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "_is_html_file",
            "args": [
                "file_url"
            ],
            "lineno": 44
        },
        {
            "type": "class",
            "name": "_FlatDirectoryToUrls",
            "methods": [
                "Method `__init__` (line 51)",
                "Method `_scan_directory` (line 57)",
                "Method `page_candidates` (line 81)",
                "Method `project_name_to_urls` (line 88)"
            ],
            "lineno": 48
        },
        {
            "type": "class",
            "name": "_FlatDirectorySource",
            "methods": [
                "Method `__init__` (line 106)",
                "Method `link` (line 123)",
                "Method `page_candidates` (line 126)",
                "Method `file_links` (line 130)"
            ],
            "lineno": 95
        },
        {
            "type": "class",
            "name": "_LocalFileSource",
            "methods": [
                "Method `__init__` (line 145)",
                "Method `link` (line 154)",
                "Method `page_candidates` (line 157)",
                "Method `file_links` (line 162)"
            ],
            "lineno": 135
        },
        {
            "type": "class",
            "name": "_RemoteFileSource",
            "methods": [
                "Method `__init__` (line 177)",
                "Method `link` (line 188)",
                "Method `page_candidates` (line 191)",
                "Method `file_links` (line 196)"
            ],
            "lineno": 168
        },
        {
            "type": "class",
            "name": "_IndexDirectorySource",
            "methods": [
                "Method `__init__` (line 207)",
                "Method `link` (line 216)",
                "Method `page_candidates` (line 219)",
                "Method `file_links` (line 222)"
            ],
            "lineno": 200
        },
        {
            "type": "function",
            "name": "build_source",
            "args": [
                "location"
            ],
            "lineno": 226
        },
        {
            "type": "function",
            "name": "link",
            "args": [
                "self"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "page_candidates",
            "args": [
                "self"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "file_links",
            "args": [
                "self"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "path"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "_scan_directory",
            "args": [
                "self"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "page_candidates",
            "args": [
                "self"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "project_name_to_urls",
            "args": [
                "self"
            ],
            "lineno": 88
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "candidates_from_page",
                "path",
                "project_name"
            ],
            "lineno": 106
        },
        {
            "type": "function",
            "name": "link",
            "args": [
                "self"
            ],
            "lineno": 123
        },
        {
            "type": "function",
            "name": "page_candidates",
            "args": [
                "self"
            ],
            "lineno": 126
        },
        {
            "type": "function",
            "name": "file_links",
            "args": [
                "self"
            ],
            "lineno": 130
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "candidates_from_page",
                "link"
            ],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "link",
            "args": [
                "self"
            ],
            "lineno": 154
        },
        {
            "type": "function",
            "name": "page_candidates",
            "args": [
                "self"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "file_links",
            "args": [
                "self"
            ],
            "lineno": 162
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "candidates_from_page",
                "page_validator",
                "link"
            ],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "link",
            "args": [
                "self"
            ],
            "lineno": 188
        },
        {
            "type": "function",
            "name": "page_candidates",
            "args": [
                "self"
            ],
            "lineno": 191
        },
        {
            "type": "function",
            "name": "file_links",
            "args": [
                "self"
            ],
            "lineno": 196
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "candidates_from_page",
                "link"
            ],
            "lineno": 207
        },
        {
            "type": "function",
            "name": "link",
            "args": [
                "self"
            ],
            "lineno": 216
        },
        {
            "type": "function",
            "name": "page_candidates",
            "args": [
                "self"
            ],
            "lineno": 219
        },
        {
            "type": "function",
            "name": "file_links",
            "args": [
                "self"
            ],
            "lineno": 222
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/index/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/locations/base.py": [
        {
            "type": "function",
            "name": "get_major_minor_version",
            "args": [],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "change_root",
            "args": [
                "new_root",
                "pathname"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "get_src_prefix",
            "args": [],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "is_osx_framework",
            "args": [],
            "lineno": 80
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/locations/_distutils.py": [
        {
            "type": "function",
            "name": "distutils_scheme",
            "args": [
                "dist_name",
                "user",
                "home",
                "root",
                "isolated",
                "prefix"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "get_scheme",
            "args": [
                "dist_name",
                "user",
                "home",
                "root",
                "isolated",
                "prefix"
            ],
            "lineno": 115
        },
        {
            "type": "function",
            "name": "get_bin_prefix",
            "args": [],
            "lineno": 150
        },
        {
            "type": "function",
            "name": "get_purelib",
            "args": [],
            "lineno": 167
        },
        {
            "type": "function",
            "name": "get_platlib",
            "args": [],
            "lineno": 171
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/locations/_sysconfig.py": [
        {
            "type": "function",
            "name": "_should_use_osx_framework_prefix",
            "args": [],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "_infer_prefix",
            "args": [],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "_infer_user",
            "args": [],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "_infer_home",
            "args": [],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "get_scheme",
            "args": [
                "dist_name",
                "user",
                "home",
                "root",
                "isolated",
                "prefix"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "get_bin_prefix",
            "args": [],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "get_purelib",
            "args": [],
            "lineno": 208
        },
        {
            "type": "function",
            "name": "get_platlib",
            "args": [],
            "lineno": 212
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/locations/__init__.py": [
        {
            "type": "function",
            "name": "_should_use_sysconfig",
            "args": [],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "_looks_like_bpo_44860",
            "args": [],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "_looks_like_red_hat_patched_platlib_purelib",
            "args": [
                "scheme"
            ],
            "lineno": 90
        },
        {
            "type": "function",
            "name": "_looks_like_red_hat_lib",
            "args": [],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "_looks_like_debian_scheme",
            "args": [],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "_looks_like_red_hat_scheme",
            "args": [],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "_looks_like_slackware_scheme",
            "args": [],
            "lineno": 144
        },
        {
            "type": "function",
            "name": "_looks_like_msys2_mingw_scheme",
            "args": [],
            "lineno": 160
        },
        {
            "type": "function",
            "name": "_fix_abiflags",
            "args": [
                "parts"
            ],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "_warn_mismatched",
            "args": [
                "old",
                "new"
            ],
            "lineno": 194
        },
        {
            "type": "function",
            "name": "_warn_if_mismatch",
            "args": [
                "old",
                "new"
            ],
            "lineno": 204
        },
        {
            "type": "function",
            "name": "_log_context",
            "args": [],
            "lineno": 212
        },
        {
            "type": "function",
            "name": "get_scheme",
            "args": [
                "dist_name",
                "user",
                "home",
                "root",
                "isolated",
                "prefix"
            ],
            "lineno": 230
        },
        {
            "type": "function",
            "name": "get_bin_prefix",
            "args": [],
            "lineno": 408
        },
        {
            "type": "function",
            "name": "get_bin_user",
            "args": [],
            "lineno": 419
        },
        {
            "type": "function",
            "name": "_looks_like_deb_system_dist_packages",
            "args": [
                "value"
            ],
            "lineno": 423
        },
        {
            "type": "function",
            "name": "get_purelib",
            "args": [],
            "lineno": 440
        },
        {
            "type": "function",
            "name": "get_platlib",
            "args": [],
            "lineno": 454
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/metadata/base.py": [
        {
            "type": "class",
            "name": "BaseEntryPoint",
            "methods": [
                "Method `name` (line 58)",
                "Method `value` (line 62)",
                "Method `group` (line 66)"
            ],
            "lineno": 56
        },
        {
            "type": "function",
            "name": "_convert_installed_files_path",
            "args": [
                "entry",
                "info"
            ],
            "lineno": 70
        },
        {
            "type": "class",
            "name": "RequiresEntry",
            "methods": null,
            "lineno": 100
        },
        {
            "type": "class",
            "name": "BaseDistribution",
            "methods": [
                "Method `from_directory` (line 108)",
                "Method `from_metadata_file_contents` (line 116)",
                "Method `from_wheel` (line 134)",
                "Method `__repr__` (line 147)",
                "Method `__str__` (line 150)",
                "Method `location` (line 154)",
                "Method `editable_project_location` (line 168)",
                "Method `installed_location` (line 190)",
                "Method `info_location` (line 203)",
                "Method `installed_by_distutils` (line 219)",
                "Method `installed_as_egg` (line 232)",
                "Method `installed_with_setuptools_egg_info` (line 244)",
                "Method `installed_with_dist_info` (line 262)",
                "Method `canonical_name` (line 278)",
                "Method `version` (line 282)",
                "Method `setuptools_filename` (line 286)",
                "Method `direct_url` (line 294)",
                "Method `installer` (line 320)",
                "Method `requested` (line 332)",
                "Method `editable` (line 336)",
                "Method `local` (line 340)",
                "Method `in_usersite` (line 350)",
                "Method `in_site_packages` (line 356)",
                "Method `is_file` (line 361)",
                "Method `iter_distutils_script_names` (line 365)",
                "Method `read_text` (line 373)",
                "Method `iter_entry_points` (line 382)",
                "Method `_metadata_impl` (line 385)",
                "Method `_metadata_cached` (line 389)",
                "Method `metadata` (line 397)",
                "Method `metadata_dict` (line 408)",
                "Method `metadata_version` (line 419)",
                "Method `raw_name` (line 424)",
                "Method `requires_python` (line 431)",
                "Method `iter_dependencies` (line 449)",
                "Method `iter_provided_extras` (line 457)",
                "Method `is_extra_provided` (line 470)",
                "Method `_iter_declared_entries_from_record` (line 478)",
                "Method `_iter_declared_entries_from_legacy` (line 486)",
                "Method `iter_declared_entries` (line 507)",
                "Method `_iter_requires_txt_entries` (line 523)",
                "Method `_iter_egg_info_extras` (line 548)",
                "Method `_iter_egg_info_dependencies` (line 558)",
                "Method `_add_egg_info_requires` (line 586)"
            ],
            "lineno": 106
        },
        {
            "type": "class",
            "name": "BaseEnvironment",
            "methods": [
                "Method `default` (line 600)",
                "Method `from_paths` (line 604)",
                "Method `get_distribution` (line 607)",
                "Method `_iter_distributions` (line 615)",
                "Method `iter_all_distributions` (line 624)",
                "Method `iter_installed_distributions` (line 645)"
            ],
            "lineno": 596
        },
        {
            "type": "class",
            "name": "Wheel",
            "methods": [
                "Method `as_zipfile` (line 684)"
            ],
            "lineno": 681
        },
        {
            "type": "class",
            "name": "FilesystemWheel",
            "methods": [
                "Method `__init__` (line 689)",
                "Method `as_zipfile` (line 692)"
            ],
            "lineno": 688
        },
        {
            "type": "class",
            "name": "MemoryWheel",
            "methods": [
                "Method `__init__` (line 697)",
                "Method `as_zipfile` (line 701)"
            ],
            "lineno": 696
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "value",
            "args": [
                "self"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "group",
            "args": [
                "self"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "from_directory",
            "args": [
                "cls",
                "directory"
            ],
            "lineno": 108
        },
        {
            "type": "function",
            "name": "from_metadata_file_contents",
            "args": [
                "cls",
                "metadata_contents",
                "filename",
                "project_name"
            ],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "from_wheel",
            "args": [
                "cls",
                "wheel",
                "name"
            ],
            "lineno": 134
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 147
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 150
        },
        {
            "type": "function",
            "name": "location",
            "args": [
                "self"
            ],
            "lineno": 154
        },
        {
            "type": "function",
            "name": "editable_project_location",
            "args": [
                "self"
            ],
            "lineno": 168
        },
        {
            "type": "function",
            "name": "installed_location",
            "args": [
                "self"
            ],
            "lineno": 190
        },
        {
            "type": "function",
            "name": "info_location",
            "args": [
                "self"
            ],
            "lineno": 203
        },
        {
            "type": "function",
            "name": "installed_by_distutils",
            "args": [
                "self"
            ],
            "lineno": 219
        },
        {
            "type": "function",
            "name": "installed_as_egg",
            "args": [
                "self"
            ],
            "lineno": 232
        },
        {
            "type": "function",
            "name": "installed_with_setuptools_egg_info",
            "args": [
                "self"
            ],
            "lineno": 244
        },
        {
            "type": "function",
            "name": "installed_with_dist_info",
            "args": [
                "self"
            ],
            "lineno": 262
        },
        {
            "type": "function",
            "name": "canonical_name",
            "args": [
                "self"
            ],
            "lineno": 278
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "self"
            ],
            "lineno": 282
        },
        {
            "type": "function",
            "name": "setuptools_filename",
            "args": [
                "self"
            ],
            "lineno": 286
        },
        {
            "type": "function",
            "name": "direct_url",
            "args": [
                "self"
            ],
            "lineno": 294
        },
        {
            "type": "function",
            "name": "installer",
            "args": [
                "self"
            ],
            "lineno": 320
        },
        {
            "type": "function",
            "name": "requested",
            "args": [
                "self"
            ],
            "lineno": 332
        },
        {
            "type": "function",
            "name": "editable",
            "args": [
                "self"
            ],
            "lineno": 336
        },
        {
            "type": "function",
            "name": "local",
            "args": [
                "self"
            ],
            "lineno": 340
        },
        {
            "type": "function",
            "name": "in_usersite",
            "args": [
                "self"
            ],
            "lineno": 350
        },
        {
            "type": "function",
            "name": "in_site_packages",
            "args": [
                "self"
            ],
            "lineno": 356
        },
        {
            "type": "function",
            "name": "is_file",
            "args": [
                "self",
                "path"
            ],
            "lineno": 361
        },
        {
            "type": "function",
            "name": "iter_distutils_script_names",
            "args": [
                "self"
            ],
            "lineno": 365
        },
        {
            "type": "function",
            "name": "read_text",
            "args": [
                "self",
                "path"
            ],
            "lineno": 373
        },
        {
            "type": "function",
            "name": "iter_entry_points",
            "args": [
                "self"
            ],
            "lineno": 382
        },
        {
            "type": "function",
            "name": "_metadata_impl",
            "args": [
                "self"
            ],
            "lineno": 385
        },
        {
            "type": "function",
            "name": "_metadata_cached",
            "args": [
                "self"
            ],
            "lineno": 389
        },
        {
            "type": "function",
            "name": "metadata",
            "args": [
                "self"
            ],
            "lineno": 397
        },
        {
            "type": "function",
            "name": "metadata_dict",
            "args": [
                "self"
            ],
            "lineno": 408
        },
        {
            "type": "function",
            "name": "metadata_version",
            "args": [
                "self"
            ],
            "lineno": 419
        },
        {
            "type": "function",
            "name": "raw_name",
            "args": [
                "self"
            ],
            "lineno": 424
        },
        {
            "type": "function",
            "name": "requires_python",
            "args": [
                "self"
            ],
            "lineno": 431
        },
        {
            "type": "function",
            "name": "iter_dependencies",
            "args": [
                "self",
                "extras"
            ],
            "lineno": 449
        },
        {
            "type": "function",
            "name": "iter_provided_extras",
            "args": [
                "self"
            ],
            "lineno": 457
        },
        {
            "type": "function",
            "name": "is_extra_provided",
            "args": [
                "self",
                "extra"
            ],
            "lineno": 470
        },
        {
            "type": "function",
            "name": "_iter_declared_entries_from_record",
            "args": [
                "self"
            ],
            "lineno": 478
        },
        {
            "type": "function",
            "name": "_iter_declared_entries_from_legacy",
            "args": [
                "self"
            ],
            "lineno": 486
        },
        {
            "type": "function",
            "name": "iter_declared_entries",
            "args": [
                "self"
            ],
            "lineno": 507
        },
        {
            "type": "function",
            "name": "_iter_requires_txt_entries",
            "args": [
                "self"
            ],
            "lineno": 523
        },
        {
            "type": "function",
            "name": "_iter_egg_info_extras",
            "args": [
                "self"
            ],
            "lineno": 548
        },
        {
            "type": "function",
            "name": "_iter_egg_info_dependencies",
            "args": [
                "self"
            ],
            "lineno": 558
        },
        {
            "type": "function",
            "name": "_add_egg_info_requires",
            "args": [
                "self",
                "metadata"
            ],
            "lineno": 586
        },
        {
            "type": "function",
            "name": "default",
            "args": [
                "cls"
            ],
            "lineno": 600
        },
        {
            "type": "function",
            "name": "from_paths",
            "args": [
                "cls",
                "paths"
            ],
            "lineno": 604
        },
        {
            "type": "function",
            "name": "get_distribution",
            "args": [
                "self",
                "name"
            ],
            "lineno": 607
        },
        {
            "type": "function",
            "name": "_iter_distributions",
            "args": [
                "self"
            ],
            "lineno": 615
        },
        {
            "type": "function",
            "name": "iter_all_distributions",
            "args": [
                "self"
            ],
            "lineno": 624
        },
        {
            "type": "function",
            "name": "iter_installed_distributions",
            "args": [
                "self",
                "local_only",
                "skip",
                "include_editables",
                "editables_only",
                "user_only"
            ],
            "lineno": 645
        },
        {
            "type": "function",
            "name": "as_zipfile",
            "args": [
                "self"
            ],
            "lineno": 684
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "location"
            ],
            "lineno": 689
        },
        {
            "type": "function",
            "name": "as_zipfile",
            "args": [
                "self"
            ],
            "lineno": 692
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "location",
                "stream"
            ],
            "lineno": 697
        },
        {
            "type": "function",
            "name": "as_zipfile",
            "args": [
                "self"
            ],
            "lineno": 701
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/metadata/pkg_resources.py": [
        {
            "type": "class",
            "name": "EntryPoint",
            "methods": null,
            "lineno": 34
        },
        {
            "type": "class",
            "name": "InMemoryMetadata",
            "methods": [
                "Method `__init__` (line 46)",
                "Method `has_metadata` (line 50)",
                "Method `get_metadata` (line 53)",
                "Method `get_metadata_lines` (line 62)",
                "Method `metadata_isdir` (line 65)",
                "Method `metadata_listdir` (line 68)",
                "Method `run_script` (line 71)"
            ],
            "lineno": 40
        },
        {
            "type": "class",
            "name": "Distribution",
            "methods": [
                "Method `__init__` (line 76)",
                "Method `from_directory` (line 80)",
                "Method `from_metadata_file_contents` (line 100)",
                "Method `from_wheel` (line 117)",
                "Method `location` (line 138)",
                "Method `installed_location` (line 142)",
                "Method `info_location` (line 153)",
                "Method `installed_by_distutils` (line 157)",
                "Method `canonical_name` (line 167)",
                "Method `version` (line 171)",
                "Method `is_file` (line 174)",
                "Method `iter_distutils_script_names` (line 177)",
                "Method `read_text` (line 180)",
                "Method `iter_entry_points` (line 189)",
                "Method `_metadata_impl` (line 195)",
                "Method `iter_dependencies` (line 217)",
                "Method `iter_provided_extras` (line 223)",
                "Method `is_extra_provided` (line 226)"
            ],
            "lineno": 75
        },
        {
            "type": "class",
            "name": "Environment",
            "methods": [
                "Method `__init__` (line 231)",
                "Method `default` (line 235)",
                "Method `from_paths` (line 239)",
                "Method `_iter_distributions` (line 242)",
                "Method `_search_distribution` (line 246)",
                "Method `get_distribution` (line 258)"
            ],
            "lineno": 230
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "metadata",
                "wheel_name"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "has_metadata",
            "args": [
                "self",
                "name"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "get_metadata",
            "args": [
                "self",
                "name"
            ],
            "lineno": 53
        },
        {
            "type": "function",
            "name": "get_metadata_lines",
            "args": [
                "self",
                "name"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "metadata_isdir",
            "args": [
                "self",
                "name"
            ],
            "lineno": 65
        },
        {
            "type": "function",
            "name": "metadata_listdir",
            "args": [
                "self",
                "name"
            ],
            "lineno": 68
        },
        {
            "type": "function",
            "name": "run_script",
            "args": [
                "self",
                "script_name",
                "namespace"
            ],
            "lineno": 71
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "dist"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "from_directory",
            "args": [
                "cls",
                "directory"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "from_metadata_file_contents",
            "args": [
                "cls",
                "metadata_contents",
                "filename",
                "project_name"
            ],
            "lineno": 100
        },
        {
            "type": "function",
            "name": "from_wheel",
            "args": [
                "cls",
                "wheel",
                "name"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "location",
            "args": [
                "self"
            ],
            "lineno": 138
        },
        {
            "type": "function",
            "name": "installed_location",
            "args": [
                "self"
            ],
            "lineno": 142
        },
        {
            "type": "function",
            "name": "info_location",
            "args": [
                "self"
            ],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "installed_by_distutils",
            "args": [
                "self"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "canonical_name",
            "args": [
                "self"
            ],
            "lineno": 167
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "self"
            ],
            "lineno": 171
        },
        {
            "type": "function",
            "name": "is_file",
            "args": [
                "self",
                "path"
            ],
            "lineno": 174
        },
        {
            "type": "function",
            "name": "iter_distutils_script_names",
            "args": [
                "self"
            ],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "read_text",
            "args": [
                "self",
                "path"
            ],
            "lineno": 180
        },
        {
            "type": "function",
            "name": "iter_entry_points",
            "args": [
                "self"
            ],
            "lineno": 189
        },
        {
            "type": "function",
            "name": "_metadata_impl",
            "args": [
                "self"
            ],
            "lineno": 195
        },
        {
            "type": "function",
            "name": "iter_dependencies",
            "args": [
                "self",
                "extras"
            ],
            "lineno": 217
        },
        {
            "type": "function",
            "name": "iter_provided_extras",
            "args": [
                "self"
            ],
            "lineno": 223
        },
        {
            "type": "function",
            "name": "is_extra_provided",
            "args": [
                "self",
                "extra"
            ],
            "lineno": 226
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "ws"
            ],
            "lineno": 231
        },
        {
            "type": "function",
            "name": "default",
            "args": [
                "cls"
            ],
            "lineno": 235
        },
        {
            "type": "function",
            "name": "from_paths",
            "args": [
                "cls",
                "paths"
            ],
            "lineno": 239
        },
        {
            "type": "function",
            "name": "_iter_distributions",
            "args": [
                "self"
            ],
            "lineno": 242
        },
        {
            "type": "function",
            "name": "_search_distribution",
            "args": [
                "self",
                "name"
            ],
            "lineno": 246
        },
        {
            "type": "function",
            "name": "get_distribution",
            "args": [
                "self",
                "name"
            ],
            "lineno": 258
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/metadata/_json.py": [
        {
            "type": "function",
            "name": "json_name",
            "args": [
                "field"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "msg_to_json",
            "args": [
                "msg"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "sanitise_header",
            "args": [
                "h"
            ],
            "lineno": 44
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/metadata/__init__.py": [
        {
            "type": "function",
            "name": "_should_use_importlib_metadata",
            "args": [],
            "lineno": 29
        },
        {
            "type": "class",
            "name": "Backend",
            "methods": null,
            "lineno": 52
        },
        {
            "type": "function",
            "name": "select_backend",
            "args": [],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "get_default_environment",
            "args": [],
            "lineno": 69
        },
        {
            "type": "function",
            "name": "get_environment",
            "args": [
                "paths"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "get_directory_distribution",
            "args": [
                "directory"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "get_wheel_distribution",
            "args": [
                "wheel",
                "canonical_name"
            ],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "get_metadata_distribution",
            "args": [
                "metadata_contents",
                "filename",
                "canonical_name"
            ],
            "lineno": 109
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/models/candidate.py": [
        {
            "type": "class",
            "name": "InstallationCandidate",
            "methods": [
                "Method `__init__` (line 12)",
                "Method `__repr__` (line 22)",
                "Method `__str__` (line 29)"
            ],
            "lineno": 7
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "version",
                "link"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 29
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/models/direct_url.py": [
        {
            "type": "class",
            "name": "DirectUrlValidationError",
            "methods": null,
            "lineno": 21
        },
        {
            "type": "function",
            "name": "_get",
            "args": [
                "d",
                "expected_type",
                "key",
                "default"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "_get_required",
            "args": [
                "d",
                "expected_type",
                "key",
                "default"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "_exactly_one_of",
            "args": [
                "infos"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "_filter_none",
            "args": [
                "**kwargs"
            ],
            "lineno": 62
        },
        {
            "type": "class",
            "name": "VcsInfo",
            "methods": [
                "Method `__init__` (line 70)",
                "Method `_from_dict` (line 81)",
                "Method `_to_dict` (line 90)"
            ],
            "lineno": 67
        },
        {
            "type": "class",
            "name": "ArchiveInfo",
            "methods": [
                "Method `__init__` (line 101)",
                "Method `hash` (line 111)",
                "Method `hash` (line 115)",
                "Method `_from_dict` (line 133)",
                "Method `_to_dict` (line 138)"
            ],
            "lineno": 98
        },
        {
            "type": "class",
            "name": "DirInfo",
            "methods": [
                "Method `__init__` (line 145)",
                "Method `_from_dict` (line 152)",
                "Method `_to_dict` (line 157)"
            ],
            "lineno": 142
        },
        {
            "type": "class",
            "name": "DirectUrl",
            "methods": [
                "Method `__init__` (line 165)",
                "Method `_remove_auth_from_netloc` (line 175)",
                "Method `redacted_url` (line 190)",
                "Method `validate` (line 202)",
                "Method `from_dict` (line 206)",
                "Method `to_dict` (line 219)",
                "Method `from_json` (line 228)",
                "Method `to_json` (line 231)",
                "Method `is_local_editable` (line 234)"
            ],
            "lineno": 164
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "vcs",
                "commit_id",
                "requested_revision"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "_from_dict",
            "args": [
                "cls",
                "d"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "_to_dict",
            "args": [
                "self"
            ],
            "lineno": 90
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "hash",
                "hashes"
            ],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "hash",
            "args": [
                "self"
            ],
            "lineno": 111
        },
        {
            "type": "function",
            "name": "hash",
            "args": [
                "self",
                "value"
            ],
            "lineno": 115
        },
        {
            "type": "function",
            "name": "_from_dict",
            "args": [
                "cls",
                "d"
            ],
            "lineno": 133
        },
        {
            "type": "function",
            "name": "_to_dict",
            "args": [
                "self"
            ],
            "lineno": 138
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "editable"
            ],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "_from_dict",
            "args": [
                "cls",
                "d"
            ],
            "lineno": 152
        },
        {
            "type": "function",
            "name": "_to_dict",
            "args": [
                "self"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "url",
                "info",
                "subdirectory"
            ],
            "lineno": 165
        },
        {
            "type": "function",
            "name": "_remove_auth_from_netloc",
            "args": [
                "self",
                "netloc"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "redacted_url",
            "args": [
                "self"
            ],
            "lineno": 190
        },
        {
            "type": "function",
            "name": "validate",
            "args": [
                "self"
            ],
            "lineno": 202
        },
        {
            "type": "function",
            "name": "from_dict",
            "args": [
                "cls",
                "d"
            ],
            "lineno": 206
        },
        {
            "type": "function",
            "name": "to_dict",
            "args": [
                "self"
            ],
            "lineno": 219
        },
        {
            "type": "function",
            "name": "from_json",
            "args": [
                "cls",
                "s"
            ],
            "lineno": 228
        },
        {
            "type": "function",
            "name": "to_json",
            "args": [
                "self"
            ],
            "lineno": 231
        },
        {
            "type": "function",
            "name": "is_local_editable",
            "args": [
                "self"
            ],
            "lineno": 234
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/models/format_control.py": [
        {
            "type": "class",
            "name": "FormatControl",
            "methods": [
                "Method `__init__` (line 13)",
                "Method `__eq__` (line 26)",
                "Method `__repr__` (line 35)",
                "Method `handle_mutual_excludes` (line 39)",
                "Method `get_allowed_formats` (line 61)",
                "Method `disallow_binaries` (line 73)"
            ],
            "lineno": 8
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "no_binary",
                "only_binary"
            ],
            "lineno": 13
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "handle_mutual_excludes",
            "args": [
                "value",
                "target",
                "other"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "get_allowed_formats",
            "args": [
                "self",
                "canonical_name"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "disallow_binaries",
            "args": [
                "self"
            ],
            "lineno": 73
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/models/index.py": [
        {
            "type": "class",
            "name": "PackageIndex",
            "methods": [
                "Method `__init__` (line 9)",
                "Method `_url_for_path` (line 21)"
            ],
            "lineno": 4
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "url",
                "file_storage_domain"
            ],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "_url_for_path",
            "args": [
                "self",
                "path"
            ],
            "lineno": 21
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/models/installation_report.py": [
        {
            "type": "class",
            "name": "InstallationReport",
            "methods": [
                "Method `__init__` (line 10)",
                "Method `_install_req_to_dict` (line 14)",
                "Method `to_dict` (line 42)"
            ],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "install_requirements"
            ],
            "lineno": 10
        },
        {
            "type": "function",
            "name": "_install_req_to_dict",
            "args": [
                "cls",
                "ireq"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "to_dict",
            "args": [
                "self"
            ],
            "lineno": 42
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/models/link.py": [
        {
            "type": "class",
            "name": "LinkHash",
            "methods": [
                "Method `__post_init__` (line 69)",
                "Method `find_hash_url_fragment` (line 74)",
                "Method `as_dict` (line 82)",
                "Method `as_hashes` (line 85)",
                "Method `is_hash_allowed` (line 89)"
            ],
            "lineno": 45
        },
        {
            "type": "class",
            "name": "MetadataFile",
            "methods": [
                "Method `__post_init__` (line 104)"
            ],
            "lineno": 99
        },
        {
            "type": "function",
            "name": "supported_hashes",
            "args": [
                "hashes"
            ],
            "lineno": 109
        },
        {
            "type": "function",
            "name": "_clean_url_path_part",
            "args": [
                "part"
            ],
            "lineno": 120
        },
        {
            "type": "function",
            "name": "_clean_file_url_path",
            "args": [
                "part"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "_clean_url_path",
            "args": [
                "path",
                "is_local_path"
            ],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "_ensure_quoted_url",
            "args": [
                "url"
            ],
            "lineno": 167
        },
        {
            "type": "class",
            "name": "Link",
            "methods": [
                "Method `__init__` (line 197)",
                "Method `from_json` (line 263)",
                "Method `from_element` (line 314)",
                "Method `__str__` (line 365)",
                "Method `__repr__` (line 375)",
                "Method `url` (line 379)",
                "Method `filename` (line 383)",
                "Method `file_path` (line 397)",
                "Method `scheme` (line 401)",
                "Method `netloc` (line 405)",
                "Method `path` (line 412)",
                "Method `splitext` (line 415)",
                "Method `ext` (line 419)",
                "Method `url_without_fragment` (line 423)",
                "Method `_egg_fragment` (line 434)",
                "Method `subdirectory_fragment` (line 455)",
                "Method `metadata_link` (line 461)",
                "Method `as_hashes` (line 470)",
                "Method `hash` (line 474)",
                "Method `hash_name` (line 478)",
                "Method `show_url` (line 482)",
                "Method `is_file` (line 486)",
                "Method `is_existing_dir` (line 489)",
                "Method `is_wheel` (line 493)",
                "Method `is_vcs` (line 497)",
                "Method `is_yanked` (line 503)",
                "Method `has_hash` (line 507)",
                "Method `is_hash_allowed` (line 510)"
            ],
            "lineno": 182
        },
        {
            "type": "class",
            "name": "_CleanResult",
            "methods": null,
            "lineno": 519
        },
        {
            "type": "function",
            "name": "_clean_link",
            "args": [
                "link"
            ],
            "lineno": 551
        },
        {
            "type": "function",
            "name": "links_equivalent",
            "args": [
                "link1",
                "link2"
            ],
            "lineno": 578
        },
        {
            "type": "function",
            "name": "__post_init__",
            "args": [
                "self"
            ],
            "lineno": 69
        },
        {
            "type": "function",
            "name": "find_hash_url_fragment",
            "args": [
                "cls",
                "url"
            ],
            "lineno": 74
        },
        {
            "type": "function",
            "name": "as_dict",
            "args": [
                "self"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "as_hashes",
            "args": [
                "self"
            ],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "is_hash_allowed",
            "args": [
                "self",
                "hashes"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "__post_init__",
            "args": [
                "self"
            ],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "url",
                "comes_from",
                "requires_python",
                "yanked_reason",
                "metadata_file_data",
                "cache_link_parsing",
                "hashes"
            ],
            "lineno": 197
        },
        {
            "type": "function",
            "name": "from_json",
            "args": [
                "cls",
                "file_data",
                "page_url"
            ],
            "lineno": 263
        },
        {
            "type": "function",
            "name": "from_element",
            "args": [
                "cls",
                "anchor_attribs",
                "page_url",
                "base_url"
            ],
            "lineno": 314
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 365
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 375
        },
        {
            "type": "function",
            "name": "url",
            "args": [
                "self"
            ],
            "lineno": 379
        },
        {
            "type": "function",
            "name": "filename",
            "args": [
                "self"
            ],
            "lineno": 383
        },
        {
            "type": "function",
            "name": "file_path",
            "args": [
                "self"
            ],
            "lineno": 397
        },
        {
            "type": "function",
            "name": "scheme",
            "args": [
                "self"
            ],
            "lineno": 401
        },
        {
            "type": "function",
            "name": "netloc",
            "args": [
                "self"
            ],
            "lineno": 405
        },
        {
            "type": "function",
            "name": "path",
            "args": [
                "self"
            ],
            "lineno": 412
        },
        {
            "type": "function",
            "name": "splitext",
            "args": [
                "self"
            ],
            "lineno": 415
        },
        {
            "type": "function",
            "name": "ext",
            "args": [
                "self"
            ],
            "lineno": 419
        },
        {
            "type": "function",
            "name": "url_without_fragment",
            "args": [
                "self"
            ],
            "lineno": 423
        },
        {
            "type": "function",
            "name": "_egg_fragment",
            "args": [
                "self"
            ],
            "lineno": 434
        },
        {
            "type": "function",
            "name": "subdirectory_fragment",
            "args": [
                "self"
            ],
            "lineno": 455
        },
        {
            "type": "function",
            "name": "metadata_link",
            "args": [
                "self"
            ],
            "lineno": 461
        },
        {
            "type": "function",
            "name": "as_hashes",
            "args": [
                "self"
            ],
            "lineno": 470
        },
        {
            "type": "function",
            "name": "hash",
            "args": [
                "self"
            ],
            "lineno": 474
        },
        {
            "type": "function",
            "name": "hash_name",
            "args": [
                "self"
            ],
            "lineno": 478
        },
        {
            "type": "function",
            "name": "show_url",
            "args": [
                "self"
            ],
            "lineno": 482
        },
        {
            "type": "function",
            "name": "is_file",
            "args": [
                "self"
            ],
            "lineno": 486
        },
        {
            "type": "function",
            "name": "is_existing_dir",
            "args": [
                "self"
            ],
            "lineno": 489
        },
        {
            "type": "function",
            "name": "is_wheel",
            "args": [
                "self"
            ],
            "lineno": 493
        },
        {
            "type": "function",
            "name": "is_vcs",
            "args": [
                "self"
            ],
            "lineno": 497
        },
        {
            "type": "function",
            "name": "is_yanked",
            "args": [
                "self"
            ],
            "lineno": 503
        },
        {
            "type": "function",
            "name": "has_hash",
            "args": [
                "self"
            ],
            "lineno": 507
        },
        {
            "type": "function",
            "name": "is_hash_allowed",
            "args": [
                "self",
                "hashes"
            ],
            "lineno": 510
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/models/scheme.py": [
        {
            "type": "class",
            "name": "Scheme",
            "methods": [
                "Method `__init__` (line 19)"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "platlib",
                "purelib",
                "headers",
                "scripts",
                "data"
            ],
            "lineno": 19
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/models/search_scope.py": [
        {
            "type": "class",
            "name": "SearchScope",
            "methods": [
                "Method `create` (line 26)",
                "Method `__init__` (line 67)",
                "Method `get_formatted_locations` (line 77)",
                "Method `get_index_urls_locations` (line 112)"
            ],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "create",
            "args": [
                "cls",
                "find_links",
                "index_urls",
                "no_index"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "find_links",
                "index_urls",
                "no_index"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "get_formatted_locations",
            "args": [
                "self"
            ],
            "lineno": 77
        },
        {
            "type": "function",
            "name": "get_index_urls_locations",
            "args": [
                "self",
                "project_name"
            ],
            "lineno": 112
        },
        {
            "type": "function",
            "name": "mkurl_pypi_url",
            "args": [
                "url"
            ],
            "lineno": 119
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/models/selection_prefs.py": [
        {
            "type": "class",
            "name": "SelectionPreferences",
            "methods": [
                "Method `__init__` (line 24)"
            ],
            "lineno": 6
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "allow_yanked",
                "allow_all_prereleases",
                "format_control",
                "prefer_binary",
                "ignore_requires_python"
            ],
            "lineno": 24
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/models/target_python.py": [
        {
            "type": "class",
            "name": "TargetPython",
            "methods": [
                "Method `__init__` (line 28)",
                "Method `format_given` (line 69)",
                "Method `get_sorted_tags` (line 89)",
                "Method `get_unsorted_tags` (line 114)"
            ],
            "lineno": 10
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "platforms",
                "py_version_info",
                "abis",
                "implementation"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "format_given",
            "args": [
                "self"
            ],
            "lineno": 69
        },
        {
            "type": "function",
            "name": "get_sorted_tags",
            "args": [
                "self"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "get_unsorted_tags",
            "args": [
                "self"
            ],
            "lineno": 114
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/models/wheel.py": [
        {
            "type": "class",
            "name": "Wheel",
            "methods": [
                "Method `__init__` (line 22)",
                "Method `get_formatted_file_tags` (line 44)",
                "Method `support_index_min` (line 48)",
                "Method `find_most_preferred_tag` (line 66)",
                "Method `supported` (line 87)"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "filename"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "get_formatted_file_tags",
            "args": [
                "self"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "support_index_min",
            "args": [
                "self",
                "tags"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "find_most_preferred_tag",
            "args": [
                "self",
                "tags",
                "tag_to_priority"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "supported",
            "args": [
                "self",
                "tags"
            ],
            "lineno": 87
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/models/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/network/auth.py": [
        {
            "type": "class",
            "name": "Credentials",
            "methods": null,
            "lineno": 38
        },
        {
            "type": "class",
            "name": "KeyRingBaseProvider",
            "methods": [
                "Method `get_auth_info` (line 50)",
                "Method `save_auth_info` (line 54)"
            ],
            "lineno": 44
        },
        {
            "type": "class",
            "name": "KeyRingNullProvider",
            "methods": [
                "Method `get_auth_info` (line 63)",
                "Method `save_auth_info` (line 66)"
            ],
            "lineno": 58
        },
        {
            "type": "class",
            "name": "KeyRingPythonProvider",
            "methods": [
                "Method `__init__` (line 75)",
                "Method `get_auth_info` (line 80)",
                "Method `save_auth_info` (line 98)"
            ],
            "lineno": 70
        },
        {
            "type": "class",
            "name": "KeyRingCliProvider",
            "methods": [
                "Method `__init__` (line 113)",
                "Method `get_auth_info` (line 116)",
                "Method `save_auth_info` (line 125)",
                "Method `_get_password` (line 128)",
                "Method `_set_password` (line 146)"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "get_keyring_provider",
            "args": [
                "provider"
            ],
            "lineno": 162
        },
        {
            "type": "class",
            "name": "MultiDomainBasicAuth",
            "methods": [
                "Method `__init__` (line 224)",
                "Method `keyring_provider` (line 242)",
                "Method `keyring_provider` (line 246)",
                "Method `use_keyring` (line 254)",
                "Method `_get_keyring_auth` (line 260)",
                "Method `_get_index_url` (line 282)",
                "Method `_get_new_credentials` (line 330)",
                "Method `_get_url_and_credentials` (line 387)",
                "Method `__call__` (line 435)",
                "Method `_prompt_for_password` (line 452)",
                "Method `_should_save_password_to_keyring` (line 466)",
                "Method `handle_401` (line 475)",
                "Method `warn_on_401` (line 538)",
                "Method `save_credentials` (line 546)"
            ],
            "lineno": 223
        },
        {
            "type": "function",
            "name": "get_auth_info",
            "args": [
                "self",
                "url",
                "username"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "save_auth_info",
            "args": [
                "self",
                "url",
                "username",
                "password"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "get_auth_info",
            "args": [
                "self",
                "url",
                "username"
            ],
            "lineno": 63
        },
        {
            "type": "function",
            "name": "save_auth_info",
            "args": [
                "self",
                "url",
                "username",
                "password"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "get_auth_info",
            "args": [
                "self",
                "url",
                "username"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "save_auth_info",
            "args": [
                "self",
                "url",
                "username",
                "password"
            ],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "cmd"
            ],
            "lineno": 113
        },
        {
            "type": "function",
            "name": "get_auth_info",
            "args": [
                "self",
                "url",
                "username"
            ],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "save_auth_info",
            "args": [
                "self",
                "url",
                "username",
                "password"
            ],
            "lineno": 125
        },
        {
            "type": "function",
            "name": "_get_password",
            "args": [
                "self",
                "service_name",
                "username"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "_set_password",
            "args": [
                "self",
                "service_name",
                "username",
                "password"
            ],
            "lineno": 146
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "prompting",
                "index_urls",
                "keyring_provider"
            ],
            "lineno": 224
        },
        {
            "type": "function",
            "name": "keyring_provider",
            "args": [
                "self"
            ],
            "lineno": 242
        },
        {
            "type": "function",
            "name": "keyring_provider",
            "args": [
                "self",
                "provider"
            ],
            "lineno": 246
        },
        {
            "type": "function",
            "name": "use_keyring",
            "args": [
                "self"
            ],
            "lineno": 254
        },
        {
            "type": "function",
            "name": "_get_keyring_auth",
            "args": [
                "self",
                "url",
                "username"
            ],
            "lineno": 260
        },
        {
            "type": "function",
            "name": "_get_index_url",
            "args": [
                "self",
                "url"
            ],
            "lineno": 282
        },
        {
            "type": "function",
            "name": "_get_new_credentials",
            "args": [
                "self",
                "original_url"
            ],
            "lineno": 330
        },
        {
            "type": "function",
            "name": "_get_url_and_credentials",
            "args": [
                "self",
                "original_url"
            ],
            "lineno": 387
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "req"
            ],
            "lineno": 435
        },
        {
            "type": "function",
            "name": "_prompt_for_password",
            "args": [
                "self",
                "netloc"
            ],
            "lineno": 452
        },
        {
            "type": "function",
            "name": "_should_save_password_to_keyring",
            "args": [
                "self"
            ],
            "lineno": 466
        },
        {
            "type": "function",
            "name": "handle_401",
            "args": [
                "self",
                "resp",
                "**kwargs"
            ],
            "lineno": 475
        },
        {
            "type": "function",
            "name": "warn_on_401",
            "args": [
                "self",
                "resp",
                "**kwargs"
            ],
            "lineno": 538
        },
        {
            "type": "function",
            "name": "save_credentials",
            "args": [
                "self",
                "resp",
                "**kwargs"
            ],
            "lineno": 546
        },
        {
            "type": "function",
            "name": "PATH_as_shutil_which_determines_it",
            "args": [],
            "lineno": 187
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/network/cache.py": [
        {
            "type": "function",
            "name": "is_from_cache",
            "args": [
                "response"
            ],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "suppressed_cache_errors",
            "args": [],
            "lineno": 22
        },
        {
            "type": "class",
            "name": "SafeFileCache",
            "methods": [
                "Method `__init__` (line 50)",
                "Method `_get_cache_path` (line 55)",
                "Method `get` (line 63)",
                "Method `_write` (line 73)",
                "Method `set` (line 82)",
                "Method `delete` (line 88)",
                "Method `get_body` (line 95)",
                "Method `set_body` (line 104)"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "directory"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "_get_cache_path",
            "args": [
                "self",
                "name"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "key"
            ],
            "lineno": 63
        },
        {
            "type": "function",
            "name": "_write",
            "args": [
                "self",
                "path",
                "data"
            ],
            "lineno": 73
        },
        {
            "type": "function",
            "name": "set",
            "args": [
                "self",
                "key",
                "value",
                "expires"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "delete",
            "args": [
                "self",
                "key"
            ],
            "lineno": 88
        },
        {
            "type": "function",
            "name": "get_body",
            "args": [
                "self",
                "key"
            ],
            "lineno": 95
        },
        {
            "type": "function",
            "name": "set_body",
            "args": [
                "self",
                "key",
                "body"
            ],
            "lineno": 104
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/network/download.py": [
        {
            "type": "function",
            "name": "_get_http_response_size",
            "args": [
                "resp"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "_prepare_download",
            "args": [
                "resp",
                "link",
                "progress_bar"
            ],
            "lineno": 30
        },
        {
            "type": "function",
            "name": "sanitize_content_filename",
            "args": [
                "filename"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "parse_content_disposition",
            "args": [
                "content_disposition",
                "default_filename"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "_get_http_response_filename",
            "args": [
                "resp",
                "link"
            ],
            "lineno": 94
        },
        {
            "type": "function",
            "name": "_http_get_download",
            "args": [
                "session",
                "link"
            ],
            "lineno": 115
        },
        {
            "type": "class",
            "name": "Downloader",
            "methods": [
                "Method `__init__` (line 123)",
                "Method `__call__` (line 131)"
            ],
            "lineno": 122
        },
        {
            "type": "class",
            "name": "BatchDownloader",
            "methods": [
                "Method `__init__` (line 154)",
                "Method `__call__` (line 162)"
            ],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "session",
                "progress_bar"
            ],
            "lineno": 123
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "link",
                "location"
            ],
            "lineno": 131
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "session",
                "progress_bar"
            ],
            "lineno": 154
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "links",
                "location"
            ],
            "lineno": 162
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/network/lazy_wheel.py": [
        {
            "type": "class",
            "name": "HTTPRangeRequestUnsupported",
            "methods": null,
            "lineno": 19
        },
        {
            "type": "function",
            "name": "dist_from_wheel_url",
            "args": [
                "name",
                "url",
                "session"
            ],
            "lineno": 23
        },
        {
            "type": "class",
            "name": "LazyZipOverHTTP",
            "methods": [
                "Method `__init__` (line 49)",
                "Method `mode` (line 66)",
                "Method `name` (line 71)",
                "Method `seekable` (line 75)",
                "Method `close` (line 79)",
                "Method `closed` (line 84)",
                "Method `read` (line 88)",
                "Method `readable` (line 102)",
                "Method `seek` (line 106)",
                "Method `tell` (line 116)",
                "Method `truncate` (line 120)",
                "Method `writable` (line 130)",
                "Method `__enter__` (line 134)",
                "Method `__exit__` (line 138)",
                "Method `_stay` (line 142)",
                "Method `_check_zip` (line 153)",
                "Method `_stream_response` (line 168)",
                "Method `_merge` (line 178)",
                "Method `_download` (line 200)"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "url",
                "session",
                "chunk_size"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "mode",
            "args": [
                "self"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 71
        },
        {
            "type": "function",
            "name": "seekable",
            "args": [
                "self"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "closed",
            "args": [
                "self"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "read",
            "args": [
                "self",
                "size"
            ],
            "lineno": 88
        },
        {
            "type": "function",
            "name": "readable",
            "args": [
                "self"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "seek",
            "args": [
                "self",
                "offset",
                "whence"
            ],
            "lineno": 106
        },
        {
            "type": "function",
            "name": "tell",
            "args": [
                "self"
            ],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "truncate",
            "args": [
                "self",
                "size"
            ],
            "lineno": 120
        },
        {
            "type": "function",
            "name": "writable",
            "args": [
                "self"
            ],
            "lineno": 130
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 134
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "*exc"
            ],
            "lineno": 138
        },
        {
            "type": "function",
            "name": "_stay",
            "args": [
                "self"
            ],
            "lineno": 142
        },
        {
            "type": "function",
            "name": "_check_zip",
            "args": [
                "self"
            ],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "_stream_response",
            "args": [
                "self",
                "start",
                "end",
                "base_headers"
            ],
            "lineno": 168
        },
        {
            "type": "function",
            "name": "_merge",
            "args": [
                "self",
                "start",
                "end",
                "left",
                "right"
            ],
            "lineno": 178
        },
        {
            "type": "function",
            "name": "_download",
            "args": [
                "self",
                "start",
                "end"
            ],
            "lineno": 200
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/network/session.py": [
        {
            "type": "function",
            "name": "looks_like_ci",
            "args": [],
            "lineno": 99
        },
        {
            "type": "function",
            "name": "user_agent",
            "args": [],
            "lineno": 109
        },
        {
            "type": "class",
            "name": "LocalFSAdapter",
            "methods": [
                "Method `send` (line 211)",
                "Method `close` (line 250)"
            ],
            "lineno": 210
        },
        {
            "type": "class",
            "name": "_SSLContextAdapterMixin",
            "methods": [
                "Method `__init__` (line 262)",
                "Method `init_poolmanager` (line 271)"
            ],
            "lineno": 254
        },
        {
            "type": "class",
            "name": "HTTPAdapter",
            "methods": null,
            "lineno": 288
        },
        {
            "type": "class",
            "name": "CacheControlAdapter",
            "methods": null,
            "lineno": 292
        },
        {
            "type": "class",
            "name": "InsecureHTTPAdapter",
            "methods": [
                "Method `cert_verify` (line 297)"
            ],
            "lineno": 296
        },
        {
            "type": "class",
            "name": "InsecureCacheControlAdapter",
            "methods": [
                "Method `cert_verify` (line 308)"
            ],
            "lineno": 307
        },
        {
            "type": "class",
            "name": "PipSession",
            "methods": [
                "Method `__init__` (line 321)",
                "Method `update_index_urls` (line 401)",
                "Method `add_trusted_host` (line 408)",
                "Method `iter_secure_origins` (line 441)",
                "Method `is_secure_origin` (line 446)",
                "Method `request` (line 513)"
            ],
            "lineno": 318
        },
        {
            "type": "function",
            "name": "send",
            "args": [
                "self",
                "request",
                "stream",
                "timeout",
                "verify",
                "cert",
                "proxies"
            ],
            "lineno": 211
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 250
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**kwargs"
            ],
            "lineno": 262
        },
        {
            "type": "function",
            "name": "init_poolmanager",
            "args": [
                "self",
                "connections",
                "maxsize",
                "block",
                "**pool_kwargs"
            ],
            "lineno": 271
        },
        {
            "type": "function",
            "name": "cert_verify",
            "args": [
                "self",
                "conn",
                "url",
                "verify",
                "cert"
            ],
            "lineno": 297
        },
        {
            "type": "function",
            "name": "cert_verify",
            "args": [
                "self",
                "conn",
                "url",
                "verify",
                "cert"
            ],
            "lineno": 308
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 321
        },
        {
            "type": "function",
            "name": "update_index_urls",
            "args": [
                "self",
                "new_index_urls"
            ],
            "lineno": 401
        },
        {
            "type": "function",
            "name": "add_trusted_host",
            "args": [
                "self",
                "host",
                "source",
                "suppress_logging"
            ],
            "lineno": 408
        },
        {
            "type": "function",
            "name": "iter_secure_origins",
            "args": [
                "self"
            ],
            "lineno": 441
        },
        {
            "type": "function",
            "name": "is_secure_origin",
            "args": [
                "self",
                "location"
            ],
            "lineno": 446
        },
        {
            "type": "function",
            "name": "request",
            "args": [
                "self",
                "method",
                "url",
                "*args",
                "**kwargs"
            ],
            "lineno": 513
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/network/utils.py": [
        {
            "type": "function",
            "name": "raise_for_status",
            "args": [
                "resp"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "response_chunks",
            "args": [
                "response",
                "chunk_size"
            ],
            "lineno": 57
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/network/xmlrpc.py": [
        {
            "type": "class",
            "name": "PipXmlrpcTransport",
            "methods": [
                "Method `__init__` (line 26)",
                "Method `request` (line 34)"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "index_url",
                "session",
                "use_datetime"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "request",
            "args": [
                "self",
                "host",
                "handler",
                "request_body",
                "verbose"
            ],
            "lineno": 34
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/network/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/check.py": [
        {
            "type": "class",
            "name": "PackageDetails",
            "methods": null,
            "lineno": 21
        },
        {
            "type": "function",
            "name": "create_package_set_from_installed",
            "args": [],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "check_package_set",
            "args": [
                "package_set",
                "should_ignore"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "check_install_conflicts",
            "args": [
                "to_install"
            ],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "_simulate_installation_of",
            "args": [
                "to_install",
                "package_set"
            ],
            "lineno": 121
        },
        {
            "type": "function",
            "name": "_create_whitelist",
            "args": [
                "would_be_installed",
                "package_set"
            ],
            "lineno": 140
        },
        {
            "type": "function",
            "name": "warn_legacy_versions_and_specifiers",
            "args": [
                "package_set"
            ],
            "lineno": 157
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/freeze.py": [
        {
            "type": "class",
            "name": "_EditableInfo",
            "methods": null,
            "lineno": 21
        },
        {
            "type": "function",
            "name": "freeze",
            "args": [
                "requirement",
                "local_only",
                "user_only",
                "paths",
                "isolated",
                "exclude_editable",
                "skip"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "_format_as_name_version",
            "args": [
                "dist"
            ],
            "lineno": 147
        },
        {
            "type": "function",
            "name": "_get_editable_info",
            "args": [
                "dist"
            ],
            "lineno": 154
        },
        {
            "type": "class",
            "name": "FrozenRequirement",
            "methods": [
                "Method `__init__` (line 221)",
                "Method `from_dist` (line 235)",
                "Method `__str__` (line 251)"
            ],
            "lineno": 220
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "req",
                "editable",
                "comments"
            ],
            "lineno": 221
        },
        {
            "type": "function",
            "name": "from_dist",
            "args": [
                "cls",
                "dist"
            ],
            "lineno": 235
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 251
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/prepare.py": [
        {
            "type": "function",
            "name": "_get_prepared_distribution",
            "args": [
                "req",
                "build_tracker",
                "finder",
                "build_isolation",
                "check_build_deps"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "unpack_vcs_link",
            "args": [
                "link",
                "location",
                "verbosity"
            ],
            "lineno": 77
        },
        {
            "type": "class",
            "name": "File",
            "methods": [
                "Method `__init__` (line 84)"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "get_http_url",
            "args": [
                "link",
                "download",
                "download_dir",
                "hashes"
            ],
            "lineno": 92
        },
        {
            "type": "function",
            "name": "get_file_url",
            "args": [
                "link",
                "download_dir",
                "hashes"
            ],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "unpack_url",
            "args": [
                "link",
                "location",
                "download",
                "verbosity",
                "download_dir",
                "hashes"
            ],
            "lineno": 140
        },
        {
            "type": "function",
            "name": "_check_download_dir",
            "args": [
                "link",
                "download_dir",
                "hashes",
                "warn_on_hash_mismatch"
            ],
            "lineno": 183
        },
        {
            "type": "class",
            "name": "RequirementPreparer",
            "methods": [
                "Method `__init__` (line 216)",
                "Method `_log_preparing_link` (line 274)",
                "Method `_ensure_link_req_src_dir` (line 301)",
                "Method `_get_linked_req_hashes` (line 324)",
                "Method `_fetch_metadata_only` (line 356)",
                "Method `_fetch_metadata_using_link_data_attr` (line 375)",
                "Method `_fetch_metadata_using_lazy_wheel` (line 416)",
                "Method `_complete_partial_requirements` (line 445)",
                "Method `prepare_linked_requirement` (line 489)",
                "Method `prepare_linked_requirements_more` (line 527)",
                "Method `_prepare_linked_requirement` (line 557)",
                "Method `save_linked_requirement` (line 649)",
                "Method `prepare_editable_requirement` (line 675)",
                "Method `prepare_installed_requirement` (line 708)"
            ],
            "lineno": 213
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "path",
                "content_type"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "build_dir",
                "download_dir",
                "src_dir",
                "build_isolation",
                "check_build_deps",
                "build_tracker",
                "session",
                "progress_bar",
                "finder",
                "require_hashes",
                "use_user_site",
                "lazy_wheel",
                "verbosity",
                "legacy_resolver"
            ],
            "lineno": 216
        },
        {
            "type": "function",
            "name": "_log_preparing_link",
            "args": [
                "self",
                "req"
            ],
            "lineno": 274
        },
        {
            "type": "function",
            "name": "_ensure_link_req_src_dir",
            "args": [
                "self",
                "req",
                "parallel_builds"
            ],
            "lineno": 301
        },
        {
            "type": "function",
            "name": "_get_linked_req_hashes",
            "args": [
                "self",
                "req"
            ],
            "lineno": 324
        },
        {
            "type": "function",
            "name": "_fetch_metadata_only",
            "args": [
                "self",
                "req"
            ],
            "lineno": 356
        },
        {
            "type": "function",
            "name": "_fetch_metadata_using_link_data_attr",
            "args": [
                "self",
                "req"
            ],
            "lineno": 375
        },
        {
            "type": "function",
            "name": "_fetch_metadata_using_lazy_wheel",
            "args": [
                "self",
                "link"
            ],
            "lineno": 416
        },
        {
            "type": "function",
            "name": "_complete_partial_requirements",
            "args": [
                "self",
                "partially_downloaded_reqs",
                "parallel_builds"
            ],
            "lineno": 445
        },
        {
            "type": "function",
            "name": "prepare_linked_requirement",
            "args": [
                "self",
                "req",
                "parallel_builds"
            ],
            "lineno": 489
        },
        {
            "type": "function",
            "name": "prepare_linked_requirements_more",
            "args": [
                "self",
                "reqs",
                "parallel_builds"
            ],
            "lineno": 527
        },
        {
            "type": "function",
            "name": "_prepare_linked_requirement",
            "args": [
                "self",
                "req",
                "parallel_builds"
            ],
            "lineno": 557
        },
        {
            "type": "function",
            "name": "save_linked_requirement",
            "args": [
                "self",
                "req"
            ],
            "lineno": 649
        },
        {
            "type": "function",
            "name": "prepare_editable_requirement",
            "args": [
                "self",
                "req"
            ],
            "lineno": 675
        },
        {
            "type": "function",
            "name": "prepare_installed_requirement",
            "args": [
                "self",
                "req",
                "skip_reason"
            ],
            "lineno": 708
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/req/constructors.py": [
        {
            "type": "function",
            "name": "_strip_extras",
            "args": [
                "path"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "convert_extras",
            "args": [
                "extras"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "_set_requirement_extras",
            "args": [
                "req",
                "new_extras"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "parse_editable",
            "args": [
                "editable_req"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "check_first_requirement_in_file",
            "args": [
                "filename"
            ],
            "lineno": 141
        },
        {
            "type": "function",
            "name": "deduce_helpful_msg",
            "args": [
                "req"
            ],
            "lineno": 169
        },
        {
            "type": "class",
            "name": "RequirementParts",
            "methods": [
                "Method `__init__` (line 195)"
            ],
            "lineno": 194
        },
        {
            "type": "function",
            "name": "parse_req_from_editable",
            "args": [
                "editable_req"
            ],
            "lineno": 208
        },
        {
            "type": "function",
            "name": "install_req_from_editable",
            "args": [
                "editable_req",
                "comes_from"
            ],
            "lineno": 227
        },
        {
            "type": "function",
            "name": "_looks_like_path",
            "args": [
                "name"
            ],
            "lineno": 259
        },
        {
            "type": "function",
            "name": "_get_url_from_path",
            "args": [
                "path",
                "name"
            ],
            "lineno": 278
        },
        {
            "type": "function",
            "name": "parse_req_from_line",
            "args": [
                "name",
                "line_source"
            ],
            "lineno": 312
        },
        {
            "type": "function",
            "name": "install_req_from_line",
            "args": [
                "name",
                "comes_from"
            ],
            "lineno": 402
        },
        {
            "type": "function",
            "name": "install_req_from_req_string",
            "args": [
                "req_string",
                "comes_from",
                "isolated",
                "use_pep517",
                "user_supplied"
            ],
            "lineno": 439
        },
        {
            "type": "function",
            "name": "install_req_from_parsed_requirement",
            "args": [
                "parsed_req",
                "isolated",
                "use_pep517",
                "user_supplied",
                "config_settings"
            ],
            "lineno": 477
        },
        {
            "type": "function",
            "name": "install_req_from_link_and_ireq",
            "args": [
                "link",
                "ireq"
            ],
            "lineno": 517
        },
        {
            "type": "function",
            "name": "install_req_drop_extras",
            "args": [
                "ireq"
            ],
            "lineno": 535
        },
        {
            "type": "function",
            "name": "install_req_extend_extras",
            "args": [
                "ireq",
                "extras"
            ],
            "lineno": 561
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "requirement",
                "link",
                "markers",
                "extras"
            ],
            "lineno": 195
        },
        {
            "type": "function",
            "name": "with_source",
            "args": [
                "text"
            ],
            "lineno": 360
        },
        {
            "type": "function",
            "name": "_parse_req_string",
            "args": [
                "req_as_string"
            ],
            "lineno": 365
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/req/req_file.py": [
        {
            "type": "class",
            "name": "ParsedRequirement",
            "methods": [
                "Method `__init__` (line 93)"
            ],
            "lineno": 92
        },
        {
            "type": "class",
            "name": "ParsedLine",
            "methods": [
                "Method `__init__` (line 111)"
            ],
            "lineno": 110
        },
        {
            "type": "function",
            "name": "parse_requirements",
            "args": [
                "filename",
                "session",
                "finder",
                "options",
                "constraint"
            ],
            "lineno": 137
        },
        {
            "type": "function",
            "name": "preprocess",
            "args": [
                "content"
            ],
            "lineno": 164
        },
        {
            "type": "function",
            "name": "handle_requirement_line",
            "args": [
                "line",
                "options"
            ],
            "lineno": 176
        },
        {
            "type": "function",
            "name": "handle_option_line",
            "args": [
                "opts",
                "filename",
                "lineno",
                "finder",
                "options",
                "session"
            ],
            "lineno": 210
        },
        {
            "type": "function",
            "name": "handle_line",
            "args": [
                "line",
                "options",
                "finder",
                "session"
            ],
            "lineno": 280
        },
        {
            "type": "class",
            "name": "RequirementsFileParser",
            "methods": [
                "Method `__init__` (line 325)",
                "Method `parse` (line 333)",
                "Method `_parse_and_recurse` (line 339)",
                "Method `_parse_file` (line 370)"
            ],
            "lineno": 324
        },
        {
            "type": "function",
            "name": "get_line_parser",
            "args": [
                "finder"
            ],
            "lineno": 394
        },
        {
            "type": "function",
            "name": "break_args_options",
            "args": [
                "line"
            ],
            "lineno": 418
        },
        {
            "type": "class",
            "name": "OptionParsingError",
            "methods": [
                "Method `__init__` (line 436)"
            ],
            "lineno": 435
        },
        {
            "type": "function",
            "name": "build_parser",
            "args": [],
            "lineno": 440
        },
        {
            "type": "function",
            "name": "join_lines",
            "args": [
                "lines_enum"
            ],
            "lineno": 463
        },
        {
            "type": "function",
            "name": "ignore_comments",
            "args": [
                "lines_enum"
            ],
            "lineno": 494
        },
        {
            "type": "function",
            "name": "expand_env_variables",
            "args": [
                "lines_enum"
            ],
            "lineno": 505
        },
        {
            "type": "function",
            "name": "get_file_content",
            "args": [
                "url",
                "session"
            ],
            "lineno": 532
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "requirement",
                "is_editable",
                "comes_from",
                "constraint",
                "options",
                "line_source"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "filename",
                "lineno",
                "args",
                "opts",
                "constraint"
            ],
            "lineno": 111
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "session",
                "line_parser"
            ],
            "lineno": 325
        },
        {
            "type": "function",
            "name": "parse",
            "args": [
                "self",
                "filename",
                "constraint"
            ],
            "lineno": 333
        },
        {
            "type": "function",
            "name": "_parse_and_recurse",
            "args": [
                "self",
                "filename",
                "constraint"
            ],
            "lineno": 339
        },
        {
            "type": "function",
            "name": "_parse_file",
            "args": [
                "self",
                "filename",
                "constraint"
            ],
            "lineno": 370
        },
        {
            "type": "function",
            "name": "parse_line",
            "args": [
                "line"
            ],
            "lineno": 395
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "msg"
            ],
            "lineno": 436
        },
        {
            "type": "function",
            "name": "parser_exit",
            "args": [
                "self",
                "msg"
            ],
            "lineno": 453
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/req/req_install.py": [
        {
            "type": "class",
            "name": "InstallRequirement",
            "methods": [
                "Method `__init__` (line 72)",
                "Method `__str__` (line 200)",
                "Method `__repr__` (line 224)",
                "Method `format_debug` (line 229)",
                "Method `name` (line 242)",
                "Method `supports_pyproject_editable` (line 248)",
                "Method `specifier` (line 260)",
                "Method `is_direct` (line 265)",
                "Method `is_pinned` (line 270)",
                "Method `match_markers` (line 279)",
                "Method `has_hash_options` (line 297)",
                "Method `hashes` (line 306)",
                "Method `from_path` (line 333)",
                "Method `ensure_build_location` (line 348)",
                "Method `_set_requirement` (line 391)",
                "Method `warn_on_mismatching_name` (line 413)",
                "Method `check_if_exists` (line 431)",
                "Method `is_wheel` (line 470)",
                "Method `is_wheel_from_cache` (line 476)",
                "Method `unpacked_source_directory` (line 483)",
                "Method `setup_py_path` (line 490)",
                "Method `setup_cfg_path` (line 497)",
                "Method `pyproject_toml_path` (line 504)",
                "Method `load_pyproject_toml` (line 508)",
                "Method `isolated_editable_sanity_check` (line 536)",
                "Method `prepare_metadata` (line 557)",
                "Method `metadata` (line 602)",
                "Method `get_dist` (line 608)",
                "Method `assert_source_matches_version` (line 622)",
                "Method `ensure_has_source_dir` (line 640)",
                "Method `needs_unpacked_archive` (line 662)",
                "Method `ensure_pristine_source_checkout` (line 666)",
                "Method `update_editable` (line 684)",
                "Method `uninstall` (line 704)",
                "Method `_get_archive_name` (line 730)",
                "Method `archive` (line 744)",
                "Method `install` (line 811)"
            ],
            "lineno": 65
        },
        {
            "type": "function",
            "name": "check_invalid_constraint_type",
            "args": [
                "req"
            ],
            "lineno": 869
        },
        {
            "type": "function",
            "name": "_has_option",
            "args": [
                "options",
                "reqs",
                "option"
            ],
            "lineno": 897
        },
        {
            "type": "function",
            "name": "check_legacy_setup_py_options",
            "args": [
                "options",
                "reqs"
            ],
            "lineno": 906
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "req",
                "comes_from",
                "editable",
                "link",
                "markers",
                "use_pep517",
                "isolated"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 200
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 224
        },
        {
            "type": "function",
            "name": "format_debug",
            "args": [
                "self"
            ],
            "lineno": 229
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 242
        },
        {
            "type": "function",
            "name": "supports_pyproject_editable",
            "args": [
                "self"
            ],
            "lineno": 248
        },
        {
            "type": "function",
            "name": "specifier",
            "args": [
                "self"
            ],
            "lineno": 260
        },
        {
            "type": "function",
            "name": "is_direct",
            "args": [
                "self"
            ],
            "lineno": 265
        },
        {
            "type": "function",
            "name": "is_pinned",
            "args": [
                "self"
            ],
            "lineno": 270
        },
        {
            "type": "function",
            "name": "match_markers",
            "args": [
                "self",
                "extras_requested"
            ],
            "lineno": 279
        },
        {
            "type": "function",
            "name": "has_hash_options",
            "args": [
                "self"
            ],
            "lineno": 297
        },
        {
            "type": "function",
            "name": "hashes",
            "args": [
                "self",
                "trust_internet"
            ],
            "lineno": 306
        },
        {
            "type": "function",
            "name": "from_path",
            "args": [
                "self"
            ],
            "lineno": 333
        },
        {
            "type": "function",
            "name": "ensure_build_location",
            "args": [
                "self",
                "build_dir",
                "autodelete",
                "parallel_builds"
            ],
            "lineno": 348
        },
        {
            "type": "function",
            "name": "_set_requirement",
            "args": [
                "self"
            ],
            "lineno": 391
        },
        {
            "type": "function",
            "name": "warn_on_mismatching_name",
            "args": [
                "self"
            ],
            "lineno": 413
        },
        {
            "type": "function",
            "name": "check_if_exists",
            "args": [
                "self",
                "use_user_site"
            ],
            "lineno": 431
        },
        {
            "type": "function",
            "name": "is_wheel",
            "args": [
                "self"
            ],
            "lineno": 470
        },
        {
            "type": "function",
            "name": "is_wheel_from_cache",
            "args": [
                "self"
            ],
            "lineno": 476
        },
        {
            "type": "function",
            "name": "unpacked_source_directory",
            "args": [
                "self"
            ],
            "lineno": 483
        },
        {
            "type": "function",
            "name": "setup_py_path",
            "args": [
                "self"
            ],
            "lineno": 490
        },
        {
            "type": "function",
            "name": "setup_cfg_path",
            "args": [
                "self"
            ],
            "lineno": 497
        },
        {
            "type": "function",
            "name": "pyproject_toml_path",
            "args": [
                "self"
            ],
            "lineno": 504
        },
        {
            "type": "function",
            "name": "load_pyproject_toml",
            "args": [
                "self"
            ],
            "lineno": 508
        },
        {
            "type": "function",
            "name": "isolated_editable_sanity_check",
            "args": [
                "self"
            ],
            "lineno": 536
        },
        {
            "type": "function",
            "name": "prepare_metadata",
            "args": [
                "self"
            ],
            "lineno": 557
        },
        {
            "type": "function",
            "name": "metadata",
            "args": [
                "self"
            ],
            "lineno": 602
        },
        {
            "type": "function",
            "name": "get_dist",
            "args": [
                "self"
            ],
            "lineno": 608
        },
        {
            "type": "function",
            "name": "assert_source_matches_version",
            "args": [
                "self"
            ],
            "lineno": 622
        },
        {
            "type": "function",
            "name": "ensure_has_source_dir",
            "args": [
                "self",
                "parent_dir",
                "autodelete",
                "parallel_builds"
            ],
            "lineno": 640
        },
        {
            "type": "function",
            "name": "needs_unpacked_archive",
            "args": [
                "self",
                "archive_source"
            ],
            "lineno": 662
        },
        {
            "type": "function",
            "name": "ensure_pristine_source_checkout",
            "args": [
                "self"
            ],
            "lineno": 666
        },
        {
            "type": "function",
            "name": "update_editable",
            "args": [
                "self"
            ],
            "lineno": 684
        },
        {
            "type": "function",
            "name": "uninstall",
            "args": [
                "self",
                "auto_confirm",
                "verbose"
            ],
            "lineno": 704
        },
        {
            "type": "function",
            "name": "_get_archive_name",
            "args": [
                "self",
                "path",
                "parentdir",
                "rootdir"
            ],
            "lineno": 730
        },
        {
            "type": "function",
            "name": "archive",
            "args": [
                "self",
                "build_dir"
            ],
            "lineno": 744
        },
        {
            "type": "function",
            "name": "install",
            "args": [
                "self",
                "global_options",
                "root",
                "home",
                "prefix",
                "warn_script_location",
                "use_user_site",
                "pycompile"
            ],
            "lineno": 811
        },
        {
            "type": "function",
            "name": "_clean_zip_name",
            "args": [
                "name",
                "prefix"
            ],
            "lineno": 731
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/req/req_set.py": [
        {
            "type": "class",
            "name": "RequirementSet",
            "methods": [
                "Method `__init__` (line 16)",
                "Method `__str__` (line 24)",
                "Method `__repr__` (line 31)",
                "Method `add_unnamed_requirement` (line 44)",
                "Method `add_named_requirement` (line 48)",
                "Method `has_requirement` (line 54)",
                "Method `get_requirement` (line 62)",
                "Method `all_requirements` (line 71)",
                "Method `requirements_to_install` (line 75)",
                "Method `warn_legacy_versions_and_specifiers` (line 87)"
            ],
            "lineno": 15
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "check_supported_wheels"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "add_unnamed_requirement",
            "args": [
                "self",
                "install_req"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "add_named_requirement",
            "args": [
                "self",
                "install_req"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "has_requirement",
            "args": [
                "self",
                "name"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "get_requirement",
            "args": [
                "self",
                "name"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "all_requirements",
            "args": [
                "self"
            ],
            "lineno": 71
        },
        {
            "type": "function",
            "name": "requirements_to_install",
            "args": [
                "self"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "warn_legacy_versions_and_specifiers",
            "args": [
                "self"
            ],
            "lineno": 87
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/req/req_uninstall.py": [
        {
            "type": "function",
            "name": "_script_names",
            "args": [
                "bin_dir",
                "script_name",
                "is_gui"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "_unique",
            "args": [
                "fn"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "uninstallation_paths",
            "args": [
                "dist"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "compact",
            "args": [
                "paths"
            ],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "compress_for_rename",
            "args": [
                "paths"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "compress_for_output_listing",
            "args": [
                "paths"
            ],
            "lineno": 151
        },
        {
            "type": "class",
            "name": "StashedUninstallPathSet",
            "methods": [
                "Method `__init__` (line 204)",
                "Method `_get_directory_stash` (line 212)",
                "Method `_get_file_stash` (line 226)",
                "Method `stash` (line 253)",
                "Method `commit` (line 274)",
                "Method `rollback` (line 281)",
                "Method `can_rollback` (line 301)"
            ],
            "lineno": 200
        },
        {
            "type": "class",
            "name": "UninstallPathSet",
            "methods": [
                "Method `__init__` (line 309)",
                "Method `_permitted` (line 320)",
                "Method `add` (line 331)",
                "Method `add_pth` (line 350)",
                "Method `remove` (line 359)",
                "Method `_allowed_to_proceed` (line 388)",
                "Method `rollback` (line 416)",
                "Method `commit` (line 429)",
                "Method `from_dist` (line 434)"
            ],
            "lineno": 305
        },
        {
            "type": "class",
            "name": "UninstallPthEntries",
            "methods": [
                "Method `__init__` (line 595)",
                "Method `add` (line 600)",
                "Method `remove` (line 615)",
                "Method `rollback` (line 642)"
            ],
            "lineno": 594
        },
        {
            "type": "function",
            "name": "unique",
            "args": [
                "*args",
                "**kw"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "norm_join",
            "args": [
                "*a"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 204
        },
        {
            "type": "function",
            "name": "_get_directory_stash",
            "args": [
                "self",
                "path"
            ],
            "lineno": 212
        },
        {
            "type": "function",
            "name": "_get_file_stash",
            "args": [
                "self",
                "path"
            ],
            "lineno": 226
        },
        {
            "type": "function",
            "name": "stash",
            "args": [
                "self",
                "path"
            ],
            "lineno": 253
        },
        {
            "type": "function",
            "name": "commit",
            "args": [
                "self"
            ],
            "lineno": 274
        },
        {
            "type": "function",
            "name": "rollback",
            "args": [
                "self"
            ],
            "lineno": 281
        },
        {
            "type": "function",
            "name": "can_rollback",
            "args": [
                "self"
            ],
            "lineno": 301
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "dist"
            ],
            "lineno": 309
        },
        {
            "type": "function",
            "name": "_permitted",
            "args": [
                "self",
                "path"
            ],
            "lineno": 320
        },
        {
            "type": "function",
            "name": "add",
            "args": [
                "self",
                "path"
            ],
            "lineno": 331
        },
        {
            "type": "function",
            "name": "add_pth",
            "args": [
                "self",
                "pth_file",
                "entry"
            ],
            "lineno": 350
        },
        {
            "type": "function",
            "name": "remove",
            "args": [
                "self",
                "auto_confirm",
                "verbose"
            ],
            "lineno": 359
        },
        {
            "type": "function",
            "name": "_allowed_to_proceed",
            "args": [
                "self",
                "verbose"
            ],
            "lineno": 388
        },
        {
            "type": "function",
            "name": "rollback",
            "args": [
                "self"
            ],
            "lineno": 416
        },
        {
            "type": "function",
            "name": "commit",
            "args": [
                "self"
            ],
            "lineno": 429
        },
        {
            "type": "function",
            "name": "from_dist",
            "args": [
                "cls",
                "dist"
            ],
            "lineno": 434
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "pth_file"
            ],
            "lineno": 595
        },
        {
            "type": "function",
            "name": "add",
            "args": [
                "self",
                "entry"
            ],
            "lineno": 600
        },
        {
            "type": "function",
            "name": "remove",
            "args": [
                "self"
            ],
            "lineno": 615
        },
        {
            "type": "function",
            "name": "rollback",
            "args": [
                "self"
            ],
            "lineno": 642
        },
        {
            "type": "function",
            "name": "_display",
            "args": [
                "msg",
                "paths"
            ],
            "lineno": 391
        },
        {
            "type": "function",
            "name": "iter_scripts_to_remove",
            "args": [
                "dist",
                "bin_dir"
            ],
            "lineno": 578
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/req/__init__.py": [
        {
            "type": "class",
            "name": "InstallationResult",
            "methods": [
                "Method `__init__` (line 22)",
                "Method `__repr__` (line 25)"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "_validate_requirements",
            "args": [
                "requirements"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "install_given_reqs",
            "args": [
                "requirements",
                "global_options",
                "root",
                "home",
                "prefix",
                "warn_script_location",
                "use_user_site",
                "pycompile"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 25
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/resolution/base.py": [
        {
            "type": "class",
            "name": "BaseResolver",
            "methods": [
                "Method `resolve` (line 12)",
                "Method `get_installation_order` (line 17)"
            ],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "resolve",
            "args": [
                "self",
                "root_reqs",
                "check_supported_wheels"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "get_installation_order",
            "args": [
                "self",
                "req_set"
            ],
            "lineno": 17
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/resolution/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/appdirs.py": [
        {
            "type": "function",
            "name": "user_cache_dir",
            "args": [
                "appname"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "_macos_user_config_dir",
            "args": [
                "appname",
                "roaming"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "user_config_dir",
            "args": [
                "appname",
                "roaming"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "site_config_dirs",
            "args": [
                "appname"
            ],
            "lineno": 43
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/compat.py": [
        {
            "type": "function",
            "name": "has_tls",
            "args": [],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "get_path_uid",
            "args": [
                "path"
            ],
            "lineno": 27
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/compatibility_tags.py": [
        {
            "type": "function",
            "name": "version_info_to_nodot",
            "args": [
                "version_info"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "_mac_platforms",
            "args": [
                "arch"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "_custom_manylinux_platforms",
            "args": [
                "arch"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "_get_custom_platforms",
            "args": [
                "arch"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "_expand_allowed_platforms",
            "args": [
                "platforms"
            ],
            "lineno": 78
        },
        {
            "type": "function",
            "name": "_get_python_version",
            "args": [
                "version"
            ],
            "lineno": 95
        },
        {
            "type": "function",
            "name": "_get_custom_interpreter",
            "args": [
                "implementation",
                "version"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "get_supported",
            "args": [
                "version",
                "platforms",
                "impl",
                "abis"
            ],
            "lineno": 112
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/datetime.py": [
        {
            "type": "function",
            "name": "today_is_later_than",
            "args": [
                "year",
                "month",
                "day"
            ],
            "lineno": 7
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/deprecation.py": [
        {
            "type": "class",
            "name": "PipDeprecationWarning",
            "methods": null,
            "lineno": 16
        },
        {
            "type": "function",
            "name": "_showwarning",
            "args": [
                "message",
                "category",
                "filename",
                "lineno",
                "file",
                "line"
            ],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "install_warning_logger",
            "args": [],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "deprecated",
            "args": [],
            "lineno": 55
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/direct_url_helpers.py": [
        {
            "type": "function",
            "name": "direct_url_as_pep440_direct_reference",
            "args": [
                "direct_url",
                "name"
            ],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "direct_url_for_editable",
            "args": [
                "source_dir"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "direct_url_from_link",
            "args": [
                "link",
                "source_dir",
                "link_is_in_wheel_cache"
            ],
            "lineno": 39
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/egg_link.py": [
        {
            "type": "function",
            "name": "_egg_link_names",
            "args": [
                "raw_name"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "egg_link_path_from_sys_path",
            "args": [
                "raw_name"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "egg_link_path_from_location",
            "args": [
                "raw_name"
            ],
            "lineno": 46
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/encoding.py": [
        {
            "type": "function",
            "name": "auto_decode",
            "args": [
                "data"
            ],
            "lineno": 20
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/entrypoints.py": [
        {
            "type": "function",
            "name": "_wrapper",
            "args": [
                "args"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "get_best_invocation_for_this_pip",
            "args": [],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "get_best_invocation_for_this_python",
            "args": [],
            "lineno": 73
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/filesystem.py": [
        {
            "type": "function",
            "name": "check_path_owner",
            "args": [
                "path"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "adjacent_tmp_file",
            "args": [
                "path",
                "**kwargs"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "test_writable_dir",
            "args": [
                "path"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "_test_writable_dir_win",
            "args": [
                "path"
            ],
            "lineno": 94
        },
        {
            "type": "function",
            "name": "find_files",
            "args": [
                "path",
                "pattern"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "file_size",
            "args": [
                "path"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "format_file_size",
            "args": [
                "path"
            ],
            "lineno": 139
        },
        {
            "type": "function",
            "name": "directory_size",
            "args": [
                "path"
            ],
            "lineno": 143
        },
        {
            "type": "function",
            "name": "format_directory_size",
            "args": [
                "path"
            ],
            "lineno": 152
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/filetypes.py": [
        {
            "type": "function",
            "name": "is_archive_file",
            "args": [
                "name"
            ],
            "lineno": 22
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/glibc.py": [
        {
            "type": "function",
            "name": "glibc_version_string",
            "args": [],
            "lineno": 6
        },
        {
            "type": "function",
            "name": "glibc_version_string_confstr",
            "args": [],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "glibc_version_string_ctypes",
            "args": [],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "libc_ver",
            "args": [],
            "lineno": 78
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/hashes.py": [
        {
            "type": "class",
            "name": "Hashes",
            "methods": [
                "Method `__init__` (line 31)",
                "Method `__and__` (line 43)",
                "Method `digest_count` (line 63)",
                "Method `is_hash_allowed` (line 66)",
                "Method `check_against_chunks` (line 70)",
                "Method `_raise` (line 93)",
                "Method `check_against_file` (line 96)",
                "Method `check_against_path` (line 104)",
                "Method `has_one_of` (line 108)",
                "Method `__bool__` (line 115)",
                "Method `__eq__` (line 119)",
                "Method `__hash__` (line 124)"
            ],
            "lineno": 25
        },
        {
            "type": "class",
            "name": "MissingHashes",
            "methods": [
                "Method `__init__` (line 144)",
                "Method `_raise` (line 150)"
            ],
            "lineno": 136
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "hashes"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "__and__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "digest_count",
            "args": [
                "self"
            ],
            "lineno": 63
        },
        {
            "type": "function",
            "name": "is_hash_allowed",
            "args": [
                "self",
                "hash_name",
                "hex_digest"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "check_against_chunks",
            "args": [
                "self",
                "chunks"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "_raise",
            "args": [
                "self",
                "gots"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "check_against_file",
            "args": [
                "self",
                "file"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "check_against_path",
            "args": [
                "self",
                "path"
            ],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "has_one_of",
            "args": [
                "self",
                "hashes"
            ],
            "lineno": 108
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 115
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 144
        },
        {
            "type": "function",
            "name": "_raise",
            "args": [
                "self",
                "gots"
            ],
            "lineno": 150
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/logging.py": [
        {
            "type": "class",
            "name": "BrokenStdoutLoggingError",
            "methods": null,
            "lineno": 35
        },
        {
            "type": "function",
            "name": "_is_broken_pipe_error",
            "args": [
                "exc_class",
                "exc"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "indent_log",
            "args": [
                "num"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "get_indentation",
            "args": [],
            "lineno": 69
        },
        {
            "type": "class",
            "name": "IndentingFormatter",
            "methods": [
                "Method `__init__` (line 76)",
                "Method `get_message_start` (line 91)",
                "Method `format` (line 107)"
            ],
            "lineno": 73
        },
        {
            "type": "class",
            "name": "IndentedRenderable",
            "methods": [
                "Method `__rich_console__` (line 129)"
            ],
            "lineno": 125
        },
        {
            "type": "class",
            "name": "RichPipStreamHandler",
            "methods": [
                "Method `__init__` (line 143)",
                "Method `emit` (line 153)",
                "Method `handleError` (line 181)"
            ],
            "lineno": 140
        },
        {
            "type": "class",
            "name": "BetterRotatingFileHandler",
            "methods": [
                "Method `_open` (line 201)"
            ],
            "lineno": 200
        },
        {
            "type": "class",
            "name": "MaxLevelFilter",
            "methods": [
                "Method `__init__` (line 207)",
                "Method `filter` (line 210)"
            ],
            "lineno": 206
        },
        {
            "type": "class",
            "name": "ExcludeLoggerFilter",
            "methods": [
                "Method `filter` (line 220)"
            ],
            "lineno": 214
        },
        {
            "type": "function",
            "name": "setup_logging",
            "args": [
                "verbosity",
                "no_color",
                "user_log_file"
            ],
            "lineno": 226
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "get_message_start",
            "args": [
                "self",
                "formatted",
                "levelno"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "format",
            "args": [
                "self",
                "record"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 129
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "stream",
                "no_color"
            ],
            "lineno": 143
        },
        {
            "type": "function",
            "name": "emit",
            "args": [
                "self",
                "record"
            ],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "handleError",
            "args": [
                "self",
                "record"
            ],
            "lineno": 181
        },
        {
            "type": "function",
            "name": "_open",
            "args": [
                "self"
            ],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "level"
            ],
            "lineno": 207
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "record"
            ],
            "lineno": 210
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "record"
            ],
            "lineno": 220
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/misc.py": [
        {
            "type": "function",
            "name": "get_pip_version",
            "args": [],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "normalize_version_info",
            "args": [
                "py_version_info"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "ensure_dir",
            "args": [
                "path"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "get_prog",
            "args": [],
            "lineno": 112
        },
        {
            "type": "function",
            "name": "rmtree",
            "args": [
                "dir",
                "ignore_errors",
                "onexc"
            ],
            "lineno": 127
        },
        {
            "type": "function",
            "name": "_onerror_ignore",
            "args": [
                "*_args"
            ],
            "lineno": 149
        },
        {
            "type": "function",
            "name": "_onerror_reraise",
            "args": [
                "*_args"
            ],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "rmtree_errorhandler",
            "args": [
                "func",
                "path",
                "exc_info"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "display_path",
            "args": [
                "path"
            ],
            "lineno": 198
        },
        {
            "type": "function",
            "name": "backup_dir",
            "args": [
                "dir",
                "ext"
            ],
            "lineno": 207
        },
        {
            "type": "function",
            "name": "ask_path_exists",
            "args": [
                "message",
                "options"
            ],
            "lineno": 218
        },
        {
            "type": "function",
            "name": "_check_no_input",
            "args": [
                "message"
            ],
            "lineno": 225
        },
        {
            "type": "function",
            "name": "ask",
            "args": [
                "message",
                "options"
            ],
            "lineno": 233
        },
        {
            "type": "function",
            "name": "ask_input",
            "args": [
                "message"
            ],
            "lineno": 248
        },
        {
            "type": "function",
            "name": "ask_password",
            "args": [
                "message"
            ],
            "lineno": 254
        },
        {
            "type": "function",
            "name": "strtobool",
            "args": [
                "val"
            ],
            "lineno": 260
        },
        {
            "type": "function",
            "name": "format_size",
            "args": [
                "bytes"
            ],
            "lineno": 276
        },
        {
            "type": "function",
            "name": "tabulate",
            "args": [
                "rows"
            ],
            "lineno": 287
        },
        {
            "type": "function",
            "name": "is_installable_dir",
            "args": [
                "path"
            ],
            "lineno": 301
        },
        {
            "type": "function",
            "name": "read_chunks",
            "args": [
                "file",
                "size"
            ],
            "lineno": 318
        },
        {
            "type": "function",
            "name": "normalize_path",
            "args": [
                "path",
                "resolve_symlinks"
            ],
            "lineno": 329
        },
        {
            "type": "function",
            "name": "splitext",
            "args": [
                "path"
            ],
            "lineno": 342
        },
        {
            "type": "function",
            "name": "renames",
            "args": [
                "old",
                "new"
            ],
            "lineno": 351
        },
        {
            "type": "function",
            "name": "is_local",
            "args": [
                "path"
            ],
            "lineno": 368
        },
        {
            "type": "function",
            "name": "write_output",
            "args": [
                "msg",
                "*args"
            ],
            "lineno": 382
        },
        {
            "type": "class",
            "name": "StreamWrapper",
            "methods": [
                "Method `from_stream` (line 390)",
                "Method `encoding` (line 398)"
            ],
            "lineno": 386
        },
        {
            "type": "function",
            "name": "captured_output",
            "args": [
                "stream_name"
            ],
            "lineno": 403
        },
        {
            "type": "function",
            "name": "captured_stdout",
            "args": [],
            "lineno": 417
        },
        {
            "type": "function",
            "name": "captured_stderr",
            "args": [],
            "lineno": 429
        },
        {
            "type": "function",
            "name": "enum",
            "args": [
                "*sequential",
                "**named"
            ],
            "lineno": 437
        },
        {
            "type": "function",
            "name": "build_netloc",
            "args": [
                "host",
                "port"
            ],
            "lineno": 444
        },
        {
            "type": "function",
            "name": "build_url_from_netloc",
            "args": [
                "netloc",
                "scheme"
            ],
            "lineno": 456
        },
        {
            "type": "function",
            "name": "parse_netloc",
            "args": [
                "netloc"
            ],
            "lineno": 466
        },
        {
            "type": "function",
            "name": "split_auth_from_netloc",
            "args": [
                "netloc"
            ],
            "lineno": 475
        },
        {
            "type": "function",
            "name": "redact_netloc",
            "args": [
                "netloc"
            ],
            "lineno": 504
        },
        {
            "type": "function",
            "name": "_transform_url",
            "args": [
                "url",
                "transform_netloc"
            ],
            "lineno": 524
        },
        {
            "type": "function",
            "name": "_get_netloc",
            "args": [
                "netloc"
            ],
            "lineno": 544
        },
        {
            "type": "function",
            "name": "_redact_netloc",
            "args": [
                "netloc"
            ],
            "lineno": 548
        },
        {
            "type": "function",
            "name": "split_auth_netloc_from_url",
            "args": [
                "url"
            ],
            "lineno": 552
        },
        {
            "type": "function",
            "name": "remove_auth_from_url",
            "args": [
                "url"
            ],
            "lineno": 564
        },
        {
            "type": "function",
            "name": "redact_auth_from_url",
            "args": [
                "url"
            ],
            "lineno": 571
        },
        {
            "type": "function",
            "name": "redact_auth_from_requirement",
            "args": [
                "req"
            ],
            "lineno": 576
        },
        {
            "type": "class",
            "name": "HiddenText",
            "methods": [
                "Method `__init__` (line 584)",
                "Method `__repr__` (line 588)",
                "Method `__str__` (line 591)",
                "Method `__eq__` (line 595)"
            ],
            "lineno": 583
        },
        {
            "type": "function",
            "name": "hide_value",
            "args": [
                "value"
            ],
            "lineno": 604
        },
        {
            "type": "function",
            "name": "hide_url",
            "args": [
                "url"
            ],
            "lineno": 608
        },
        {
            "type": "function",
            "name": "protect_pip_from_modification_on_windows",
            "args": [
                "modifying_pip"
            ],
            "lineno": 613
        },
        {
            "type": "function",
            "name": "check_externally_managed",
            "args": [],
            "lineno": 639
        },
        {
            "type": "function",
            "name": "is_console_interactive",
            "args": [],
            "lineno": 654
        },
        {
            "type": "function",
            "name": "hash_file",
            "args": [
                "path",
                "blocksize"
            ],
            "lineno": 659
        },
        {
            "type": "function",
            "name": "pairwise",
            "args": [
                "iterable"
            ],
            "lineno": 671
        },
        {
            "type": "function",
            "name": "partition",
            "args": [
                "pred",
                "iterable"
            ],
            "lineno": 682
        },
        {
            "type": "class",
            "name": "ConfiguredBuildBackendHookCaller",
            "methods": [
                "Method `__init__` (line 697)",
                "Method `build_wheel` (line 711)",
                "Method `build_sdist` (line 722)",
                "Method `build_editable` (line 730)",
                "Method `get_requires_for_build_wheel` (line 741)",
                "Method `get_requires_for_build_sdist` (line 747)",
                "Method `get_requires_for_build_editable` (line 753)",
                "Method `prepare_metadata_for_build_wheel` (line 759)",
                "Method `prepare_metadata_for_build_editable` (line 772)"
            ],
            "lineno": 696
        },
        {
            "type": "function",
            "name": "from_stream",
            "args": [
                "cls",
                "orig_stream"
            ],
            "lineno": 390
        },
        {
            "type": "function",
            "name": "encoding",
            "args": [
                "self"
            ],
            "lineno": 398
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "secret",
                "redacted"
            ],
            "lineno": 584
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 588
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 591
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 595
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "config_holder",
                "source_dir",
                "build_backend",
                "backend_path",
                "runner",
                "python_executable"
            ],
            "lineno": 697
        },
        {
            "type": "function",
            "name": "build_wheel",
            "args": [
                "self",
                "wheel_directory",
                "config_settings",
                "metadata_directory"
            ],
            "lineno": 711
        },
        {
            "type": "function",
            "name": "build_sdist",
            "args": [
                "self",
                "sdist_directory",
                "config_settings"
            ],
            "lineno": 722
        },
        {
            "type": "function",
            "name": "build_editable",
            "args": [
                "self",
                "wheel_directory",
                "config_settings",
                "metadata_directory"
            ],
            "lineno": 730
        },
        {
            "type": "function",
            "name": "get_requires_for_build_wheel",
            "args": [
                "self",
                "config_settings"
            ],
            "lineno": 741
        },
        {
            "type": "function",
            "name": "get_requires_for_build_sdist",
            "args": [
                "self",
                "config_settings"
            ],
            "lineno": 747
        },
        {
            "type": "function",
            "name": "get_requires_for_build_editable",
            "args": [
                "self",
                "config_settings"
            ],
            "lineno": 753
        },
        {
            "type": "function",
            "name": "prepare_metadata_for_build_wheel",
            "args": [
                "self",
                "metadata_directory",
                "config_settings",
                "_allow_fallback"
            ],
            "lineno": 759
        },
        {
            "type": "function",
            "name": "prepare_metadata_for_build_editable",
            "args": [
                "self",
                "metadata_directory",
                "config_settings",
                "_allow_fallback"
            ],
            "lineno": 772
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/models.py": [
        {
            "type": "class",
            "name": "KeyBasedCompareMixin",
            "methods": [
                "Method `__init__` (line 13)",
                "Method `__hash__` (line 17)",
                "Method `__lt__` (line 20)",
                "Method `__le__` (line 23)",
                "Method `__gt__` (line 26)",
                "Method `__ge__` (line 29)",
                "Method `__eq__` (line 32)",
                "Method `_compare` (line 35)"
            ],
            "lineno": 8
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "key",
                "defining_class"
            ],
            "lineno": 13
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "__lt__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "__le__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "__gt__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "__ge__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "_compare",
            "args": [
                "self",
                "other",
                "method"
            ],
            "lineno": 35
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/packaging.py": [
        {
            "type": "function",
            "name": "check_requires_python",
            "args": [
                "requires_python",
                "version_info"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "get_requirement",
            "args": [
                "req_string"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "safe_extra",
            "args": [
                "extra"
            ],
            "lineno": 48
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/setuptools_build.py": [
        {
            "type": "function",
            "name": "make_setuptools_shim_args",
            "args": [
                "setup_py_path",
                "global_options",
                "no_user_config",
                "unbuffered_output"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "make_setuptools_bdist_wheel_args",
            "args": [
                "setup_py_path",
                "global_options",
                "build_options",
                "destination_dir"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "make_setuptools_clean_args",
            "args": [
                "setup_py_path",
                "global_options"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "make_setuptools_develop_args",
            "args": [
                "setup_py_path"
            ],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "make_setuptools_egg_info_args",
            "args": [
                "setup_py_path",
                "egg_info_dir",
                "no_user_config"
            ],
            "lineno": 134
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/subprocess.py": [
        {
            "type": "function",
            "name": "make_command",
            "args": [
                "*args"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "format_command_args",
            "args": [
                "args"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "reveal_command_args",
            "args": [
                "args"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "call_subprocess",
            "args": [
                "cmd",
                "show_stdout",
                "cwd",
                "on_returncode",
                "extra_ok_returncodes",
                "extra_environ",
                "unset_environ",
                "spinner",
                "log_failed_cmd",
                "stdout_only"
            ],
            "lineno": 71
        },
        {
            "type": "function",
            "name": "runner_with_spinner_message",
            "args": [
                "message"
            ],
            "lineno": 239
        },
        {
            "type": "function",
            "name": "runner",
            "args": [
                "cmd",
                "cwd",
                "extra_environ"
            ],
            "lineno": 246
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/temp_dir.py": [
        {
            "type": "function",
            "name": "global_tempdir_manager",
            "args": [],
            "lineno": 40
        },
        {
            "type": "class",
            "name": "TempDirectoryTypeRegistry",
            "methods": [
                "Method `__init__` (line 53)",
                "Method `set_delete` (line 56)",
                "Method `get_delete` (line 62)"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "tempdir_registry",
            "args": [],
            "lineno": 73
        },
        {
            "type": "class",
            "name": "_Default",
            "methods": null,
            "lineno": 86
        },
        {
            "type": "class",
            "name": "TempDirectory",
            "methods": [
                "Method `__init__` (line 114)",
                "Method `path` (line 150)",
                "Method `__repr__` (line 154)",
                "Method `__enter__` (line 157)",
                "Method `__exit__` (line 160)",
                "Method `_create` (line 171)",
                "Method `cleanup` (line 181)"
            ],
            "lineno": 93
        },
        {
            "type": "class",
            "name": "AdjacentTempDirectory",
            "methods": [
                "Method `__init__` (line 248)",
                "Method `_generate_names` (line 253)",
                "Method `_create` (line 278)"
            ],
            "lineno": 226
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 53
        },
        {
            "type": "function",
            "name": "set_delete",
            "args": [
                "self",
                "kind",
                "value"
            ],
            "lineno": 56
        },
        {
            "type": "function",
            "name": "get_delete",
            "args": [
                "self",
                "kind"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "path",
                "delete",
                "kind",
                "globally_managed",
                "ignore_cleanup_errors"
            ],
            "lineno": 114
        },
        {
            "type": "function",
            "name": "path",
            "args": [
                "self"
            ],
            "lineno": 150
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 154
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc",
                "value",
                "tb"
            ],
            "lineno": 160
        },
        {
            "type": "function",
            "name": "_create",
            "args": [
                "self",
                "kind"
            ],
            "lineno": 171
        },
        {
            "type": "function",
            "name": "cleanup",
            "args": [
                "self"
            ],
            "lineno": 181
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "original",
                "delete"
            ],
            "lineno": 248
        },
        {
            "type": "function",
            "name": "_generate_names",
            "args": [
                "cls",
                "name"
            ],
            "lineno": 253
        },
        {
            "type": "function",
            "name": "_create",
            "args": [
                "self",
                "kind"
            ],
            "lineno": 278
        },
        {
            "type": "function",
            "name": "onerror",
            "args": [
                "func",
                "path",
                "exc_val"
            ],
            "lineno": 189
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/unpacking.py": [
        {
            "type": "function",
            "name": "current_umask",
            "args": [],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "split_leading_dir",
            "args": [
                "path"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "has_leading_dir",
            "args": [
                "paths"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "is_within_directory",
            "args": [
                "directory",
                "target"
            ],
            "lineno": 77
        },
        {
            "type": "function",
            "name": "set_extracted_file_to_default_mode_plus_executable",
            "args": [
                "path"
            ],
            "lineno": 88
        },
        {
            "type": "function",
            "name": "zip_item_is_executable",
            "args": [
                "info"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "unzip_file",
            "args": [
                "filename",
                "location",
                "flatten"
            ],
            "lineno": 103
        },
        {
            "type": "function",
            "name": "untar_file",
            "args": [
                "filename",
                "location"
            ],
            "lineno": 149
        },
        {
            "type": "function",
            "name": "unpack_file",
            "args": [
                "filename",
                "location",
                "content_type"
            ],
            "lineno": 229
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/urls.py": [
        {
            "type": "function",
            "name": "get_url_scheme",
            "args": [
                "url"
            ],
            "lineno": 10
        },
        {
            "type": "function",
            "name": "path_to_url",
            "args": [
                "path"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "url_to_path",
            "args": [
                "url"
            ],
            "lineno": 26
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/virtualenv.py": [
        {
            "type": "function",
            "name": "_running_under_venv",
            "args": [],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "_running_under_legacy_virtualenv",
            "args": [],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "running_under_virtualenv",
            "args": [],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "_get_pyvenv_cfg_lines",
            "args": [],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "_no_global_under_venv",
            "args": [],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "_no_global_under_legacy_virtualenv",
            "args": [],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "virtualenv_no_global",
            "args": [],
            "lineno": 94
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/wheel.py": [
        {
            "type": "function",
            "name": "parse_wheel",
            "args": [
                "wheel_zip",
                "name"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "wheel_dist_info_dir",
            "args": [
                "source",
                "name"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "read_wheel_metadata_file",
            "args": [
                "source",
                "path"
            ],
            "lineno": 69
        },
        {
            "type": "function",
            "name": "wheel_metadata",
            "args": [
                "source",
                "dist_info_dir"
            ],
            "lineno": 78
        },
        {
            "type": "function",
            "name": "wheel_version",
            "args": [
                "wheel_data"
            ],
            "lineno": 97
        },
        {
            "type": "function",
            "name": "check_compatibility",
            "args": [
                "version",
                "name"
            ],
            "lineno": 113
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/_jaraco_text.py": [
        {
            "type": "function",
            "name": "_nonblank",
            "args": [
                "str"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "yield_lines",
            "args": [
                "iterable"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "_",
            "args": [
                "text"
            ],
            "lineno": 60
        },
        {
            "type": "function",
            "name": "drop_comment",
            "args": [
                "line"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "join_continuation",
            "args": [
                "lines"
            ],
            "lineno": 79
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/_log.py": [
        {
            "type": "class",
            "name": "VerboseLogger",
            "methods": [
                "Method `verbose` (line 22)"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "getLogger",
            "args": [
                "name"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "init_logging",
            "args": [],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "verbose",
            "args": [
                "self",
                "msg",
                "*args",
                "**kwargs"
            ],
            "lineno": 22
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/utils/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/vcs/bazaar.py": [
        {
            "type": "class",
            "name": "Bazaar",
            "methods": [
                "Method `get_base_rev_args` (line 33)",
                "Method `fetch_new` (line 36)",
                "Method `switch` (line 57)",
                "Method `update` (line 60)",
                "Method `get_url_rev_and_auth` (line 74)",
                "Method `get_remote_url` (line 82)",
                "Method `get_revision` (line 97)",
                "Method `is_commit_id_equal` (line 107)"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "get_base_rev_args",
            "args": [
                "rev"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "fetch_new",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options",
                "verbosity"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "switch",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options"
            ],
            "lineno": 60
        },
        {
            "type": "function",
            "name": "get_url_rev_and_auth",
            "args": [
                "cls",
                "url"
            ],
            "lineno": 74
        },
        {
            "type": "function",
            "name": "get_remote_url",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "get_revision",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 97
        },
        {
            "type": "function",
            "name": "is_commit_id_equal",
            "args": [
                "cls",
                "dest",
                "name"
            ],
            "lineno": 107
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/vcs/git.py": [
        {
            "type": "function",
            "name": "looks_like_hash",
            "args": [
                "sha"
            ],
            "lineno": 55
        },
        {
            "type": "class",
            "name": "Git",
            "methods": [
                "Method `get_base_rev_args` (line 76)",
                "Method `is_immutable_rev_checkout` (line 79)",
                "Method `get_git_version` (line 93)",
                "Method `get_current_branch` (line 107)",
                "Method `get_revision_sha` (line 132)",
                "Method `_should_fetch` (line 178)",
                "Method `resolve_revision` (line 201)",
                "Method `is_commit_id_equal` (line 247)",
                "Method `fetch_new` (line 261)",
                "Method `switch` (line 324)",
                "Method `update` (line 334)",
                "Method `get_remote_url` (line 349)",
                "Method `_git_remote_to_pip_url` (line 379)",
                "Method `has_commit` (line 410)",
                "Method `get_revision` (line 426)",
                "Method `get_subdirectory` (line 438)",
                "Method `get_url_rev_and_auth` (line 456)",
                "Method `update_submodules` (line 487)",
                "Method `get_repository_root` (line 496)",
                "Method `should_add_vcs_url_prefix` (line 521)"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "get_base_rev_args",
            "args": [
                "rev"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "is_immutable_rev_checkout",
            "args": [
                "self",
                "url",
                "dest"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "get_git_version",
            "args": [
                "self"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "get_current_branch",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "get_revision_sha",
            "args": [
                "cls",
                "dest",
                "rev"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "_should_fetch",
            "args": [
                "cls",
                "dest",
                "rev"
            ],
            "lineno": 178
        },
        {
            "type": "function",
            "name": "resolve_revision",
            "args": [
                "cls",
                "dest",
                "url",
                "rev_options"
            ],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "is_commit_id_equal",
            "args": [
                "cls",
                "dest",
                "name"
            ],
            "lineno": 247
        },
        {
            "type": "function",
            "name": "fetch_new",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options",
                "verbosity"
            ],
            "lineno": 261
        },
        {
            "type": "function",
            "name": "switch",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options"
            ],
            "lineno": 324
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options"
            ],
            "lineno": 334
        },
        {
            "type": "function",
            "name": "get_remote_url",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 349
        },
        {
            "type": "function",
            "name": "_git_remote_to_pip_url",
            "args": [
                "url"
            ],
            "lineno": 379
        },
        {
            "type": "function",
            "name": "has_commit",
            "args": [
                "cls",
                "location",
                "rev"
            ],
            "lineno": 410
        },
        {
            "type": "function",
            "name": "get_revision",
            "args": [
                "cls",
                "location",
                "rev"
            ],
            "lineno": 426
        },
        {
            "type": "function",
            "name": "get_subdirectory",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 438
        },
        {
            "type": "function",
            "name": "get_url_rev_and_auth",
            "args": [
                "cls",
                "url"
            ],
            "lineno": 456
        },
        {
            "type": "function",
            "name": "update_submodules",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 487
        },
        {
            "type": "function",
            "name": "get_repository_root",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 496
        },
        {
            "type": "function",
            "name": "should_add_vcs_url_prefix",
            "args": [
                "repo_url"
            ],
            "lineno": 521
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/vcs/mercurial.py": [
        {
            "type": "class",
            "name": "Mercurial",
            "methods": [
                "Method `get_base_rev_args` (line 33)",
                "Method `fetch_new` (line 36)",
                "Method `switch` (line 60)",
                "Method `update` (line 74)",
                "Method `get_remote_url` (line 80)",
                "Method `get_revision` (line 92)",
                "Method `get_requirement_revision` (line 105)",
                "Method `is_commit_id_equal` (line 119)",
                "Method `get_subdirectory` (line 124)",
                "Method `get_repository_root` (line 138)"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "get_base_rev_args",
            "args": [
                "rev"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "fetch_new",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options",
                "verbosity"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "switch",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options"
            ],
            "lineno": 60
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options"
            ],
            "lineno": 74
        },
        {
            "type": "function",
            "name": "get_remote_url",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "get_revision",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 92
        },
        {
            "type": "function",
            "name": "get_requirement_revision",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 105
        },
        {
            "type": "function",
            "name": "is_commit_id_equal",
            "args": [
                "cls",
                "dest",
                "name"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "get_subdirectory",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "get_repository_root",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 138
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/vcs/subversion.py": [
        {
            "type": "class",
            "name": "Subversion",
            "methods": [
                "Method `should_add_vcs_url_prefix` (line 37)",
                "Method `get_base_rev_args` (line 41)",
                "Method `get_revision` (line 45)",
                "Method `get_netloc_and_auth` (line 74)",
                "Method `get_url_rev_and_auth` (line 89)",
                "Method `make_rev_args` (line 97)",
                "Method `get_remote_url` (line 109)",
                "Method `_get_svn_url_rev` (line 133)",
                "Method `is_commit_id_equal` (line 183)",
                "Method `__init__` (line 187)",
                "Method `call_vcs_version` (line 201)",
                "Method `get_vcs_version` (line 229)",
                "Method `get_remote_call_options` (line 249)",
                "Method `fetch_new` (line 280)",
                "Method `switch` (line 304)",
                "Method `update` (line 314)"
            ],
            "lineno": 30
        },
        {
            "type": "function",
            "name": "should_add_vcs_url_prefix",
            "args": [
                "cls",
                "remote_url"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "get_base_rev_args",
            "args": [
                "rev"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "get_revision",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "get_netloc_and_auth",
            "args": [
                "cls",
                "netloc",
                "scheme"
            ],
            "lineno": 74
        },
        {
            "type": "function",
            "name": "get_url_rev_and_auth",
            "args": [
                "cls",
                "url"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "make_rev_args",
            "args": [
                "username",
                "password"
            ],
            "lineno": 97
        },
        {
            "type": "function",
            "name": "get_remote_url",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 109
        },
        {
            "type": "function",
            "name": "_get_svn_url_rev",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 133
        },
        {
            "type": "function",
            "name": "is_commit_id_equal",
            "args": [
                "cls",
                "dest",
                "name"
            ],
            "lineno": 183
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "use_interactive"
            ],
            "lineno": 187
        },
        {
            "type": "function",
            "name": "call_vcs_version",
            "args": [
                "self"
            ],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "get_vcs_version",
            "args": [
                "self"
            ],
            "lineno": 229
        },
        {
            "type": "function",
            "name": "get_remote_call_options",
            "args": [
                "self"
            ],
            "lineno": 249
        },
        {
            "type": "function",
            "name": "fetch_new",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options",
                "verbosity"
            ],
            "lineno": 280
        },
        {
            "type": "function",
            "name": "switch",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options"
            ],
            "lineno": 304
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options"
            ],
            "lineno": 314
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/vcs/versioncontrol.py": [
        {
            "type": "function",
            "name": "is_url",
            "args": [
                "name"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "make_vcs_requirement_url",
            "args": [
                "repo_url",
                "rev",
                "project_name",
                "subdir"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "find_path_to_project_root_from_repo_root",
            "args": [
                "location",
                "repo_root"
            ],
            "lineno": 85
        },
        {
            "type": "class",
            "name": "RemoteNotFoundError",
            "methods": null,
            "lineno": 114
        },
        {
            "type": "class",
            "name": "RemoteNotValidError",
            "methods": [
                "Method `__init__` (line 119)"
            ],
            "lineno": 118
        },
        {
            "type": "class",
            "name": "RevOptions",
            "methods": [
                "Method `__init__` (line 133)",
                "Method `__repr__` (line 153)",
                "Method `arg_rev` (line 157)",
                "Method `to_args` (line 163)",
                "Method `to_display` (line 175)",
                "Method `make_new` (line 181)"
            ],
            "lineno": 124
        },
        {
            "type": "class",
            "name": "VcsSupport",
            "methods": [
                "Method `__init__` (line 195)",
                "Method `__iter__` (line 201)",
                "Method `backends` (line 205)",
                "Method `dirnames` (line 209)",
                "Method `all_schemes` (line 213)",
                "Method `register` (line 219)",
                "Method `unregister` (line 227)",
                "Method `get_backend_for_dir` (line 231)",
                "Method `get_backend_for_scheme` (line 254)",
                "Method `get_backend` (line 263)"
            ],
            "lineno": 191
        },
        {
            "type": "class",
            "name": "VersionControl",
            "methods": [
                "Method `should_add_vcs_url_prefix` (line 285)",
                "Method `get_subdirectory` (line 293)",
                "Method `get_requirement_revision` (line 301)",
                "Method `get_src_requirement` (line 308)",
                "Method `get_base_rev_args` (line 332)",
                "Method `is_immutable_rev_checkout` (line 341)",
                "Method `make_rev_options` (line 355)",
                "Method `_is_local_repository` (line 368)",
                "Method `get_netloc_and_auth` (line 377)",
                "Method `get_url_rev_and_auth` (line 398)",
                "Method `make_rev_args` (line 428)",
                "Method `get_url_rev_options` (line 436)",
                "Method `normalize_url` (line 452)",
                "Method `compare_urls` (line 460)",
                "Method `fetch_new` (line 466)",
                "Method `switch` (line 480)",
                "Method `update` (line 489)",
                "Method `is_commit_id_equal` (line 499)",
                "Method `obtain` (line 509)",
                "Method `unpack` (line 598)",
                "Method `get_remote_url` (line 611)",
                "Method `get_revision` (line 621)",
                "Method `run_command` (line 628)",
                "Method `is_repository_directory` (line 684)",
                "Method `get_repository_root` (line 692)"
            ],
            "lineno": 274
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "url"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "vc_class",
                "rev",
                "extra_args"
            ],
            "lineno": 133
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "arg_rev",
            "args": [
                "self"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "to_args",
            "args": [
                "self"
            ],
            "lineno": 163
        },
        {
            "type": "function",
            "name": "to_display",
            "args": [
                "self"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "make_new",
            "args": [
                "self",
                "rev"
            ],
            "lineno": 181
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 195
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "backends",
            "args": [
                "self"
            ],
            "lineno": 205
        },
        {
            "type": "function",
            "name": "dirnames",
            "args": [
                "self"
            ],
            "lineno": 209
        },
        {
            "type": "function",
            "name": "all_schemes",
            "args": [
                "self"
            ],
            "lineno": 213
        },
        {
            "type": "function",
            "name": "register",
            "args": [
                "self",
                "cls"
            ],
            "lineno": 219
        },
        {
            "type": "function",
            "name": "unregister",
            "args": [
                "self",
                "name"
            ],
            "lineno": 227
        },
        {
            "type": "function",
            "name": "get_backend_for_dir",
            "args": [
                "self",
                "location"
            ],
            "lineno": 231
        },
        {
            "type": "function",
            "name": "get_backend_for_scheme",
            "args": [
                "self",
                "scheme"
            ],
            "lineno": 254
        },
        {
            "type": "function",
            "name": "get_backend",
            "args": [
                "self",
                "name"
            ],
            "lineno": 263
        },
        {
            "type": "function",
            "name": "should_add_vcs_url_prefix",
            "args": [
                "cls",
                "remote_url"
            ],
            "lineno": 285
        },
        {
            "type": "function",
            "name": "get_subdirectory",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 293
        },
        {
            "type": "function",
            "name": "get_requirement_revision",
            "args": [
                "cls",
                "repo_dir"
            ],
            "lineno": 301
        },
        {
            "type": "function",
            "name": "get_src_requirement",
            "args": [
                "cls",
                "repo_dir",
                "project_name"
            ],
            "lineno": 308
        },
        {
            "type": "function",
            "name": "get_base_rev_args",
            "args": [
                "rev"
            ],
            "lineno": 332
        },
        {
            "type": "function",
            "name": "is_immutable_rev_checkout",
            "args": [
                "self",
                "url",
                "dest"
            ],
            "lineno": 341
        },
        {
            "type": "function",
            "name": "make_rev_options",
            "args": [
                "cls",
                "rev",
                "extra_args"
            ],
            "lineno": 355
        },
        {
            "type": "function",
            "name": "_is_local_repository",
            "args": [
                "cls",
                "repo"
            ],
            "lineno": 368
        },
        {
            "type": "function",
            "name": "get_netloc_and_auth",
            "args": [
                "cls",
                "netloc",
                "scheme"
            ],
            "lineno": 377
        },
        {
            "type": "function",
            "name": "get_url_rev_and_auth",
            "args": [
                "cls",
                "url"
            ],
            "lineno": 398
        },
        {
            "type": "function",
            "name": "make_rev_args",
            "args": [
                "username",
                "password"
            ],
            "lineno": 428
        },
        {
            "type": "function",
            "name": "get_url_rev_options",
            "args": [
                "self",
                "url"
            ],
            "lineno": 436
        },
        {
            "type": "function",
            "name": "normalize_url",
            "args": [
                "url"
            ],
            "lineno": 452
        },
        {
            "type": "function",
            "name": "compare_urls",
            "args": [
                "cls",
                "url1",
                "url2"
            ],
            "lineno": 460
        },
        {
            "type": "function",
            "name": "fetch_new",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options",
                "verbosity"
            ],
            "lineno": 466
        },
        {
            "type": "function",
            "name": "switch",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options"
            ],
            "lineno": 480
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "dest",
                "url",
                "rev_options"
            ],
            "lineno": 489
        },
        {
            "type": "function",
            "name": "is_commit_id_equal",
            "args": [
                "cls",
                "dest",
                "name"
            ],
            "lineno": 499
        },
        {
            "type": "function",
            "name": "obtain",
            "args": [
                "self",
                "dest",
                "url",
                "verbosity"
            ],
            "lineno": 509
        },
        {
            "type": "function",
            "name": "unpack",
            "args": [
                "self",
                "location",
                "url",
                "verbosity"
            ],
            "lineno": 598
        },
        {
            "type": "function",
            "name": "get_remote_url",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 611
        },
        {
            "type": "function",
            "name": "get_revision",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 621
        },
        {
            "type": "function",
            "name": "run_command",
            "args": [
                "cls",
                "cmd",
                "show_stdout",
                "cwd",
                "on_returncode",
                "extra_ok_returncodes",
                "command_desc",
                "extra_environ",
                "spinner",
                "log_failed_cmd",
                "stdout_only"
            ],
            "lineno": 628
        },
        {
            "type": "function",
            "name": "is_repository_directory",
            "args": [
                "cls",
                "path"
            ],
            "lineno": 684
        },
        {
            "type": "function",
            "name": "get_repository_root",
            "args": [
                "cls",
                "location"
            ],
            "lineno": 692
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/vcs/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/metadata/importlib/_compat.py": [
        {
            "type": "class",
            "name": "BadMetadata",
            "methods": [
                "Method `__init__` (line 6)",
                "Method `__str__` (line 10)"
            ],
            "lineno": 5
        },
        {
            "type": "class",
            "name": "BasePath",
            "methods": [
                "Method `name` (line 26)",
                "Method `parent` (line 30)"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "get_info_location",
            "args": [
                "d"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "get_dist_name",
            "args": [
                "dist"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "dist"
            ],
            "lineno": 6
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 10
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "parent",
            "args": [
                "self"
            ],
            "lineno": 30
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/metadata/importlib/_dists.py": [
        {
            "type": "class",
            "name": "WheelDistribution",
            "methods": [
                "Method `__init__` (line 47)",
                "Method `from_zipfile` (line 56)",
                "Method `iterdir` (line 75)",
                "Method `read_text` (line 81)"
            ],
            "lineno": 36
        },
        {
            "type": "class",
            "name": "Distribution",
            "methods": [
                "Method `__init__` (line 96)",
                "Method `from_directory` (line 107)",
                "Method `from_metadata_file_contents` (line 113)",
                "Method `from_wheel` (line 130)",
                "Method `location` (line 141)",
                "Method `info_location` (line 147)",
                "Method `installed_location` (line 153)",
                "Method `_get_dist_name_from_location` (line 158)",
                "Method `canonical_name` (line 171)",
                "Method `version` (line 176)",
                "Method `is_file` (line 179)",
                "Method `iter_distutils_script_names` (line 182)",
                "Method `read_text` (line 191)",
                "Method `iter_entry_points` (line 197)",
                "Method `_metadata_impl` (line 201)",
                "Method `iter_provided_extras` (line 209)",
                "Method `is_extra_provided` (line 212)",
                "Method `iter_dependencies` (line 218)"
            ],
            "lineno": 95
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "files",
                "info_location"
            ],
            "lineno": 47
        },
        {
            "type": "function",
            "name": "from_zipfile",
            "args": [
                "cls",
                "zf",
                "name",
                "location"
            ],
            "lineno": 56
        },
        {
            "type": "function",
            "name": "iterdir",
            "args": [
                "self",
                "path"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "read_text",
            "args": [
                "self",
                "filename"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "dist",
                "info_location",
                "installed_location"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "from_directory",
            "args": [
                "cls",
                "directory"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "from_metadata_file_contents",
            "args": [
                "cls",
                "metadata_contents",
                "filename",
                "project_name"
            ],
            "lineno": 113
        },
        {
            "type": "function",
            "name": "from_wheel",
            "args": [
                "cls",
                "wheel",
                "name"
            ],
            "lineno": 130
        },
        {
            "type": "function",
            "name": "location",
            "args": [
                "self"
            ],
            "lineno": 141
        },
        {
            "type": "function",
            "name": "info_location",
            "args": [
                "self"
            ],
            "lineno": 147
        },
        {
            "type": "function",
            "name": "installed_location",
            "args": [
                "self"
            ],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "_get_dist_name_from_location",
            "args": [
                "self"
            ],
            "lineno": 158
        },
        {
            "type": "function",
            "name": "canonical_name",
            "args": [
                "self"
            ],
            "lineno": 171
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "self"
            ],
            "lineno": 176
        },
        {
            "type": "function",
            "name": "is_file",
            "args": [
                "self",
                "path"
            ],
            "lineno": 179
        },
        {
            "type": "function",
            "name": "iter_distutils_script_names",
            "args": [
                "self"
            ],
            "lineno": 182
        },
        {
            "type": "function",
            "name": "read_text",
            "args": [
                "self",
                "path"
            ],
            "lineno": 191
        },
        {
            "type": "function",
            "name": "iter_entry_points",
            "args": [
                "self"
            ],
            "lineno": 197
        },
        {
            "type": "function",
            "name": "_metadata_impl",
            "args": [
                "self"
            ],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "iter_provided_extras",
            "args": [
                "self"
            ],
            "lineno": 209
        },
        {
            "type": "function",
            "name": "is_extra_provided",
            "args": [
                "self",
                "extra"
            ],
            "lineno": 212
        },
        {
            "type": "function",
            "name": "iter_dependencies",
            "args": [
                "self",
                "extras"
            ],
            "lineno": 218
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/metadata/importlib/_envs.py": [
        {
            "type": "function",
            "name": "_looks_like_wheel",
            "args": [
                "location"
            ],
            "lineno": 24
        },
        {
            "type": "class",
            "name": "_DistributionFinder",
            "methods": [
                "Method `__init__` (line 49)",
                "Method `_find_impl` (line 52)",
                "Method `find` (line 74)",
                "Method `find_linked` (line 86)",
                "Method `_find_eggs_in_dir` (line 110)",
                "Method `_find_eggs_in_zip` (line 122)",
                "Method `find_eggs` (line 134)"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "_emit_egg_deprecation",
            "args": [
                "location"
            ],
            "lineno": 150
        },
        {
            "type": "class",
            "name": "Environment",
            "methods": [
                "Method `__init__` (line 160)",
                "Method `default` (line 164)",
                "Method `from_paths` (line 168)",
                "Method `_iter_distributions` (line 173)",
                "Method `get_distribution` (line 183)"
            ],
            "lineno": 159
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "_find_impl",
            "args": [
                "self",
                "location"
            ],
            "lineno": 52
        },
        {
            "type": "function",
            "name": "find",
            "args": [
                "self",
                "location"
            ],
            "lineno": 74
        },
        {
            "type": "function",
            "name": "find_linked",
            "args": [
                "self",
                "location"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "_find_eggs_in_dir",
            "args": [
                "self",
                "location"
            ],
            "lineno": 110
        },
        {
            "type": "function",
            "name": "_find_eggs_in_zip",
            "args": [
                "self",
                "location"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "find_eggs",
            "args": [
                "self",
                "location"
            ],
            "lineno": 134
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "paths"
            ],
            "lineno": 160
        },
        {
            "type": "function",
            "name": "default",
            "args": [
                "cls"
            ],
            "lineno": 164
        },
        {
            "type": "function",
            "name": "from_paths",
            "args": [
                "cls",
                "paths"
            ],
            "lineno": 168
        },
        {
            "type": "function",
            "name": "_iter_distributions",
            "args": [
                "self"
            ],
            "lineno": 173
        },
        {
            "type": "function",
            "name": "get_distribution",
            "args": [
                "self",
                "name"
            ],
            "lineno": 183
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/metadata/importlib/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/build/build_tracker.py": [
        {
            "type": "function",
            "name": "update_env_context_manager",
            "args": [
                "**changes"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "get_build_tracker",
            "args": [],
            "lineno": 42
        },
        {
            "type": "class",
            "name": "TrackerId",
            "methods": null,
            "lineno": 54
        },
        {
            "type": "class",
            "name": "BuildTracker",
            "methods": [
                "Method `__init__` (line 67)",
                "Method `__enter__` (line 72)",
                "Method `__exit__` (line 76)",
                "Method `_entry_path` (line 84)",
                "Method `add` (line 88)",
                "Method `remove` (line 115)",
                "Method `cleanup` (line 124)",
                "Method `track` (line 131)"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "root"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "_entry_path",
            "args": [
                "self",
                "key"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "add",
            "args": [
                "self",
                "req",
                "key"
            ],
            "lineno": 88
        },
        {
            "type": "function",
            "name": "remove",
            "args": [
                "self",
                "req",
                "key"
            ],
            "lineno": 115
        },
        {
            "type": "function",
            "name": "cleanup",
            "args": [
                "self"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "track",
            "args": [
                "self",
                "req",
                "key"
            ],
            "lineno": 131
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/build/metadata.py": [
        {
            "type": "function",
            "name": "generate_metadata",
            "args": [
                "build_env",
                "backend",
                "details"
            ],
            "lineno": 17
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/build/metadata_editable.py": [
        {
            "type": "function",
            "name": "generate_editable_metadata",
            "args": [
                "build_env",
                "backend",
                "details"
            ],
            "lineno": 17
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/build/metadata_legacy.py": [
        {
            "type": "function",
            "name": "_find_egg_info",
            "args": [
                "directory"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "generate_metadata",
            "args": [
                "build_env",
                "setup_py_path",
                "source_dir",
                "isolated",
                "details"
            ],
            "lineno": 36
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/build/wheel.py": [
        {
            "type": "function",
            "name": "build_wheel_pep517",
            "args": [
                "name",
                "backend",
                "metadata_directory",
                "tempd"
            ],
            "lineno": 12
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/build/wheel_editable.py": [
        {
            "type": "function",
            "name": "build_wheel_editable",
            "args": [
                "name",
                "backend",
                "metadata_directory",
                "tempd"
            ],
            "lineno": 12
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/build/wheel_legacy.py": [
        {
            "type": "function",
            "name": "format_command_result",
            "args": [
                "command_args",
                "command_output"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "get_legacy_build_wheel_path",
            "args": [
                "names",
                "temp_dir",
                "name",
                "command_args",
                "command_output"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "build_wheel_legacy",
            "args": [
                "name",
                "setup_py_path",
                "source_dir",
                "global_options",
                "build_options",
                "tempd"
            ],
            "lineno": 59
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/build/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/install/editable_legacy.py": [
        {
            "type": "function",
            "name": "install_editable",
            "args": [],
            "lineno": 14
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/install/wheel.py": [
        {
            "type": "function",
            "name": "rehash",
            "args": [
                "path",
                "blocksize"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "csv_io_kwargs",
            "args": [
                "mode"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "fix_script",
            "args": [
                "path"
            ],
            "lineno": 94
        },
        {
            "type": "function",
            "name": "wheel_root_is_purelib",
            "args": [
                "metadata"
            ],
            "lineno": 114
        },
        {
            "type": "function",
            "name": "get_entrypoints",
            "args": [
                "dist"
            ],
            "lineno": 118
        },
        {
            "type": "function",
            "name": "message_about_scripts_not_on_PATH",
            "args": [
                "scripts"
            ],
            "lineno": 129
        },
        {
            "type": "function",
            "name": "_normalized_outrows",
            "args": [
                "outrows"
            ],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "_record_to_fs_path",
            "args": [
                "record_path",
                "lib_dir"
            ],
            "lineno": 227
        },
        {
            "type": "function",
            "name": "_fs_to_record_path",
            "args": [
                "path",
                "lib_dir"
            ],
            "lineno": 231
        },
        {
            "type": "function",
            "name": "get_csv_rows_for_installed",
            "args": [
                "old_csv_rows",
                "installed",
                "changed",
                "generated",
                "lib_dir"
            ],
            "lineno": 241
        },
        {
            "type": "function",
            "name": "get_console_script_specs",
            "args": [
                "console"
            ],
            "lineno": 273
        },
        {
            "type": "class",
            "name": "ZipBackedFile",
            "methods": [
                "Method `__init__` (line 351)",
                "Method `_getinfo` (line 359)",
                "Method `save` (line 362)"
            ],
            "lineno": 350
        },
        {
            "type": "class",
            "name": "ScriptFile",
            "methods": [
                "Method `__init__` (line 391)",
                "Method `save` (line 397)"
            ],
            "lineno": 390
        },
        {
            "type": "class",
            "name": "MissingCallableSuffix",
            "methods": [
                "Method `__init__` (line 403)"
            ],
            "lineno": 402
        },
        {
            "type": "function",
            "name": "_raise_for_invalid_entrypoint",
            "args": [
                "specification"
            ],
            "lineno": 412
        },
        {
            "type": "class",
            "name": "PipScriptMaker",
            "methods": [
                "Method `make` (line 419)"
            ],
            "lineno": 418
        },
        {
            "type": "function",
            "name": "_install_wheel",
            "args": [
                "name",
                "wheel_zip",
                "wheel_path",
                "scheme",
                "pycompile",
                "warn_script_location",
                "direct_url",
                "requested"
            ],
            "lineno": 426
        },
        {
            "type": "function",
            "name": "req_error_context",
            "args": [
                "req_description"
            ],
            "lineno": 705
        },
        {
            "type": "function",
            "name": "install_wheel",
            "args": [
                "name",
                "wheel_path",
                "scheme",
                "req_description",
                "pycompile",
                "warn_script_location",
                "direct_url",
                "requested"
            ],
            "lineno": 713
        },
        {
            "type": "class",
            "name": "File",
            "methods": [
                "Method `save` (line 70)"
            ],
            "lineno": 65
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "src_record_path",
                "dest_path",
                "zip_file"
            ],
            "lineno": 351
        },
        {
            "type": "function",
            "name": "_getinfo",
            "args": [
                "self"
            ],
            "lineno": 359
        },
        {
            "type": "function",
            "name": "save",
            "args": [
                "self"
            ],
            "lineno": 362
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "file"
            ],
            "lineno": 391
        },
        {
            "type": "function",
            "name": "save",
            "args": [
                "self"
            ],
            "lineno": 397
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "entry_point"
            ],
            "lineno": 403
        },
        {
            "type": "function",
            "name": "make",
            "args": [
                "self",
                "specification",
                "options"
            ],
            "lineno": 419
        },
        {
            "type": "function",
            "name": "record_installed",
            "args": [
                "srcfile",
                "destfile",
                "modified"
            ],
            "lineno": 466
        },
        {
            "type": "function",
            "name": "is_dir_path",
            "args": [
                "path"
            ],
            "lineno": 475
        },
        {
            "type": "function",
            "name": "assert_no_path_traversal",
            "args": [
                "dest_dir_path",
                "target_path"
            ],
            "lineno": 478
        },
        {
            "type": "function",
            "name": "root_scheme_file_maker",
            "args": [
                "zip_file",
                "dest"
            ],
            "lineno": 488
        },
        {
            "type": "function",
            "name": "data_scheme_file_maker",
            "args": [
                "zip_file",
                "scheme"
            ],
            "lineno": 499
        },
        {
            "type": "function",
            "name": "is_data_scheme_path",
            "args": [
                "path"
            ],
            "lineno": 532
        },
        {
            "type": "function",
            "name": "is_script_scheme_path",
            "args": [
                "path"
            ],
            "lineno": 542
        },
        {
            "type": "function",
            "name": "is_entrypoint_wrapper",
            "args": [
                "file"
            ],
            "lineno": 561
        },
        {
            "type": "function",
            "name": "pyc_source_file_paths",
            "args": [],
            "lineno": 588
        },
        {
            "type": "function",
            "name": "pyc_output_path",
            "args": [
                "path"
            ],
            "lineno": 601
        },
        {
            "type": "function",
            "name": "_generate_file",
            "args": [
                "path",
                "**kwargs"
            ],
            "lineno": 655
        },
        {
            "type": "function",
            "name": "save",
            "args": [
                "self"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "make_root_scheme_file",
            "args": [
                "record_path"
            ],
            "lineno": 491
        },
        {
            "type": "function",
            "name": "make_data_scheme_file",
            "args": [
                "record_path"
            ],
            "lineno": 504
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/operations/install/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/resolution/legacy/resolver.py": [
        {
            "type": "function",
            "name": "_check_dist_requires_python",
            "args": [
                "dist",
                "version_info",
                "ignore_requires_python"
            ],
            "lineno": 58
        },
        {
            "type": "class",
            "name": "Resolver",
            "methods": [
                "Method `__init__` (line 120)",
                "Method `resolve` (line 158)",
                "Method `_add_requirement_to_set` (line 195)",
                "Method `_is_upgrade_allowed` (line 311)",
                "Method `_set_req_to_reinstall` (line 320)",
                "Method `_check_skip_installed` (line 330)",
                "Method `_find_requirement_link` (line 384)",
                "Method `_populate_link` (line 406)",
                "Method `_get_dist_for` (line 443)",
                "Method `_resolve_one` (line 489)",
                "Method `get_installation_order` (line 571)"
            ],
            "lineno": 113
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "preparer",
                "finder",
                "wheel_cache",
                "make_install_req",
                "use_user_site",
                "ignore_dependencies",
                "ignore_installed",
                "ignore_requires_python",
                "force_reinstall",
                "upgrade_strategy",
                "py_version_info"
            ],
            "lineno": 120
        },
        {
            "type": "function",
            "name": "resolve",
            "args": [
                "self",
                "root_reqs",
                "check_supported_wheels"
            ],
            "lineno": 158
        },
        {
            "type": "function",
            "name": "_add_requirement_to_set",
            "args": [
                "self",
                "requirement_set",
                "install_req",
                "parent_req_name",
                "extras_requested"
            ],
            "lineno": 195
        },
        {
            "type": "function",
            "name": "_is_upgrade_allowed",
            "args": [
                "self",
                "req"
            ],
            "lineno": 311
        },
        {
            "type": "function",
            "name": "_set_req_to_reinstall",
            "args": [
                "self",
                "req"
            ],
            "lineno": 320
        },
        {
            "type": "function",
            "name": "_check_skip_installed",
            "args": [
                "self",
                "req_to_install"
            ],
            "lineno": 330
        },
        {
            "type": "function",
            "name": "_find_requirement_link",
            "args": [
                "self",
                "req"
            ],
            "lineno": 384
        },
        {
            "type": "function",
            "name": "_populate_link",
            "args": [
                "self",
                "req"
            ],
            "lineno": 406
        },
        {
            "type": "function",
            "name": "_get_dist_for",
            "args": [
                "self",
                "req"
            ],
            "lineno": 443
        },
        {
            "type": "function",
            "name": "_resolve_one",
            "args": [
                "self",
                "requirement_set",
                "req_to_install"
            ],
            "lineno": 489
        },
        {
            "type": "function",
            "name": "get_installation_order",
            "args": [
                "self",
                "req_set"
            ],
            "lineno": 571
        },
        {
            "type": "function",
            "name": "add_req",
            "args": [
                "subreq",
                "extras_requested"
            ],
            "lineno": 518
        },
        {
            "type": "function",
            "name": "schedule",
            "args": [
                "req"
            ],
            "lineno": 586
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/resolution/legacy/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/resolution/resolvelib/base.py": [
        {
            "type": "function",
            "name": "format_name",
            "args": [
                "project",
                "extras"
            ],
            "lineno": 15
        },
        {
            "type": "class",
            "name": "Constraint",
            "methods": [
                "Method `__init__` (line 23)",
                "Method `empty` (line 31)",
                "Method `from_ireq` (line 35)",
                "Method `__bool__` (line 39)",
                "Method `__and__` (line 42)",
                "Method `is_satisfied_by` (line 52)"
            ],
            "lineno": 22
        },
        {
            "type": "class",
            "name": "Requirement",
            "methods": [
                "Method `project_name` (line 64)",
                "Method `name` (line 74)",
                "Method `is_satisfied_by` (line 82)",
                "Method `get_candidate_lookup` (line 85)",
                "Method `format_for_error` (line 88)"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "_match_link",
            "args": [
                "link",
                "candidate"
            ],
            "lineno": 92
        },
        {
            "type": "class",
            "name": "Candidate",
            "methods": [
                "Method `project_name` (line 100)",
                "Method `name` (line 110)",
                "Method `version` (line 119)",
                "Method `is_installed` (line 123)",
                "Method `is_editable` (line 127)",
                "Method `source_link` (line 131)",
                "Method `iter_dependencies` (line 134)",
                "Method `get_install_requirement` (line 137)",
                "Method `format_for_error` (line 140)"
            ],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "specifier",
                "hashes",
                "links"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "empty",
            "args": [
                "cls"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "from_ireq",
            "args": [
                "cls",
                "ireq"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "__and__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "is_satisfied_by",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 52
        },
        {
            "type": "function",
            "name": "project_name",
            "args": [
                "self"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 74
        },
        {
            "type": "function",
            "name": "is_satisfied_by",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "get_candidate_lookup",
            "args": [
                "self"
            ],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "format_for_error",
            "args": [
                "self"
            ],
            "lineno": 88
        },
        {
            "type": "function",
            "name": "project_name",
            "args": [
                "self"
            ],
            "lineno": 100
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 110
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "self"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "is_installed",
            "args": [
                "self"
            ],
            "lineno": 123
        },
        {
            "type": "function",
            "name": "is_editable",
            "args": [
                "self"
            ],
            "lineno": 127
        },
        {
            "type": "function",
            "name": "source_link",
            "args": [
                "self"
            ],
            "lineno": 131
        },
        {
            "type": "function",
            "name": "iter_dependencies",
            "args": [
                "self",
                "with_requires"
            ],
            "lineno": 134
        },
        {
            "type": "function",
            "name": "get_install_requirement",
            "args": [
                "self"
            ],
            "lineno": 137
        },
        {
            "type": "function",
            "name": "format_for_error",
            "args": [
                "self"
            ],
            "lineno": 140
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/resolution/resolvelib/candidates.py": [
        {
            "type": "function",
            "name": "as_base_candidate",
            "args": [
                "candidate"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "make_install_req_from_link",
            "args": [
                "link",
                "template"
            ],
            "lineno": 53
        },
        {
            "type": "function",
            "name": "make_install_req_from_editable",
            "args": [
                "link",
                "template"
            ],
            "lineno": 78
        },
        {
            "type": "function",
            "name": "_make_install_req_from_dist",
            "args": [
                "dist",
                "template"
            ],
            "lineno": 98
        },
        {
            "type": "class",
            "name": "_InstallRequirementBackedCandidate",
            "methods": [
                "Method `__init__` (line 141)",
                "Method `__str__` (line 158)",
                "Method `__repr__` (line 161)",
                "Method `__hash__` (line 164)",
                "Method `__eq__` (line 167)",
                "Method `source_link` (line 173)",
                "Method `project_name` (line 177)",
                "Method `name` (line 184)",
                "Method `version` (line 188)",
                "Method `format_for_error` (line 193)",
                "Method `_prepare_distribution` (line 200)",
                "Method `_check_metadata_consistency` (line 203)",
                "Method `_prepare` (line 220)",
                "Method `iter_dependencies` (line 237)",
                "Method `get_install_requirement` (line 243)"
            ],
            "lineno": 122
        },
        {
            "type": "class",
            "name": "LinkCandidate",
            "methods": [
                "Method `__init__` (line 250)",
                "Method `_prepare_distribution` (line 299)"
            ],
            "lineno": 247
        },
        {
            "type": "class",
            "name": "EditableCandidate",
            "methods": [
                "Method `__init__` (line 307)",
                "Method `_prepare_distribution` (line 324)"
            ],
            "lineno": 304
        },
        {
            "type": "class",
            "name": "AlreadyInstalledCandidate",
            "methods": [
                "Method `__init__` (line 332)",
                "Method `__str__` (line 350)",
                "Method `__repr__` (line 353)",
                "Method `__hash__` (line 356)",
                "Method `__eq__` (line 359)",
                "Method `project_name` (line 365)",
                "Method `name` (line 369)",
                "Method `version` (line 373)",
                "Method `is_editable` (line 379)",
                "Method `format_for_error` (line 382)",
                "Method `iter_dependencies` (line 385)",
                "Method `get_install_requirement` (line 391)"
            ],
            "lineno": 328
        },
        {
            "type": "class",
            "name": "ExtrasCandidate",
            "methods": [
                "Method `__init__` (line 420)",
                "Method `__str__` (line 447)",
                "Method `__repr__` (line 451)",
                "Method `__hash__` (line 454)",
                "Method `__eq__` (line 457)",
                "Method `project_name` (line 463)",
                "Method `name` (line 467)",
                "Method `version` (line 472)",
                "Method `format_for_error` (line 475)",
                "Method `is_installed` (line 481)",
                "Method `is_editable` (line 485)",
                "Method `source_link` (line 489)",
                "Method `_warn_invalid_extras` (line 492)",
                "Method `_calculate_valid_requested_extras` (line 520)",
                "Method `iter_dependencies` (line 536)",
                "Method `get_install_requirement` (line 553)"
            ],
            "lineno": 395
        },
        {
            "type": "class",
            "name": "RequiresPythonCandidate",
            "methods": [
                "Method `__init__` (line 564)",
                "Method `__str__` (line 575)",
                "Method `project_name` (line 579)",
                "Method `name` (line 583)",
                "Method `version` (line 587)",
                "Method `format_for_error` (line 590)",
                "Method `iter_dependencies` (line 593)",
                "Method `get_install_requirement` (line 596)"
            ],
            "lineno": 560
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "link",
                "source_link",
                "ireq",
                "factory",
                "name",
                "version"
            ],
            "lineno": 141
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 158
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 161
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 164
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 167
        },
        {
            "type": "function",
            "name": "source_link",
            "args": [
                "self"
            ],
            "lineno": 173
        },
        {
            "type": "function",
            "name": "project_name",
            "args": [
                "self"
            ],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 184
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "self"
            ],
            "lineno": 188
        },
        {
            "type": "function",
            "name": "format_for_error",
            "args": [
                "self"
            ],
            "lineno": 193
        },
        {
            "type": "function",
            "name": "_prepare_distribution",
            "args": [
                "self"
            ],
            "lineno": 200
        },
        {
            "type": "function",
            "name": "_check_metadata_consistency",
            "args": [
                "self",
                "dist"
            ],
            "lineno": 203
        },
        {
            "type": "function",
            "name": "_prepare",
            "args": [
                "self"
            ],
            "lineno": 220
        },
        {
            "type": "function",
            "name": "iter_dependencies",
            "args": [
                "self",
                "with_requires"
            ],
            "lineno": 237
        },
        {
            "type": "function",
            "name": "get_install_requirement",
            "args": [
                "self"
            ],
            "lineno": 243
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "link",
                "template",
                "factory",
                "name",
                "version"
            ],
            "lineno": 250
        },
        {
            "type": "function",
            "name": "_prepare_distribution",
            "args": [
                "self"
            ],
            "lineno": 299
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "link",
                "template",
                "factory",
                "name",
                "version"
            ],
            "lineno": 307
        },
        {
            "type": "function",
            "name": "_prepare_distribution",
            "args": [
                "self"
            ],
            "lineno": 324
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "dist",
                "template",
                "factory"
            ],
            "lineno": 332
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 350
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 353
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 356
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 359
        },
        {
            "type": "function",
            "name": "project_name",
            "args": [
                "self"
            ],
            "lineno": 365
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 369
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "self"
            ],
            "lineno": 373
        },
        {
            "type": "function",
            "name": "is_editable",
            "args": [
                "self"
            ],
            "lineno": 379
        },
        {
            "type": "function",
            "name": "format_for_error",
            "args": [
                "self"
            ],
            "lineno": 382
        },
        {
            "type": "function",
            "name": "iter_dependencies",
            "args": [
                "self",
                "with_requires"
            ],
            "lineno": 385
        },
        {
            "type": "function",
            "name": "get_install_requirement",
            "args": [
                "self"
            ],
            "lineno": 391
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "base",
                "extras"
            ],
            "lineno": 420
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 447
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 451
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 454
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 457
        },
        {
            "type": "function",
            "name": "project_name",
            "args": [
                "self"
            ],
            "lineno": 463
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 467
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "self"
            ],
            "lineno": 472
        },
        {
            "type": "function",
            "name": "format_for_error",
            "args": [
                "self"
            ],
            "lineno": 475
        },
        {
            "type": "function",
            "name": "is_installed",
            "args": [
                "self"
            ],
            "lineno": 481
        },
        {
            "type": "function",
            "name": "is_editable",
            "args": [
                "self"
            ],
            "lineno": 485
        },
        {
            "type": "function",
            "name": "source_link",
            "args": [
                "self"
            ],
            "lineno": 489
        },
        {
            "type": "function",
            "name": "_warn_invalid_extras",
            "args": [
                "self",
                "requested",
                "valid"
            ],
            "lineno": 492
        },
        {
            "type": "function",
            "name": "_calculate_valid_requested_extras",
            "args": [
                "self"
            ],
            "lineno": 520
        },
        {
            "type": "function",
            "name": "iter_dependencies",
            "args": [
                "self",
                "with_requires"
            ],
            "lineno": 536
        },
        {
            "type": "function",
            "name": "get_install_requirement",
            "args": [
                "self"
            ],
            "lineno": 553
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "py_version_info"
            ],
            "lineno": 564
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 575
        },
        {
            "type": "function",
            "name": "project_name",
            "args": [
                "self"
            ],
            "lineno": 579
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 583
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "self"
            ],
            "lineno": 587
        },
        {
            "type": "function",
            "name": "format_for_error",
            "args": [
                "self"
            ],
            "lineno": 590
        },
        {
            "type": "function",
            "name": "iter_dependencies",
            "args": [
                "self",
                "with_requires"
            ],
            "lineno": 593
        },
        {
            "type": "function",
            "name": "get_install_requirement",
            "args": [
                "self"
            ],
            "lineno": 596
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/resolution/resolvelib/factory.py": [
        {
            "type": "class",
            "name": "CollectedRootRequirements",
            "methods": null,
            "lineno": 86
        },
        {
            "type": "class",
            "name": "Factory",
            "methods": [
                "Method `__init__` (line 93)",
                "Method `force_reinstall` (line 132)",
                "Method `_fail_if_link_is_unsupported_wheel` (line 135)",
                "Method `_make_extras_candidate` (line 144)",
                "Method `_make_candidate_from_dist` (line 159)",
                "Method `_make_candidate_from_link` (line 174)",
                "Method `_make_base_candidate_from_link` (line 189)",
                "Method `_iter_found_candidates` (line 246)",
                "Method `_iter_explicit_candidates_from_base` (line 343)",
                "Method `_iter_candidates_from_constraints` (line 365)",
                "Method `find_candidates` (line 387)",
                "Method `_make_requirements_from_install_req` (line 462)",
                "Method `collect_root_requirements` (line 515)",
                "Method `make_requirement_from_candidate` (line 557)",
                "Method `make_requirements_from_spec` (line 562)",
                "Method `make_requires_python_requirement` (line 580)",
                "Method `get_wheel_cache_entry` (line 591)",
                "Method `get_dist_to_uninstall` (line 610)",
                "Method `_report_requires_python_error` (line 638)",
                "Method `_report_single_requirement_conflict` (line 660)",
                "Method `get_installation_error` (line 712)"
            ],
            "lineno": 92
        },
        {
            "type": "class",
            "name": "ConflictCause",
            "methods": null,
            "lineno": 75
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "finder",
                "preparer",
                "make_install_req",
                "wheel_cache",
                "use_user_site",
                "force_reinstall",
                "ignore_installed",
                "ignore_requires_python",
                "py_version_info"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "force_reinstall",
            "args": [
                "self"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "_fail_if_link_is_unsupported_wheel",
            "args": [
                "self",
                "link"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "_make_extras_candidate",
            "args": [
                "self",
                "base",
                "extras"
            ],
            "lineno": 144
        },
        {
            "type": "function",
            "name": "_make_candidate_from_dist",
            "args": [
                "self",
                "dist",
                "extras",
                "template"
            ],
            "lineno": 159
        },
        {
            "type": "function",
            "name": "_make_candidate_from_link",
            "args": [
                "self",
                "link",
                "extras",
                "template",
                "name",
                "version"
            ],
            "lineno": 174
        },
        {
            "type": "function",
            "name": "_make_base_candidate_from_link",
            "args": [
                "self",
                "link",
                "template",
                "name",
                "version"
            ],
            "lineno": 189
        },
        {
            "type": "function",
            "name": "_iter_found_candidates",
            "args": [
                "self",
                "ireqs",
                "specifier",
                "hashes",
                "prefers_installed",
                "incompatible_ids"
            ],
            "lineno": 246
        },
        {
            "type": "function",
            "name": "_iter_explicit_candidates_from_base",
            "args": [
                "self",
                "base_requirements",
                "extras"
            ],
            "lineno": 343
        },
        {
            "type": "function",
            "name": "_iter_candidates_from_constraints",
            "args": [
                "self",
                "identifier",
                "constraint",
                "template"
            ],
            "lineno": 365
        },
        {
            "type": "function",
            "name": "find_candidates",
            "args": [
                "self",
                "identifier",
                "requirements",
                "incompatibilities",
                "constraint",
                "prefers_installed"
            ],
            "lineno": 387
        },
        {
            "type": "function",
            "name": "_make_requirements_from_install_req",
            "args": [
                "self",
                "ireq",
                "requested_extras"
            ],
            "lineno": 462
        },
        {
            "type": "function",
            "name": "collect_root_requirements",
            "args": [
                "self",
                "root_ireqs"
            ],
            "lineno": 515
        },
        {
            "type": "function",
            "name": "make_requirement_from_candidate",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 557
        },
        {
            "type": "function",
            "name": "make_requirements_from_spec",
            "args": [
                "self",
                "specifier",
                "comes_from",
                "requested_extras"
            ],
            "lineno": 562
        },
        {
            "type": "function",
            "name": "make_requires_python_requirement",
            "args": [
                "self",
                "specifier"
            ],
            "lineno": 580
        },
        {
            "type": "function",
            "name": "get_wheel_cache_entry",
            "args": [
                "self",
                "link",
                "name"
            ],
            "lineno": 591
        },
        {
            "type": "function",
            "name": "get_dist_to_uninstall",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 610
        },
        {
            "type": "function",
            "name": "_report_requires_python_error",
            "args": [
                "self",
                "causes"
            ],
            "lineno": 638
        },
        {
            "type": "function",
            "name": "_report_single_requirement_conflict",
            "args": [
                "self",
                "req",
                "parent"
            ],
            "lineno": 660
        },
        {
            "type": "function",
            "name": "get_installation_error",
            "args": [
                "self",
                "e",
                "constraints"
            ],
            "lineno": 712
        },
        {
            "type": "function",
            "name": "_get_installed_candidate",
            "args": [],
            "lineno": 272
        },
        {
            "type": "function",
            "name": "iter_index_candidate_infos",
            "args": [],
            "lineno": 296
        },
        {
            "type": "function",
            "name": "text_join",
            "args": [
                "parts"
            ],
            "lineno": 748
        },
        {
            "type": "function",
            "name": "describe_trigger",
            "args": [
                "parent"
            ],
            "lineno": 754
        },
        {
            "type": "function",
            "name": "is_pinned",
            "args": [
                "specifier"
            ],
            "lineno": 309
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/resolution/resolvelib/found_candidates.py": [
        {
            "type": "function",
            "name": "_iter_built",
            "args": [
                "infos"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "_iter_built_with_prepended",
            "args": [
                "installed",
                "infos"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "_iter_built_with_inserted",
            "args": [
                "installed",
                "infos"
            ],
            "lineno": 76
        },
        {
            "type": "class",
            "name": "FoundCandidates",
            "methods": [
                "Method `__init__` (line 117)",
                "Method `__getitem__` (line 129)",
                "Method `__iter__` (line 135)",
                "Method `__len__` (line 145)",
                "Method `__bool__` (line 152)"
            ],
            "lineno": 108
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "get_infos",
                "installed",
                "prefers_installed",
                "incompatible_ids"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "index"
            ],
            "lineno": 129
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "__len__",
            "args": [
                "self"
            ],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 152
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/resolution/resolvelib/provider.py": [
        {
            "type": "function",
            "name": "_get_with_identifier",
            "args": [
                "mapping",
                "identifier",
                "default"
            ],
            "lineno": 53
        },
        {
            "type": "class",
            "name": "PipProvider",
            "methods": [
                "Method `__init__` (line 89)",
                "Method `identify` (line 104)",
                "Method `get_preference` (line 107)",
                "Method `find_matches` (line 198)",
                "Method `is_satisfied_by` (line 239)",
                "Method `get_dependencies` (line 242)",
                "Method `is_backtrack_cause` (line 247)"
            ],
            "lineno": 78
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "factory",
                "constraints",
                "ignore_dependencies",
                "upgrade_strategy",
                "user_requested"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "identify",
            "args": [
                "self",
                "requirement_or_candidate"
            ],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "get_preference",
            "args": [
                "self",
                "identifier",
                "resolutions",
                "candidates",
                "information",
                "backtrack_causes"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "find_matches",
            "args": [
                "self",
                "identifier",
                "requirements",
                "incompatibilities"
            ],
            "lineno": 198
        },
        {
            "type": "function",
            "name": "is_satisfied_by",
            "args": [
                "self",
                "requirement",
                "candidate"
            ],
            "lineno": 239
        },
        {
            "type": "function",
            "name": "get_dependencies",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 242
        },
        {
            "type": "function",
            "name": "is_backtrack_cause",
            "args": [
                "identifier",
                "backtrack_causes"
            ],
            "lineno": 247
        },
        {
            "type": "function",
            "name": "_eligible_for_upgrade",
            "args": [
                "identifier"
            ],
            "lineno": 204
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/resolution/resolvelib/reporter.py": [
        {
            "type": "class",
            "name": "PipReporter",
            "methods": [
                "Method `__init__` (line 13)",
                "Method `rejecting_candidate` (line 35)"
            ],
            "lineno": 12
        },
        {
            "type": "class",
            "name": "PipDebuggingReporter",
            "methods": [
                "Method `starting` (line 61)",
                "Method `starting_round` (line 64)",
                "Method `ending_round` (line 67)",
                "Method `ending` (line 70)",
                "Method `adding_requirement` (line 73)",
                "Method `rejecting_candidate` (line 76)",
                "Method `pinning` (line 79)"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 13
        },
        {
            "type": "function",
            "name": "rejecting_candidate",
            "args": [
                "self",
                "criterion",
                "candidate"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "starting",
            "args": [
                "self"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "starting_round",
            "args": [
                "self",
                "index"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "ending_round",
            "args": [
                "self",
                "index",
                "state"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "ending",
            "args": [
                "self",
                "state"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "adding_requirement",
            "args": [
                "self",
                "requirement",
                "parent"
            ],
            "lineno": 73
        },
        {
            "type": "function",
            "name": "rejecting_candidate",
            "args": [
                "self",
                "criterion",
                "candidate"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "pinning",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 79
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/resolution/resolvelib/requirements.py": [
        {
            "type": "class",
            "name": "ExplicitRequirement",
            "methods": [
                "Method `__init__` (line 11)",
                "Method `__str__` (line 14)",
                "Method `__repr__` (line 17)",
                "Method `project_name` (line 21)",
                "Method `name` (line 26)",
                "Method `format_for_error` (line 30)",
                "Method `get_candidate_lookup` (line 33)",
                "Method `is_satisfied_by` (line 36)"
            ],
            "lineno": 10
        },
        {
            "type": "class",
            "name": "SpecifierRequirement",
            "methods": [
                "Method `__init__` (line 41)",
                "Method `__str__` (line 46)",
                "Method `__repr__` (line 49)",
                "Method `project_name` (line 53)",
                "Method `name` (line 58)",
                "Method `format_for_error` (line 61)",
                "Method `get_candidate_lookup` (line 74)",
                "Method `is_satisfied_by` (line 77)"
            ],
            "lineno": 40
        },
        {
            "type": "class",
            "name": "SpecifierWithoutExtrasRequirement",
            "methods": [
                "Method `__init__` (line 96)"
            ],
            "lineno": 90
        },
        {
            "type": "class",
            "name": "RequiresPythonRequirement",
            "methods": [
                "Method `__init__` (line 105)",
                "Method `__str__` (line 109)",
                "Method `__repr__` (line 112)",
                "Method `project_name` (line 116)",
                "Method `name` (line 120)",
                "Method `format_for_error` (line 123)",
                "Method `get_candidate_lookup` (line 126)",
                "Method `is_satisfied_by` (line 131)"
            ],
            "lineno": 102
        },
        {
            "type": "class",
            "name": "UnsatisfiableRequirement",
            "methods": [
                "Method `__init__` (line 142)",
                "Method `__str__` (line 145)",
                "Method `__repr__` (line 148)",
                "Method `project_name` (line 152)",
                "Method `name` (line 156)",
                "Method `format_for_error` (line 159)",
                "Method `get_candidate_lookup` (line 162)",
                "Method `is_satisfied_by` (line 165)"
            ],
            "lineno": 139
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "project_name",
            "args": [
                "self"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "format_for_error",
            "args": [
                "self"
            ],
            "lineno": 30
        },
        {
            "type": "function",
            "name": "get_candidate_lookup",
            "args": [
                "self"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "is_satisfied_by",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "ireq"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "project_name",
            "args": [
                "self"
            ],
            "lineno": 53
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "format_for_error",
            "args": [
                "self"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "get_candidate_lookup",
            "args": [
                "self"
            ],
            "lineno": 74
        },
        {
            "type": "function",
            "name": "is_satisfied_by",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 77
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "ireq"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "specifier",
                "match"
            ],
            "lineno": 105
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 109
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 112
        },
        {
            "type": "function",
            "name": "project_name",
            "args": [
                "self"
            ],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 120
        },
        {
            "type": "function",
            "name": "format_for_error",
            "args": [
                "self"
            ],
            "lineno": 123
        },
        {
            "type": "function",
            "name": "get_candidate_lookup",
            "args": [
                "self"
            ],
            "lineno": 126
        },
        {
            "type": "function",
            "name": "is_satisfied_by",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 131
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 142
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 148
        },
        {
            "type": "function",
            "name": "project_name",
            "args": [
                "self"
            ],
            "lineno": 152
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "format_for_error",
            "args": [
                "self"
            ],
            "lineno": 159
        },
        {
            "type": "function",
            "name": "get_candidate_lookup",
            "args": [
                "self"
            ],
            "lineno": 162
        },
        {
            "type": "function",
            "name": "is_satisfied_by",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 165
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/resolution/resolvelib/resolver.py": [
        {
            "type": "class",
            "name": "Resolver",
            "methods": [
                "Method `__init__` (line 41)",
                "Method `resolve` (line 73)",
                "Method `get_installation_order` (line 185)"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "get_topological_weights",
            "args": [
                "graph",
                "requirement_keys"
            ],
            "lineno": 217
        },
        {
            "type": "function",
            "name": "_req_set_item_sorter",
            "args": [
                "item",
                "weights"
            ],
            "lineno": 306
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "preparer",
                "finder",
                "wheel_cache",
                "make_install_req",
                "use_user_site",
                "ignore_dependencies",
                "ignore_installed",
                "ignore_requires_python",
                "force_reinstall",
                "upgrade_strategy",
                "py_version_info"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "resolve",
            "args": [
                "self",
                "root_reqs",
                "check_supported_wheels"
            ],
            "lineno": 73
        },
        {
            "type": "function",
            "name": "get_installation_order",
            "args": [
                "self",
                "req_set"
            ],
            "lineno": 185
        },
        {
            "type": "function",
            "name": "visit",
            "args": [
                "node"
            ],
            "lineno": 248
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_internal/resolution/resolvelib/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/cachecontrol/adapter.py": [
        {
            "type": "class",
            "name": "CacheControlAdapter",
            "methods": [
                "Method `__init__` (line 29)",
                "Method `send` (line 50)",
                "Method `build_response` (line 80)",
                "Method `close` (line 159)"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "cache",
                "cache_etags",
                "controller_class",
                "serializer",
                "heuristic",
                "cacheable_methods",
                "*args",
                "**kw"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "send",
            "args": [
                "self",
                "request",
                "stream",
                "timeout",
                "verify",
                "cert",
                "proxies",
                "cacheable_methods"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "build_response",
            "args": [
                "self",
                "request",
                "response",
                "from_cache",
                "cacheable_methods"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 159
        },
        {
            "type": "function",
            "name": "_update_chunk_length",
            "args": [
                "self"
            ],
            "lineno": 137
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/cachecontrol/cache.py": [
        {
            "type": "class",
            "name": "BaseCache",
            "methods": [
                "Method `get` (line 19)",
                "Method `set` (line 22)",
                "Method `delete` (line 27)",
                "Method `close` (line 30)"
            ],
            "lineno": 18
        },
        {
            "type": "class",
            "name": "DictCache",
            "methods": [
                "Method `__init__` (line 35)",
                "Method `get` (line 39)",
                "Method `set` (line 42)",
                "Method `delete` (line 48)"
            ],
            "lineno": 34
        },
        {
            "type": "class",
            "name": "SeparateBodyBaseCache",
            "methods": [
                "Method `set_body` (line 67)",
                "Method `get_body` (line 70)"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "key"
            ],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "set",
            "args": [
                "self",
                "key",
                "value",
                "expires"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "delete",
            "args": [
                "self",
                "key"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 30
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "init_dict"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "key"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "set",
            "args": [
                "self",
                "key",
                "value",
                "expires"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "delete",
            "args": [
                "self",
                "key"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "set_body",
            "args": [
                "self",
                "key",
                "body"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "get_body",
            "args": [
                "self",
                "key"
            ],
            "lineno": 70
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/cachecontrol/controller.py": [
        {
            "type": "function",
            "name": "parse_uri",
            "args": [
                "uri"
            ],
            "lineno": 37
        },
        {
            "type": "class",
            "name": "CacheController",
            "methods": [
                "Method `__init__` (line 51)",
                "Method `_urlnorm` (line 64)",
                "Method `cache_url` (line 84)",
                "Method `parse_cache_control` (line 87)",
                "Method `_load_from_cache` (line 141)",
                "Method `cached_request` (line 162)",
                "Method `conditional_headers` (line 272)",
                "Method `_cache_set` (line 287)",
                "Method `cache_response` (line 317)",
                "Method `update_cached_response` (line 454)"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "cache",
                "cache_etags",
                "serializer",
                "status_codes"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "_urlnorm",
            "args": [
                "cls",
                "uri"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "cache_url",
            "args": [
                "cls",
                "uri"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "parse_cache_control",
            "args": [
                "self",
                "headers"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "_load_from_cache",
            "args": [
                "self",
                "request"
            ],
            "lineno": 141
        },
        {
            "type": "function",
            "name": "cached_request",
            "args": [
                "self",
                "request"
            ],
            "lineno": 162
        },
        {
            "type": "function",
            "name": "conditional_headers",
            "args": [
                "self",
                "request"
            ],
            "lineno": 272
        },
        {
            "type": "function",
            "name": "_cache_set",
            "args": [
                "self",
                "cache_url",
                "request",
                "response",
                "body",
                "expires_time"
            ],
            "lineno": 287
        },
        {
            "type": "function",
            "name": "cache_response",
            "args": [
                "self",
                "request",
                "response",
                "body",
                "status_codes"
            ],
            "lineno": 317
        },
        {
            "type": "function",
            "name": "update_cached_response",
            "args": [
                "self",
                "request",
                "response"
            ],
            "lineno": 454
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/cachecontrol/filewrapper.py": [
        {
            "type": "class",
            "name": "CallbackFileWrapper",
            "methods": [
                "Method `__init__` (line 33)",
                "Method `__getattr__` (line 40)",
                "Method `__is_fp_closed` (line 52)",
                "Method `_close` (line 70)",
                "Method `read` (line 97)",
                "Method `_safe_read` (line 108)"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "fp",
                "callback"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "__is_fp_closed",
            "args": [
                "self"
            ],
            "lineno": 52
        },
        {
            "type": "function",
            "name": "_close",
            "args": [
                "self"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "read",
            "args": [
                "self",
                "amt"
            ],
            "lineno": 97
        },
        {
            "type": "function",
            "name": "_safe_read",
            "args": [
                "self",
                "amt"
            ],
            "lineno": 108
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/cachecontrol/heuristics.py": [
        {
            "type": "function",
            "name": "expire_after",
            "args": [
                "delta",
                "date"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "datetime_to_header",
            "args": [
                "dt"
            ],
            "lineno": 23
        },
        {
            "type": "class",
            "name": "BaseHeuristic",
            "methods": [
                "Method `warning` (line 28)",
                "Method `update_headers` (line 39)",
                "Method `apply` (line 48)"
            ],
            "lineno": 27
        },
        {
            "type": "class",
            "name": "OneDayCache",
            "methods": [
                "Method `update_headers` (line 66)"
            ],
            "lineno": 60
        },
        {
            "type": "class",
            "name": "ExpiresAfter",
            "methods": [
                "Method `__init__` (line 82)",
                "Method `update_headers` (line 85)",
                "Method `warning` (line 89)"
            ],
            "lineno": 77
        },
        {
            "type": "class",
            "name": "LastModified",
            "methods": [
                "Method `update_headers` (line 121)",
                "Method `warning` (line 153)"
            ],
            "lineno": 94
        },
        {
            "type": "function",
            "name": "warning",
            "args": [
                "self",
                "response"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "update_headers",
            "args": [
                "self",
                "response"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "apply",
            "args": [
                "self",
                "response"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "update_headers",
            "args": [
                "self",
                "response"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**kw"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "update_headers",
            "args": [
                "self",
                "response"
            ],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "warning",
            "args": [
                "self",
                "response"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "update_headers",
            "args": [
                "self",
                "resp"
            ],
            "lineno": 121
        },
        {
            "type": "function",
            "name": "warning",
            "args": [
                "self",
                "resp"
            ],
            "lineno": 153
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/cachecontrol/serialize.py": [
        {
            "type": "class",
            "name": "Serializer",
            "methods": [
                "Method `dumps` (line 20)",
                "Method `serialize` (line 62)",
                "Method `loads` (line 65)",
                "Method `prepare_response` (line 100)",
                "Method `_loads_v0` (line 152)",
                "Method `_loads_v1` (line 163)",
                "Method `_loads_v2` (line 173)",
                "Method `_loads_v3` (line 184)",
                "Method `_loads_v4` (line 195)"
            ],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "dumps",
            "args": [
                "self",
                "request",
                "response",
                "body"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "serialize",
            "args": [
                "self",
                "data"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "loads",
            "args": [
                "self",
                "request",
                "data",
                "body_file"
            ],
            "lineno": 65
        },
        {
            "type": "function",
            "name": "prepare_response",
            "args": [
                "self",
                "request",
                "cached",
                "body_file"
            ],
            "lineno": 100
        },
        {
            "type": "function",
            "name": "_loads_v0",
            "args": [
                "self",
                "request",
                "data",
                "body_file"
            ],
            "lineno": 152
        },
        {
            "type": "function",
            "name": "_loads_v1",
            "args": [
                "self",
                "request",
                "data",
                "body_file"
            ],
            "lineno": 163
        },
        {
            "type": "function",
            "name": "_loads_v2",
            "args": [
                "self",
                "request",
                "data",
                "body_file"
            ],
            "lineno": 173
        },
        {
            "type": "function",
            "name": "_loads_v3",
            "args": [
                "self",
                "request",
                "data",
                "body_file"
            ],
            "lineno": 184
        },
        {
            "type": "function",
            "name": "_loads_v4",
            "args": [
                "self",
                "request",
                "data",
                "body_file"
            ],
            "lineno": 195
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/cachecontrol/wrapper.py": [
        {
            "type": "function",
            "name": "CacheControl",
            "args": [
                "sess",
                "cache",
                "cache_etags",
                "serializer",
                "heuristic",
                "controller_class",
                "adapter_class",
                "cacheable_methods"
            ],
            "lineno": 20
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/cachecontrol/_cmd.py": [
        {
            "type": "function",
            "name": "setup_logging",
            "args": [],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "get_session",
            "args": [],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "get_args",
            "args": [],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "main",
            "args": [],
            "lineno": 46
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/cachecontrol/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/certifi/core.py": [
        {
            "type": "function",
            "name": "where",
            "args": [],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "contents",
            "args": [],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "where",
            "args": [],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "contents",
            "args": [],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "read_text",
            "args": [
                "package",
                "resource",
                "encoding",
                "errors"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "where",
            "args": [],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "contents",
            "args": [],
            "lineno": 107
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/certifi/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/certifi/__main__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/big5freq.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/big5prober.py": [
        {
            "type": "class",
            "name": "Big5Prober",
            "methods": [
                "Method `__init__` (line 35)",
                "Method `charset_name` (line 42)",
                "Method `language` (line 46)"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 46
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/chardistribution.py": [
        {
            "type": "class",
            "name": "CharDistributionAnalysis",
            "methods": [
                "Method `__init__` (line 64)",
                "Method `reset` (line 79)",
                "Method `feed` (line 88)",
                "Method `get_confidence` (line 102)",
                "Method `got_enough_data` (line 119)",
                "Method `get_order` (line 124)"
            ],
            "lineno": 58
        },
        {
            "type": "class",
            "name": "EUCTWDistributionAnalysis",
            "methods": [
                "Method `__init__` (line 133)",
                "Method `get_order` (line 139)"
            ],
            "lineno": 132
        },
        {
            "type": "class",
            "name": "EUCKRDistributionAnalysis",
            "methods": [
                "Method `__init__` (line 151)",
                "Method `get_order` (line 157)"
            ],
            "lineno": 150
        },
        {
            "type": "class",
            "name": "JOHABDistributionAnalysis",
            "methods": [
                "Method `__init__` (line 169)",
                "Method `get_order` (line 175)"
            ],
            "lineno": 168
        },
        {
            "type": "class",
            "name": "GB2312DistributionAnalysis",
            "methods": [
                "Method `__init__` (line 184)",
                "Method `get_order` (line 190)"
            ],
            "lineno": 183
        },
        {
            "type": "class",
            "name": "Big5DistributionAnalysis",
            "methods": [
                "Method `__init__` (line 202)",
                "Method `get_order` (line 208)"
            ],
            "lineno": 201
        },
        {
            "type": "class",
            "name": "SJISDistributionAnalysis",
            "methods": [
                "Method `__init__` (line 222)",
                "Method `get_order` (line 228)"
            ],
            "lineno": 221
        },
        {
            "type": "class",
            "name": "EUCJPDistributionAnalysis",
            "methods": [
                "Method `__init__` (line 247)",
                "Method `get_order` (line 253)"
            ],
            "lineno": 246
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "char",
                "char_len"
            ],
            "lineno": 88
        },
        {
            "type": "function",
            "name": "get_confidence",
            "args": [
                "self"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "got_enough_data",
            "args": [
                "self"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "get_order",
            "args": [
                "self",
                "_"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 133
        },
        {
            "type": "function",
            "name": "get_order",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 139
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 151
        },
        {
            "type": "function",
            "name": "get_order",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 169
        },
        {
            "type": "function",
            "name": "get_order",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 184
        },
        {
            "type": "function",
            "name": "get_order",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 190
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 202
        },
        {
            "type": "function",
            "name": "get_order",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 208
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 222
        },
        {
            "type": "function",
            "name": "get_order",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 228
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 247
        },
        {
            "type": "function",
            "name": "get_order",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 253
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/charsetgroupprober.py": [
        {
            "type": "class",
            "name": "CharSetGroupProber",
            "methods": [
                "Method `__init__` (line 35)",
                "Method `reset` (line 41)",
                "Method `charset_name` (line 51)",
                "Method `language` (line 59)",
                "Method `feed` (line 66)",
                "Method `get_confidence` (line 85)"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "lang_filter"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "get_confidence",
            "args": [
                "self"
            ],
            "lineno": 85
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/charsetprober.py": [
        {
            "type": "class",
            "name": "CharSetProber",
            "methods": [
                "Method `__init__` (line 44)",
                "Method `reset` (line 50)",
                "Method `charset_name` (line 54)",
                "Method `language` (line 58)",
                "Method `feed` (line 61)",
                "Method `state` (line 65)",
                "Method `get_confidence` (line 68)",
                "Method `filter_high_byte_only` (line 72)",
                "Method `filter_international_words` (line 77)",
                "Method `remove_xml_tags` (line 111)"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "lang_filter"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "state",
            "args": [
                "self"
            ],
            "lineno": 65
        },
        {
            "type": "function",
            "name": "get_confidence",
            "args": [
                "self"
            ],
            "lineno": 68
        },
        {
            "type": "function",
            "name": "filter_high_byte_only",
            "args": [
                "buf"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "filter_international_words",
            "args": [
                "buf"
            ],
            "lineno": 77
        },
        {
            "type": "function",
            "name": "remove_xml_tags",
            "args": [
                "buf"
            ],
            "lineno": 111
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/codingstatemachine.py": [
        {
            "type": "class",
            "name": "CodingStateMachine",
            "methods": [
                "Method `__init__` (line 57)",
                "Method `reset` (line 66)",
                "Method `next_state` (line 69)",
                "Method `get_current_charlen` (line 82)",
                "Method `get_coding_state_machine` (line 85)",
                "Method `language` (line 89)"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "sm"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "next_state",
            "args": [
                "self",
                "c"
            ],
            "lineno": 69
        },
        {
            "type": "function",
            "name": "get_current_charlen",
            "args": [
                "self"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "get_coding_state_machine",
            "args": [
                "self"
            ],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 89
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/codingstatemachinedict.py": [
        {
            "type": "class",
            "name": "CodingStateMachineDict",
            "methods": null,
            "lineno": 10
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/cp949prober.py": [
        {
            "type": "class",
            "name": "CP949Prober",
            "methods": [
                "Method `__init__` (line 35)",
                "Method `charset_name` (line 44)",
                "Method `language` (line 48)"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 48
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/enums.py": [
        {
            "type": "class",
            "name": "InputState",
            "methods": null,
            "lineno": 10
        },
        {
            "type": "class",
            "name": "LanguageFilter",
            "methods": null,
            "lineno": 20
        },
        {
            "type": "class",
            "name": "ProbingState",
            "methods": null,
            "lineno": 37
        },
        {
            "type": "class",
            "name": "MachineState",
            "methods": null,
            "lineno": 47
        },
        {
            "type": "class",
            "name": "SequenceLikelihood",
            "methods": [
                "Method `get_num_categories` (line 68)"
            ],
            "lineno": 57
        },
        {
            "type": "class",
            "name": "CharacterCategory",
            "methods": null,
            "lineno": 73
        },
        {
            "type": "function",
            "name": "get_num_categories",
            "args": [
                "cls"
            ],
            "lineno": 68
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/escprober.py": [
        {
            "type": "class",
            "name": "EscCharSetProber",
            "methods": [
                "Method `__init__` (line 48)",
                "Method `reset` (line 64)",
                "Method `charset_name` (line 74)",
                "Method `language` (line 78)",
                "Method `get_confidence` (line 81)",
                "Method `feed` (line 84)"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "lang_filter"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 74
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 78
        },
        {
            "type": "function",
            "name": "get_confidence",
            "args": [
                "self"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 84
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/escsm.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/eucjpprober.py": [
        {
            "type": "class",
            "name": "EUCJPProber",
            "methods": [
                "Method `__init__` (line 39)",
                "Method `reset` (line 46)",
                "Method `charset_name` (line 51)",
                "Method `language` (line 55)",
                "Method `feed` (line 58)",
                "Method `get_confidence` (line 97)"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "get_confidence",
            "args": [
                "self"
            ],
            "lineno": 97
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/euckrfreq.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/euckrprober.py": [
        {
            "type": "class",
            "name": "EUCKRProber",
            "methods": [
                "Method `__init__` (line 35)",
                "Method `charset_name` (line 42)",
                "Method `language` (line 46)"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 46
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/euctwfreq.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/euctwprober.py": [
        {
            "type": "class",
            "name": "EUCTWProber",
            "methods": [
                "Method `__init__` (line 35)",
                "Method `charset_name` (line 42)",
                "Method `language` (line 46)"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 46
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/gb2312freq.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/gb2312prober.py": [
        {
            "type": "class",
            "name": "GB2312Prober",
            "methods": [
                "Method `__init__` (line 35)",
                "Method `charset_name` (line 42)",
                "Method `language` (line 46)"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 46
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/hebrewprober.py": [
        {
            "type": "class",
            "name": "HebrewProber",
            "methods": [
                "Method `__init__` (line 159)",
                "Method `reset` (line 169)",
                "Method `set_model_probers` (line 179)",
                "Method `is_final` (line 187)",
                "Method `is_non_final` (line 196)",
                "Method `feed` (line 209)",
                "Method `charset_name` (line 272)",
                "Method `language` (line 303)",
                "Method `state` (line 307)"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 159
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 169
        },
        {
            "type": "function",
            "name": "set_model_probers",
            "args": [
                "self",
                "logical_prober",
                "visual_prober"
            ],
            "lineno": 179
        },
        {
            "type": "function",
            "name": "is_final",
            "args": [
                "self",
                "c"
            ],
            "lineno": 187
        },
        {
            "type": "function",
            "name": "is_non_final",
            "args": [
                "self",
                "c"
            ],
            "lineno": 196
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 209
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 272
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 303
        },
        {
            "type": "function",
            "name": "state",
            "args": [
                "self"
            ],
            "lineno": 307
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/jisfreq.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/johabfreq.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/johabprober.py": [
        {
            "type": "class",
            "name": "JOHABProber",
            "methods": [
                "Method `__init__` (line 35)",
                "Method `charset_name` (line 42)",
                "Method `language` (line 46)"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 46
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/jpcntx.py": [
        {
            "type": "class",
            "name": "JapaneseContextAnalysis",
            "methods": [
                "Method `__init__` (line 127)",
                "Method `reset` (line 135)",
                "Method `feed` (line 147)",
                "Method `got_enough_data` (line 176)",
                "Method `get_confidence` (line 179)",
                "Method `get_order` (line 185)"
            ],
            "lineno": 120
        },
        {
            "type": "class",
            "name": "SJISContextAnalysis",
            "methods": [
                "Method `__init__` (line 190)",
                "Method `charset_name` (line 195)",
                "Method `get_order` (line 198)"
            ],
            "lineno": 189
        },
        {
            "type": "class",
            "name": "EUCJPContextAnalysis",
            "methods": [
                "Method `get_order` (line 220)"
            ],
            "lineno": 219
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 127
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "byte_str",
                "num_bytes"
            ],
            "lineno": 147
        },
        {
            "type": "function",
            "name": "got_enough_data",
            "args": [
                "self"
            ],
            "lineno": 176
        },
        {
            "type": "function",
            "name": "get_confidence",
            "args": [
                "self"
            ],
            "lineno": 179
        },
        {
            "type": "function",
            "name": "get_order",
            "args": [
                "self",
                "_"
            ],
            "lineno": 185
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 190
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 195
        },
        {
            "type": "function",
            "name": "get_order",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 198
        },
        {
            "type": "function",
            "name": "get_order",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 220
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/langbulgarianmodel.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/langgreekmodel.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/langhebrewmodel.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/langhungarianmodel.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/langrussianmodel.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/langthaimodel.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/langturkishmodel.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/latin1prober.py": [
        {
            "type": "class",
            "name": "Latin1Prober",
            "methods": [
                "Method `__init__` (line 101)",
                "Method `reset` (line 107)",
                "Method `charset_name` (line 113)",
                "Method `language` (line 117)",
                "Method `feed` (line 120)",
                "Method `get_confidence` (line 133)"
            ],
            "lineno": 100
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 113
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 120
        },
        {
            "type": "function",
            "name": "get_confidence",
            "args": [
                "self"
            ],
            "lineno": 133
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/macromanprober.py": [
        {
            "type": "class",
            "name": "MacRomanProber",
            "methods": [
                "Method `__init__` (line 110)",
                "Method `reset` (line 116)",
                "Method `charset_name` (line 128)",
                "Method `language` (line 132)",
                "Method `feed` (line 135)",
                "Method `get_confidence` (line 148)"
            ],
            "lineno": 109
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 110
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "get_confidence",
            "args": [
                "self"
            ],
            "lineno": 148
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/mbcharsetprober.py": [
        {
            "type": "class",
            "name": "MultiByteCharSetProber",
            "methods": [
                "Method `__init__` (line 43)",
                "Method `reset` (line 49)",
                "Method `feed` (line 57)",
                "Method `get_confidence` (line 93)"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "lang_filter"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "get_confidence",
            "args": [
                "self"
            ],
            "lineno": 93
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/mbcsgroupprober.py": [
        {
            "type": "class",
            "name": "MBCSGroupProber",
            "methods": [
                "Method `__init__` (line 44)"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "lang_filter"
            ],
            "lineno": 44
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/mbcssm.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/resultdict.py": [
        {
            "type": "class",
            "name": "ResultDict",
            "methods": null,
            "lineno": 10
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/sbcharsetprober.py": [
        {
            "type": "class",
            "name": "SingleByteCharSetModel",
            "methods": null,
            "lineno": 35
        },
        {
            "type": "class",
            "name": "SingleByteCharSetProber",
            "methods": [
                "Method `__init__` (line 51)",
                "Method `reset` (line 71)",
                "Method `charset_name` (line 83)",
                "Method `language` (line 89)",
                "Method `feed` (line 94)",
                "Method `get_confidence` (line 144)"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "model",
                "is_reversed",
                "name_prober"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 71
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 94
        },
        {
            "type": "function",
            "name": "get_confidence",
            "args": [
                "self"
            ],
            "lineno": 144
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/sbcsgroupprober.py": [
        {
            "type": "class",
            "name": "SBCSGroupProber",
            "methods": [
                "Method `__init__` (line 51)"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 51
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/sjisprober.py": [
        {
            "type": "class",
            "name": "SJISProber",
            "methods": [
                "Method `__init__` (line 39)",
                "Method `reset` (line 46)",
                "Method `charset_name` (line 51)",
                "Method `language` (line 55)",
                "Method `feed` (line 58)",
                "Method `get_confidence` (line 100)"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "get_confidence",
            "args": [
                "self"
            ],
            "lineno": 100
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/universaldetector.py": [
        {
            "type": "class",
            "name": "UniversalDetector",
            "methods": [
                "Method `__init__` (line 100)",
                "Method `input_state` (line 124)",
                "Method `has_win_bytes` (line 128)",
                "Method `charset_probers` (line 132)",
                "Method `reset` (line 135)",
                "Method `feed` (line 154)",
                "Method `close` (line 285)"
            ],
            "lineno": 56
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "lang_filter",
                "should_rename_legacy"
            ],
            "lineno": 100
        },
        {
            "type": "function",
            "name": "input_state",
            "args": [
                "self"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "has_win_bytes",
            "args": [
                "self"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "charset_probers",
            "args": [
                "self"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 154
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 285
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/utf1632prober.py": [
        {
            "type": "class",
            "name": "UTF1632Prober",
            "methods": [
                "Method `__init__` (line 41)",
                "Method `reset` (line 56)",
                "Method `charset_name` (line 71)",
                "Method `language` (line 84)",
                "Method `approx_32bit_chars` (line 87)",
                "Method `approx_16bit_chars` (line 90)",
                "Method `is_likely_utf32be` (line 93)",
                "Method `is_likely_utf32le` (line 103)",
                "Method `is_likely_utf16be` (line 113)",
                "Method `is_likely_utf16le` (line 123)",
                "Method `validate_utf32_characters` (line 133)",
                "Method `validate_utf16_characters` (line 155)",
                "Method `feed` (line 187)",
                "Method `state` (line 203)",
                "Method `get_confidence` (line 215)"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 56
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 71
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "approx_32bit_chars",
            "args": [
                "self"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "approx_16bit_chars",
            "args": [
                "self"
            ],
            "lineno": 90
        },
        {
            "type": "function",
            "name": "is_likely_utf32be",
            "args": [
                "self"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "is_likely_utf32le",
            "args": [
                "self"
            ],
            "lineno": 103
        },
        {
            "type": "function",
            "name": "is_likely_utf16be",
            "args": [
                "self"
            ],
            "lineno": 113
        },
        {
            "type": "function",
            "name": "is_likely_utf16le",
            "args": [
                "self"
            ],
            "lineno": 123
        },
        {
            "type": "function",
            "name": "validate_utf32_characters",
            "args": [
                "self",
                "quad"
            ],
            "lineno": 133
        },
        {
            "type": "function",
            "name": "validate_utf16_characters",
            "args": [
                "self",
                "pair"
            ],
            "lineno": 155
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 187
        },
        {
            "type": "function",
            "name": "state",
            "args": [
                "self"
            ],
            "lineno": 203
        },
        {
            "type": "function",
            "name": "get_confidence",
            "args": [
                "self"
            ],
            "lineno": 215
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/utf8prober.py": [
        {
            "type": "class",
            "name": "UTF8Prober",
            "methods": [
                "Method `__init__` (line 39)",
                "Method `reset` (line 45)",
                "Method `charset_name` (line 51)",
                "Method `language` (line 55)",
                "Method `feed` (line 58)",
                "Method `get_confidence` (line 77)"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "charset_name",
            "args": [
                "self"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "language",
            "args": [
                "self"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "byte_str"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "get_confidence",
            "args": [
                "self"
            ],
            "lineno": 77
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/version.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/__init__.py": [
        {
            "type": "function",
            "name": "detect",
            "args": [
                "byte_str",
                "should_rename_legacy"
            ],
            "lineno": 30
        },
        {
            "type": "function",
            "name": "detect_all",
            "args": [
                "byte_str",
                "ignore_threshold",
                "should_rename_legacy"
            ],
            "lineno": 53
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/colorama/ansi.py": [
        {
            "type": "function",
            "name": "code_to_chars",
            "args": [
                "code"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "set_title",
            "args": [
                "title"
            ],
            "lineno": 15
        },
        {
            "type": "function",
            "name": "clear_screen",
            "args": [
                "mode"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "clear_line",
            "args": [
                "mode"
            ],
            "lineno": 21
        },
        {
            "type": "class",
            "name": "AnsiCodes",
            "methods": [
                "Method `__init__` (line 26)"
            ],
            "lineno": 25
        },
        {
            "type": "class",
            "name": "AnsiCursor",
            "methods": [
                "Method `UP` (line 37)",
                "Method `DOWN` (line 39)",
                "Method `FORWARD` (line 41)",
                "Method `BACK` (line 43)",
                "Method `POS` (line 45)"
            ],
            "lineno": 36
        },
        {
            "type": "class",
            "name": "AnsiFore",
            "methods": null,
            "lineno": 49
        },
        {
            "type": "class",
            "name": "AnsiBack",
            "methods": null,
            "lineno": 71
        },
        {
            "type": "class",
            "name": "AnsiStyle",
            "methods": null,
            "lineno": 93
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "UP",
            "args": [
                "self",
                "n"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "DOWN",
            "args": [
                "self",
                "n"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "FORWARD",
            "args": [
                "self",
                "n"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "BACK",
            "args": [
                "self",
                "n"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "POS",
            "args": [
                "self",
                "x",
                "y"
            ],
            "lineno": 45
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/colorama/ansitowin32.py": [
        {
            "type": "class",
            "name": "StreamWrapper",
            "methods": [
                "Method `__init__` (line 22)",
                "Method `__getattr__` (line 28)",
                "Method `__enter__` (line 31)",
                "Method `__exit__` (line 37)",
                "Method `__setstate__` (line 40)",
                "Method `__getstate__` (line 43)",
                "Method `write` (line 46)",
                "Method `isatty` (line 49)",
                "Method `closed` (line 62)"
            ],
            "lineno": 16
        },
        {
            "type": "class",
            "name": "AnsiToWin32",
            "methods": [
                "Method `__init__` (line 81)",
                "Method `should_wrap` (line 121)",
                "Method `get_win32_calls` (line 131)",
                "Method `write` (line 175)",
                "Method `reset_all` (line 185)",
                "Method `write_and_convert` (line 192)",
                "Method `write_plain_text` (line 208)",
                "Method `convert_ansi` (line 214)",
                "Method `extract_params` (line 220)",
                "Method `call_win32` (line 238)",
                "Method `convert_osc` (line 260)",
                "Method `flush` (line 276)"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "wrapped",
                "converter"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "__setstate__",
            "args": [
                "self",
                "state"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "__getstate__",
            "args": [
                "self"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "write",
            "args": [
                "self",
                "text"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "isatty",
            "args": [
                "self"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "closed",
            "args": [
                "self"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "wrapped",
                "convert",
                "strip",
                "autoreset"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "should_wrap",
            "args": [
                "self"
            ],
            "lineno": 121
        },
        {
            "type": "function",
            "name": "get_win32_calls",
            "args": [
                "self"
            ],
            "lineno": 131
        },
        {
            "type": "function",
            "name": "write",
            "args": [
                "self",
                "text"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "reset_all",
            "args": [
                "self"
            ],
            "lineno": 185
        },
        {
            "type": "function",
            "name": "write_and_convert",
            "args": [
                "self",
                "text"
            ],
            "lineno": 192
        },
        {
            "type": "function",
            "name": "write_plain_text",
            "args": [
                "self",
                "text",
                "start",
                "end"
            ],
            "lineno": 208
        },
        {
            "type": "function",
            "name": "convert_ansi",
            "args": [
                "self",
                "paramstring",
                "command"
            ],
            "lineno": 214
        },
        {
            "type": "function",
            "name": "extract_params",
            "args": [
                "self",
                "command",
                "paramstring"
            ],
            "lineno": 220
        },
        {
            "type": "function",
            "name": "call_win32",
            "args": [
                "self",
                "command",
                "params"
            ],
            "lineno": 238
        },
        {
            "type": "function",
            "name": "convert_osc",
            "args": [
                "self",
                "text"
            ],
            "lineno": 260
        },
        {
            "type": "function",
            "name": "flush",
            "args": [
                "self"
            ],
            "lineno": 276
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/colorama/initialise.py": [
        {
            "type": "function",
            "name": "_wipe_internal_state_for_tests",
            "args": [],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "reset_all",
            "args": [],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "init",
            "args": [
                "autoreset",
                "convert",
                "strip",
                "wrap"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "deinit",
            "args": [],
            "lineno": 65
        },
        {
            "type": "function",
            "name": "just_fix_windows_console",
            "args": [],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "colorama_text",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "reinit",
            "args": [],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "wrap_stream",
            "args": [
                "stream",
                "convert",
                "strip",
                "autoreset",
                "wrap"
            ],
            "lineno": 111
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/colorama/win32.py": [
        {
            "type": "class",
            "name": "CONSOLE_SCREEN_BUFFER_INFO",
            "methods": [
                "Method `__str__` (line 32)"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "_winapi_test",
            "args": [
                "handle"
            ],
            "lineno": 108
        },
        {
            "type": "function",
            "name": "winapi_test",
            "args": [],
            "lineno": 114
        },
        {
            "type": "function",
            "name": "GetConsoleScreenBufferInfo",
            "args": [
                "stream_id"
            ],
            "lineno": 118
        },
        {
            "type": "function",
            "name": "SetConsoleTextAttribute",
            "args": [
                "stream_id",
                "attrs"
            ],
            "lineno": 125
        },
        {
            "type": "function",
            "name": "SetConsoleCursorPosition",
            "args": [
                "stream_id",
                "position",
                "adjust"
            ],
            "lineno": 129
        },
        {
            "type": "function",
            "name": "FillConsoleOutputCharacter",
            "args": [
                "stream_id",
                "char",
                "length",
                "start"
            ],
            "lineno": 147
        },
        {
            "type": "function",
            "name": "FillConsoleOutputAttribute",
            "args": [
                "stream_id",
                "attr",
                "length",
                "start"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "SetConsoleTitle",
            "args": [
                "title"
            ],
            "lineno": 167
        },
        {
            "type": "function",
            "name": "GetConsoleMode",
            "args": [
                "handle"
            ],
            "lineno": 170
        },
        {
            "type": "function",
            "name": "SetConsoleMode",
            "args": [
                "handle",
                "mode"
            ],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 32
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/colorama/winterm.py": [
        {
            "type": "class",
            "name": "WinColor",
            "methods": null,
            "lineno": 12
        },
        {
            "type": "class",
            "name": "WinStyle",
            "methods": null,
            "lineno": 23
        },
        {
            "type": "class",
            "name": "WinTerm",
            "methods": [
                "Method `__init__` (line 30)",
                "Method `get_attrs` (line 42)",
                "Method `set_attrs` (line 45)",
                "Method `reset_all` (line 50)",
                "Method `fore` (line 55)",
                "Method `back` (line 66)",
                "Method `style` (line 77)",
                "Method `set_console` (line 83)",
                "Method `get_position` (line 91)",
                "Method `set_cursor_position` (line 99)",
                "Method `cursor_adjust` (line 109)",
                "Method `erase_screen` (line 117)",
                "Method `erase_line` (line 149)",
                "Method `set_title` (line 174)"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "enable_vt_processing",
            "args": [
                "fd"
            ],
            "lineno": 178
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 30
        },
        {
            "type": "function",
            "name": "get_attrs",
            "args": [
                "self"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "set_attrs",
            "args": [
                "self",
                "value"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "reset_all",
            "args": [
                "self",
                "on_stderr"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "fore",
            "args": [
                "self",
                "fore",
                "light",
                "on_stderr"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "back",
            "args": [
                "self",
                "back",
                "light",
                "on_stderr"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "style",
            "args": [
                "self",
                "style",
                "on_stderr"
            ],
            "lineno": 77
        },
        {
            "type": "function",
            "name": "set_console",
            "args": [
                "self",
                "attrs",
                "on_stderr"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "get_position",
            "args": [
                "self",
                "handle"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "set_cursor_position",
            "args": [
                "self",
                "position",
                "on_stderr"
            ],
            "lineno": 99
        },
        {
            "type": "function",
            "name": "cursor_adjust",
            "args": [
                "self",
                "x",
                "y",
                "on_stderr"
            ],
            "lineno": 109
        },
        {
            "type": "function",
            "name": "erase_screen",
            "args": [
                "self",
                "mode",
                "on_stderr"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "erase_line",
            "args": [
                "self",
                "mode",
                "on_stderr"
            ],
            "lineno": 149
        },
        {
            "type": "function",
            "name": "set_title",
            "args": [
                "self",
                "title"
            ],
            "lineno": 174
        },
        {
            "type": "function",
            "name": "get_osfhandle",
            "args": [
                "_"
            ],
            "lineno": 5
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/colorama/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distlib/compat.py": [
        {
            "type": "function",
            "name": "quote",
            "args": [
                "s"
            ],
            "lineno": 30
        },
        {
            "type": "class",
            "name": "ZipExtFile",
            "methods": [
                "Method `__init__` (line 280)",
                "Method `__enter__` (line 283)",
                "Method `__exit__` (line 286)"
            ],
            "lineno": 278
        },
        {
            "type": "class",
            "name": "ZipFile",
            "methods": [
                "Method `__enter__` (line 292)",
                "Method `__exit__` (line 295)",
                "Method `open` (line 299)"
            ],
            "lineno": 290
        },
        {
            "type": "class",
            "name": "CertificateError",
            "methods": null,
            "lineno": 93
        },
        {
            "type": "function",
            "name": "_dnsname_match",
            "args": [
                "dn",
                "hostname",
                "max_wildcards"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "match_hostname",
            "args": [
                "cert",
                "hostname"
            ],
            "lineno": 145
        },
        {
            "type": "class",
            "name": "Container",
            "methods": [
                "Method `__init__` (line 197)"
            ],
            "lineno": 192
        },
        {
            "type": "function",
            "name": "which",
            "args": [
                "cmd",
                "mode",
                "path"
            ],
            "lineno": 205
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "base"
            ],
            "lineno": 280
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 283
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "*exc_info"
            ],
            "lineno": 286
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 292
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "*exc_info"
            ],
            "lineno": 295
        },
        {
            "type": "function",
            "name": "open",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 299
        },
        {
            "type": "function",
            "name": "python_implementation",
            "args": [],
            "lineno": 308
        },
        {
            "type": "function",
            "name": "callable",
            "args": [
                "obj"
            ],
            "lineno": 326
        },
        {
            "type": "function",
            "name": "fsencode",
            "args": [
                "filename"
            ],
            "lineno": 346
        },
        {
            "type": "function",
            "name": "fsdecode",
            "args": [
                "filename"
            ],
            "lineno": 355
        },
        {
            "type": "function",
            "name": "_get_normal_name",
            "args": [
                "orig_enc"
            ],
            "lineno": 372
        },
        {
            "type": "function",
            "name": "detect_encoding",
            "args": [
                "readline"
            ],
            "lineno": 383
        },
        {
            "type": "class",
            "name": "ChainMap",
            "methods": [
                "Method `__init__` (line 538)",
                "Method `__missing__` (line 545)",
                "Method `__getitem__` (line 548)",
                "Method `get` (line 558)",
                "Method `__len__` (line 561)",
                "Method `__iter__` (line 565)",
                "Method `__contains__` (line 568)",
                "Method `__bool__` (line 571)",
                "Method `__repr__` (line 575)",
                "Method `fromkeys` (line 580)",
                "Method `copy` (line 584)",
                "Method `new_child` (line 590)",
                "Method `parents` (line 595)",
                "Method `__setitem__` (line 599)",
                "Method `__delitem__` (line 602)",
                "Method `popitem` (line 609)",
                "Method `pop` (line 616)",
                "Method `clear` (line 624)"
            ],
            "lineno": 525
        },
        {
            "type": "function",
            "name": "cache_from_source",
            "args": [
                "path",
                "debug_override"
            ],
            "lineno": 633
        },
        {
            "type": "class",
            "name": "OrderedDict",
            "methods": [
                "Method `__init__` (line 673)",
                "Method `__setitem__` (line 690)",
                "Method `__delitem__` (line 700)",
                "Method `__iter__` (line 709)",
                "Method `__reversed__` (line 717)",
                "Method `clear` (line 725)",
                "Method `popitem` (line 737)",
                "Method `keys` (line 762)",
                "Method `values` (line 766)",
                "Method `items` (line 770)",
                "Method `iterkeys` (line 774)",
                "Method `itervalues` (line 778)",
                "Method `iteritems` (line 783)",
                "Method `update` (line 788)",
                "Method `pop` (line 823)",
                "Method `setdefault` (line 836)",
                "Method `__repr__` (line 843)",
                "Method `__reduce__` (line 858)",
                "Method `copy` (line 868)",
                "Method `fromkeys` (line 873)",
                "Method `__eq__` (line 883)",
                "Method `__ne__` (line 893)",
                "Method `viewkeys` (line 898)",
                "Method `viewvalues` (line 902)",
                "Method `viewitems` (line 906)"
            ],
            "lineno": 660
        },
        {
            "type": "function",
            "name": "valid_ident",
            "args": [
                "s"
            ],
            "lineno": 916
        },
        {
            "type": "class",
            "name": "ConvertingDict",
            "methods": [
                "Method `__getitem__` (line 934)",
                "Method `get` (line 946)"
            ],
            "lineno": 931
        },
        {
            "type": "function",
            "name": "pop",
            "args": [
                "self",
                "key",
                "default"
            ],
            "lineno": 958
        },
        {
            "type": "class",
            "name": "ConvertingList",
            "methods": [
                "Method `__getitem__` (line 971)",
                "Method `pop` (line 983)"
            ],
            "lineno": 968
        },
        {
            "type": "class",
            "name": "ConvertingTuple",
            "methods": [
                "Method `__getitem__` (line 995)"
            ],
            "lineno": 992
        },
        {
            "type": "class",
            "name": "BaseConfigurator",
            "methods": [
                "Method `__init__` (line 1025)",
                "Method `resolve` (line 1029)",
                "Method `ext_convert` (line 1052)",
                "Method `cfg_convert` (line 1056)",
                "Method `convert` (line 1091)",
                "Method `configure_custom` (line 1120)",
                "Method `as_tuple` (line 1134)"
            ],
            "lineno": 1005
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**kwargs"
            ],
            "lineno": 197
        },
        {
            "type": "function",
            "name": "_access_check",
            "args": [
                "fn",
                "mode"
            ],
            "lineno": 219
        },
        {
            "type": "function",
            "name": "read_or_stop",
            "args": [],
            "lineno": 408
        },
        {
            "type": "function",
            "name": "find_cookie",
            "args": [
                "line"
            ],
            "lineno": 414
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*maps"
            ],
            "lineno": 538
        },
        {
            "type": "function",
            "name": "__missing__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 545
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 548
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "key",
                "default"
            ],
            "lineno": 558
        },
        {
            "type": "function",
            "name": "__len__",
            "args": [
                "self"
            ],
            "lineno": 561
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 565
        },
        {
            "type": "function",
            "name": "__contains__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 568
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 571
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 575
        },
        {
            "type": "function",
            "name": "fromkeys",
            "args": [
                "cls",
                "iterable",
                "*args"
            ],
            "lineno": 580
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 584
        },
        {
            "type": "function",
            "name": "new_child",
            "args": [
                "self"
            ],
            "lineno": 590
        },
        {
            "type": "function",
            "name": "parents",
            "args": [
                "self"
            ],
            "lineno": 595
        },
        {
            "type": "function",
            "name": "__setitem__",
            "args": [
                "self",
                "key",
                "value"
            ],
            "lineno": 599
        },
        {
            "type": "function",
            "name": "__delitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 602
        },
        {
            "type": "function",
            "name": "popitem",
            "args": [
                "self"
            ],
            "lineno": 609
        },
        {
            "type": "function",
            "name": "pop",
            "args": [
                "self",
                "key",
                "*args"
            ],
            "lineno": 616
        },
        {
            "type": "function",
            "name": "clear",
            "args": [
                "self"
            ],
            "lineno": 624
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*args",
                "**kwds"
            ],
            "lineno": 673
        },
        {
            "type": "function",
            "name": "__setitem__",
            "args": [
                "self",
                "key",
                "value",
                "dict_setitem"
            ],
            "lineno": 690
        },
        {
            "type": "function",
            "name": "__delitem__",
            "args": [
                "self",
                "key",
                "dict_delitem"
            ],
            "lineno": 700
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 709
        },
        {
            "type": "function",
            "name": "__reversed__",
            "args": [
                "self"
            ],
            "lineno": 717
        },
        {
            "type": "function",
            "name": "clear",
            "args": [
                "self"
            ],
            "lineno": 725
        },
        {
            "type": "function",
            "name": "popitem",
            "args": [
                "self",
                "last"
            ],
            "lineno": 737
        },
        {
            "type": "function",
            "name": "keys",
            "args": [
                "self"
            ],
            "lineno": 762
        },
        {
            "type": "function",
            "name": "values",
            "args": [
                "self"
            ],
            "lineno": 766
        },
        {
            "type": "function",
            "name": "items",
            "args": [
                "self"
            ],
            "lineno": 770
        },
        {
            "type": "function",
            "name": "iterkeys",
            "args": [
                "self"
            ],
            "lineno": 774
        },
        {
            "type": "function",
            "name": "itervalues",
            "args": [
                "self"
            ],
            "lineno": 778
        },
        {
            "type": "function",
            "name": "iteritems",
            "args": [
                "self"
            ],
            "lineno": 783
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "*args",
                "**kwds"
            ],
            "lineno": 788
        },
        {
            "type": "function",
            "name": "pop",
            "args": [
                "self",
                "key",
                "default"
            ],
            "lineno": 823
        },
        {
            "type": "function",
            "name": "setdefault",
            "args": [
                "self",
                "key",
                "default"
            ],
            "lineno": 836
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self",
                "_repr_running"
            ],
            "lineno": 843
        },
        {
            "type": "function",
            "name": "__reduce__",
            "args": [
                "self"
            ],
            "lineno": 858
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 868
        },
        {
            "type": "function",
            "name": "fromkeys",
            "args": [
                "cls",
                "iterable",
                "value"
            ],
            "lineno": 873
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 883
        },
        {
            "type": "function",
            "name": "__ne__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 893
        },
        {
            "type": "function",
            "name": "viewkeys",
            "args": [
                "self"
            ],
            "lineno": 898
        },
        {
            "type": "function",
            "name": "viewvalues",
            "args": [
                "self"
            ],
            "lineno": 902
        },
        {
            "type": "function",
            "name": "viewitems",
            "args": [
                "self"
            ],
            "lineno": 906
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 934
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "key",
                "default"
            ],
            "lineno": 946
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 971
        },
        {
            "type": "function",
            "name": "pop",
            "args": [
                "self",
                "idx"
            ],
            "lineno": 983
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 995
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "config"
            ],
            "lineno": 1025
        },
        {
            "type": "function",
            "name": "resolve",
            "args": [
                "self",
                "s"
            ],
            "lineno": 1029
        },
        {
            "type": "function",
            "name": "ext_convert",
            "args": [
                "self",
                "value"
            ],
            "lineno": 1052
        },
        {
            "type": "function",
            "name": "cfg_convert",
            "args": [
                "self",
                "value"
            ],
            "lineno": 1056
        },
        {
            "type": "function",
            "name": "convert",
            "args": [
                "self",
                "value"
            ],
            "lineno": 1091
        },
        {
            "type": "function",
            "name": "configure_custom",
            "args": [
                "self",
                "config"
            ],
            "lineno": 1120
        },
        {
            "type": "function",
            "name": "as_tuple",
            "args": [
                "self",
                "value"
            ],
            "lineno": 1134
        },
        {
            "type": "function",
            "name": "_recursive_repr",
            "args": [
                "fillvalue"
            ],
            "lineno": 495
        },
        {
            "type": "function",
            "name": "decorating_function",
            "args": [
                "user_function"
            ],
            "lineno": 501
        },
        {
            "type": "function",
            "name": "wrapper",
            "args": [
                "self"
            ],
            "lineno": 504
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distlib/database.py": [
        {
            "type": "class",
            "name": "_Cache",
            "methods": [
                "Method `__init__` (line 49)",
                "Method `clear` (line 57)",
                "Method `add` (line 65)"
            ],
            "lineno": 44
        },
        {
            "type": "class",
            "name": "DistributionPath",
            "methods": [
                "Method `__init__` (line 80)",
                "Method `_get_cache_enabled` (line 100)",
                "Method `_set_cache_enabled` (line 103)",
                "Method `clear_cache` (line 108)",
                "Method `_yield_distributions` (line 115)",
                "Method `_generate_cache` (line 169)",
                "Method `distinfo_dirname` (line 189)",
                "Method `get_distributions` (line 210)",
                "Method `get_distribution` (line 232)",
                "Method `provides_distribution` (line 258)",
                "Method `get_file_path` (line 299)",
                "Method `get_exported_entries` (line 308)"
            ],
            "lineno": 75
        },
        {
            "type": "class",
            "name": "Distribution",
            "methods": [
                "Method `__init__` (line 345)",
                "Method `source_url` (line 363)",
                "Method `name_and_version` (line 372)",
                "Method `provides` (line 379)",
                "Method `_get_requirements` (line 390)",
                "Method `run_requires` (line 399)",
                "Method `meta_requires` (line 403)",
                "Method `build_requires` (line 407)",
                "Method `test_requires` (line 411)",
                "Method `dev_requires` (line 415)",
                "Method `matches_requirement` (line 418)",
                "Method `__repr__` (line 451)",
                "Method `__eq__` (line 461)",
                "Method `__hash__` (line 476)"
            ],
            "lineno": 327
        },
        {
            "type": "class",
            "name": "BaseInstalledDistribution",
            "methods": [
                "Method `__init__` (line 491)",
                "Method `get_hash` (line 506)"
            ],
            "lineno": 483
        },
        {
            "type": "class",
            "name": "InstalledDistribution",
            "methods": [
                "Method `__init__` (line 548)",
                "Method `__repr__` (line 582)",
                "Method `__str__` (line 586)",
                "Method `_get_records` (line 589)",
                "Method `exports` (line 613)",
                "Method `read_exports` (line 626)",
                "Method `write_exports` (line 641)",
                "Method `get_resource_path` (line 652)",
                "Method `list_installed_files` (line 672)",
                "Method `write_installed_files` (line 682)",
                "Method `check_installed_files` (line 717)",
                "Method `shared_locations` (line 754)",
                "Method `write_shared_locations` (line 780)",
                "Method `get_distinfo_resource` (line 805)",
                "Method `get_distinfo_file` (line 814)",
                "Method `list_distinfo_files` (line 843)",
                "Method `__eq__` (line 859)"
            ],
            "lineno": 538
        },
        {
            "type": "class",
            "name": "EggInfoDistribution",
            "methods": [
                "Method `__init__` (line 876)",
                "Method `_get_metadata` (line 898)",
                "Method `__repr__` (line 992)",
                "Method `__str__` (line 996)",
                "Method `check_installed_files` (line 999)",
                "Method `list_installed_files` (line 1018)",
                "Method `list_distinfo_files` (line 1056)",
                "Method `__eq__` (line 1085)"
            ],
            "lineno": 867
        },
        {
            "type": "class",
            "name": "DependencyGraph",
            "methods": [
                "Method `__init__` (line 1113)",
                "Method `add_distribution` (line 1118)",
                "Method `add_edge` (line 1128)",
                "Method `add_missing` (line 1143)",
                "Method `_repr_dist` (line 1154)",
                "Method `repr_node` (line 1157)",
                "Method `to_dot` (line 1170)",
                "Method `topological_sort` (line 1202)",
                "Method `__repr__` (line 1233)"
            ],
            "lineno": 1097
        },
        {
            "type": "function",
            "name": "make_graph",
            "args": [
                "dists",
                "scheme"
            ],
            "lineno": 1241
        },
        {
            "type": "function",
            "name": "get_dependent_dists",
            "args": [
                "dists",
                "dist"
            ],
            "lineno": 1295
        },
        {
            "type": "function",
            "name": "get_required_dists",
            "args": [
                "dists",
                "dist"
            ],
            "lineno": 1321
        },
        {
            "type": "function",
            "name": "make_dist",
            "args": [
                "name",
                "version",
                "**kwargs"
            ],
            "lineno": 1350
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "clear",
            "args": [
                "self"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "add",
            "args": [
                "self",
                "dist"
            ],
            "lineno": 65
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "path",
                "include_egg"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "_get_cache_enabled",
            "args": [
                "self"
            ],
            "lineno": 100
        },
        {
            "type": "function",
            "name": "_set_cache_enabled",
            "args": [
                "self",
                "value"
            ],
            "lineno": 103
        },
        {
            "type": "function",
            "name": "clear_cache",
            "args": [
                "self"
            ],
            "lineno": 108
        },
        {
            "type": "function",
            "name": "_yield_distributions",
            "args": [
                "self"
            ],
            "lineno": 115
        },
        {
            "type": "function",
            "name": "_generate_cache",
            "args": [
                "self"
            ],
            "lineno": 169
        },
        {
            "type": "function",
            "name": "distinfo_dirname",
            "args": [
                "cls",
                "name",
                "version"
            ],
            "lineno": 189
        },
        {
            "type": "function",
            "name": "get_distributions",
            "args": [
                "self"
            ],
            "lineno": 210
        },
        {
            "type": "function",
            "name": "get_distribution",
            "args": [
                "self",
                "name"
            ],
            "lineno": 232
        },
        {
            "type": "function",
            "name": "provides_distribution",
            "args": [
                "self",
                "name",
                "version"
            ],
            "lineno": 258
        },
        {
            "type": "function",
            "name": "get_file_path",
            "args": [
                "self",
                "name",
                "relative_path"
            ],
            "lineno": 299
        },
        {
            "type": "function",
            "name": "get_exported_entries",
            "args": [
                "self",
                "category",
                "name"
            ],
            "lineno": 308
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "metadata"
            ],
            "lineno": 345
        },
        {
            "type": "function",
            "name": "source_url",
            "args": [
                "self"
            ],
            "lineno": 363
        },
        {
            "type": "function",
            "name": "name_and_version",
            "args": [
                "self"
            ],
            "lineno": 372
        },
        {
            "type": "function",
            "name": "provides",
            "args": [
                "self"
            ],
            "lineno": 379
        },
        {
            "type": "function",
            "name": "_get_requirements",
            "args": [
                "self",
                "req_attr"
            ],
            "lineno": 390
        },
        {
            "type": "function",
            "name": "run_requires",
            "args": [
                "self"
            ],
            "lineno": 399
        },
        {
            "type": "function",
            "name": "meta_requires",
            "args": [
                "self"
            ],
            "lineno": 403
        },
        {
            "type": "function",
            "name": "build_requires",
            "args": [
                "self"
            ],
            "lineno": 407
        },
        {
            "type": "function",
            "name": "test_requires",
            "args": [
                "self"
            ],
            "lineno": 411
        },
        {
            "type": "function",
            "name": "dev_requires",
            "args": [
                "self"
            ],
            "lineno": 415
        },
        {
            "type": "function",
            "name": "matches_requirement",
            "args": [
                "self",
                "req"
            ],
            "lineno": 418
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 451
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 461
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 476
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "metadata",
                "path",
                "env"
            ],
            "lineno": 491
        },
        {
            "type": "function",
            "name": "get_hash",
            "args": [
                "self",
                "data",
                "hasher"
            ],
            "lineno": 506
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "path",
                "metadata",
                "env"
            ],
            "lineno": 548
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 582
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 586
        },
        {
            "type": "function",
            "name": "_get_records",
            "args": [
                "self"
            ],
            "lineno": 589
        },
        {
            "type": "function",
            "name": "exports",
            "args": [
                "self"
            ],
            "lineno": 613
        },
        {
            "type": "function",
            "name": "read_exports",
            "args": [
                "self"
            ],
            "lineno": 626
        },
        {
            "type": "function",
            "name": "write_exports",
            "args": [
                "self",
                "exports"
            ],
            "lineno": 641
        },
        {
            "type": "function",
            "name": "get_resource_path",
            "args": [
                "self",
                "relative_path"
            ],
            "lineno": 652
        },
        {
            "type": "function",
            "name": "list_installed_files",
            "args": [
                "self"
            ],
            "lineno": 672
        },
        {
            "type": "function",
            "name": "write_installed_files",
            "args": [
                "self",
                "paths",
                "prefix",
                "dry_run"
            ],
            "lineno": 682
        },
        {
            "type": "function",
            "name": "check_installed_files",
            "args": [
                "self"
            ],
            "lineno": 717
        },
        {
            "type": "function",
            "name": "shared_locations",
            "args": [
                "self"
            ],
            "lineno": 754
        },
        {
            "type": "function",
            "name": "write_shared_locations",
            "args": [
                "self",
                "paths",
                "dry_run"
            ],
            "lineno": 780
        },
        {
            "type": "function",
            "name": "get_distinfo_resource",
            "args": [
                "self",
                "path"
            ],
            "lineno": 805
        },
        {
            "type": "function",
            "name": "get_distinfo_file",
            "args": [
                "self",
                "path"
            ],
            "lineno": 814
        },
        {
            "type": "function",
            "name": "list_distinfo_files",
            "args": [
                "self"
            ],
            "lineno": 843
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 859
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "path",
                "env"
            ],
            "lineno": 876
        },
        {
            "type": "function",
            "name": "_get_metadata",
            "args": [
                "self",
                "path"
            ],
            "lineno": 898
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 992
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 996
        },
        {
            "type": "function",
            "name": "check_installed_files",
            "args": [
                "self"
            ],
            "lineno": 999
        },
        {
            "type": "function",
            "name": "list_installed_files",
            "args": [
                "self"
            ],
            "lineno": 1018
        },
        {
            "type": "function",
            "name": "list_distinfo_files",
            "args": [
                "self",
                "absolute"
            ],
            "lineno": 1056
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1085
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 1113
        },
        {
            "type": "function",
            "name": "add_distribution",
            "args": [
                "self",
                "distribution"
            ],
            "lineno": 1118
        },
        {
            "type": "function",
            "name": "add_edge",
            "args": [
                "self",
                "x",
                "y",
                "label"
            ],
            "lineno": 1128
        },
        {
            "type": "function",
            "name": "add_missing",
            "args": [
                "self",
                "distribution",
                "requirement"
            ],
            "lineno": 1143
        },
        {
            "type": "function",
            "name": "_repr_dist",
            "args": [
                "self",
                "dist"
            ],
            "lineno": 1154
        },
        {
            "type": "function",
            "name": "repr_node",
            "args": [
                "self",
                "dist",
                "level"
            ],
            "lineno": 1157
        },
        {
            "type": "function",
            "name": "to_dot",
            "args": [
                "self",
                "f",
                "skip_disconnected"
            ],
            "lineno": 1170
        },
        {
            "type": "function",
            "name": "topological_sort",
            "args": [
                "self"
            ],
            "lineno": 1202
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 1233
        },
        {
            "type": "function",
            "name": "set_name_and_version",
            "args": [
                "s",
                "n",
                "v"
            ],
            "lineno": 878
        },
        {
            "type": "function",
            "name": "parse_requires_data",
            "args": [
                "data"
            ],
            "lineno": 901
        },
        {
            "type": "function",
            "name": "parse_requires_path",
            "args": [
                "req_path"
            ],
            "lineno": 931
        },
        {
            "type": "function",
            "name": "_md5",
            "args": [
                "path"
            ],
            "lineno": 1026
        },
        {
            "type": "function",
            "name": "_size",
            "args": [
                "path"
            ],
            "lineno": 1034
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distlib/index.py": [
        {
            "type": "class",
            "name": "PackageIndex",
            "methods": [
                "Method `__init__` (line 37)",
                "Method `_get_pypirc_command` (line 66)",
                "Method `read_configuration` (line 74)",
                "Method `save_configuration` (line 87)",
                "Method `check_credentials` (line 96)",
                "Method `register` (line 108)",
                "Method `_reader` (line 128)",
                "Method `get_sign_command` (line 146)",
                "Method `run_command` (line 174)",
                "Method `sign_file` (line 209)",
                "Method `upload_file` (line 232)",
                "Method `upload_documentation` (line 289)",
                "Method `get_verify_command` (line 317)",
                "Method `verify_signature` (line 341)",
                "Method `download_file` (line 365)",
                "Method `send_request` (line 442)",
                "Method `encode_request` (line 458)",
                "Method `search` (line 501)"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "url"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "_get_pypirc_command",
            "args": [
                "self"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "read_configuration",
            "args": [
                "self"
            ],
            "lineno": 74
        },
        {
            "type": "function",
            "name": "save_configuration",
            "args": [
                "self"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "check_credentials",
            "args": [
                "self"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "register",
            "args": [
                "self",
                "metadata"
            ],
            "lineno": 108
        },
        {
            "type": "function",
            "name": "_reader",
            "args": [
                "self",
                "name",
                "stream",
                "outbuf"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "get_sign_command",
            "args": [
                "self",
                "filename",
                "signer",
                "sign_password",
                "keystore"
            ],
            "lineno": 146
        },
        {
            "type": "function",
            "name": "run_command",
            "args": [
                "self",
                "cmd",
                "input_data"
            ],
            "lineno": 174
        },
        {
            "type": "function",
            "name": "sign_file",
            "args": [
                "self",
                "filename",
                "signer",
                "sign_password",
                "keystore"
            ],
            "lineno": 209
        },
        {
            "type": "function",
            "name": "upload_file",
            "args": [
                "self",
                "metadata",
                "filename",
                "signer",
                "sign_password",
                "filetype",
                "pyversion",
                "keystore"
            ],
            "lineno": 232
        },
        {
            "type": "function",
            "name": "upload_documentation",
            "args": [
                "self",
                "metadata",
                "doc_dir"
            ],
            "lineno": 289
        },
        {
            "type": "function",
            "name": "get_verify_command",
            "args": [
                "self",
                "signature_filename",
                "data_filename",
                "keystore"
            ],
            "lineno": 317
        },
        {
            "type": "function",
            "name": "verify_signature",
            "args": [
                "self",
                "signature_filename",
                "data_filename",
                "keystore"
            ],
            "lineno": 341
        },
        {
            "type": "function",
            "name": "download_file",
            "args": [
                "self",
                "url",
                "destfile",
                "digest",
                "reporthook"
            ],
            "lineno": 365
        },
        {
            "type": "function",
            "name": "send_request",
            "args": [
                "self",
                "req"
            ],
            "lineno": 442
        },
        {
            "type": "function",
            "name": "encode_request",
            "args": [
                "self",
                "fields",
                "files"
            ],
            "lineno": 458
        },
        {
            "type": "function",
            "name": "search",
            "args": [
                "self",
                "terms",
                "operator"
            ],
            "lineno": 501
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distlib/locators.py": [
        {
            "type": "function",
            "name": "get_all_distribution_names",
            "args": [
                "url"
            ],
            "lineno": 42
        },
        {
            "type": "class",
            "name": "RedirectHandler",
            "methods": [
                "Method `http_error_302` (line 66)"
            ],
            "lineno": 57
        },
        {
            "type": "class",
            "name": "Locator",
            "methods": [
                "Method `__init__` (line 105)",
                "Method `get_errors` (line 124)",
                "Method `clear_errors` (line 138)",
                "Method `clear_cache` (line 145)",
                "Method `_get_scheme` (line 148)",
                "Method `_set_scheme` (line 151)",
                "Method `_get_project` (line 156)",
                "Method `get_distribution_names` (line 168)",
                "Method `get_project` (line 174)",
                "Method `score_url` (line 191)",
                "Method `prefer_url` (line 206)",
                "Method `split_filename` (line 228)",
                "Method `convert_url_to_download_info` (line 234)",
                "Method `_get_digest` (line 307)",
                "Method `_update_version_data` (line 330)",
                "Method `locate` (line 353)"
            ],
            "lineno": 89
        },
        {
            "type": "class",
            "name": "PyPIRPCLocator",
            "methods": [
                "Method `__init__` (line 415)",
                "Method `get_distribution_names` (line 426)",
                "Method `_get_project` (line 432)"
            ],
            "lineno": 410
        },
        {
            "type": "class",
            "name": "PyPIJSONLocator",
            "methods": [
                "Method `__init__` (line 464)",
                "Method `get_distribution_names` (line 468)",
                "Method `_get_project` (line 474)"
            ],
            "lineno": 459
        },
        {
            "type": "class",
            "name": "Page",
            "methods": [
                "Method `__init__` (line 544)",
                "Method `links` (line 558)"
            ],
            "lineno": 528
        },
        {
            "type": "class",
            "name": "SimpleScrapingLocator",
            "methods": [
                "Method `__init__` (line 600)",
                "Method `_prepare_threads` (line 627)",
                "Method `_wait_threads` (line 640)",
                "Method `_get_project` (line 653)",
                "Method `_is_platform_dependent` (line 674)",
                "Method `_process_download` (line 680)",
                "Method `_should_queue` (line 700)",
                "Method `_fetch` (line 729)",
                "Method `get_page` (line 762)",
                "Method `get_distribution_names` (line 823)"
            ],
            "lineno": 586
        },
        {
            "type": "class",
            "name": "DirectoryLocator",
            "methods": [
                "Method `__init__` (line 841)",
                "Method `should_include` (line 858)",
                "Method `_get_project` (line 866)",
                "Method `get_distribution_names` (line 882)"
            ],
            "lineno": 836
        },
        {
            "type": "class",
            "name": "JSONLocator",
            "methods": [
                "Method `get_distribution_names` (line 909)",
                "Method `_get_project` (line 915)"
            ],
            "lineno": 902
        },
        {
            "type": "class",
            "name": "DistPathLocator",
            "methods": [
                "Method `__init__` (line 946)",
                "Method `_get_project` (line 956)"
            ],
            "lineno": 941
        },
        {
            "type": "class",
            "name": "AggregatingLocator",
            "methods": [
                "Method `__init__` (line 973)",
                "Method `clear_cache` (line 989)",
                "Method `_set_scheme` (line 994)",
                "Method `_get_project` (line 1001)",
                "Method `get_distribution_names` (line 1045)"
            ],
            "lineno": 969
        },
        {
            "type": "class",
            "name": "DependencyFinder",
            "methods": [
                "Method `__init__` (line 1074)",
                "Method `add_distribution` (line 1082)",
                "Method `remove_distribution` (line 1097)",
                "Method `get_matcher` (line 1115)",
                "Method `find_providers` (line 1131)",
                "Method `try_to_replace` (line 1155)",
                "Method `find` (line 1195)"
            ],
            "lineno": 1069
        },
        {
            "type": "function",
            "name": "http_error_302",
            "args": [
                "self",
                "req",
                "fp",
                "code",
                "msg",
                "headers"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "scheme"
            ],
            "lineno": 105
        },
        {
            "type": "function",
            "name": "get_errors",
            "args": [
                "self"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "clear_errors",
            "args": [
                "self"
            ],
            "lineno": 138
        },
        {
            "type": "function",
            "name": "clear_cache",
            "args": [
                "self"
            ],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "_get_scheme",
            "args": [
                "self"
            ],
            "lineno": 148
        },
        {
            "type": "function",
            "name": "_set_scheme",
            "args": [
                "self",
                "value"
            ],
            "lineno": 151
        },
        {
            "type": "function",
            "name": "_get_project",
            "args": [
                "self",
                "name"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "get_distribution_names",
            "args": [
                "self"
            ],
            "lineno": 168
        },
        {
            "type": "function",
            "name": "get_project",
            "args": [
                "self",
                "name"
            ],
            "lineno": 174
        },
        {
            "type": "function",
            "name": "score_url",
            "args": [
                "self",
                "url"
            ],
            "lineno": 191
        },
        {
            "type": "function",
            "name": "prefer_url",
            "args": [
                "self",
                "url1",
                "url2"
            ],
            "lineno": 206
        },
        {
            "type": "function",
            "name": "split_filename",
            "args": [
                "self",
                "filename",
                "project_name"
            ],
            "lineno": 228
        },
        {
            "type": "function",
            "name": "convert_url_to_download_info",
            "args": [
                "self",
                "url",
                "project_name"
            ],
            "lineno": 234
        },
        {
            "type": "function",
            "name": "_get_digest",
            "args": [
                "self",
                "info"
            ],
            "lineno": 307
        },
        {
            "type": "function",
            "name": "_update_version_data",
            "args": [
                "self",
                "result",
                "info"
            ],
            "lineno": 330
        },
        {
            "type": "function",
            "name": "locate",
            "args": [
                "self",
                "requirement",
                "prereleases"
            ],
            "lineno": 353
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "url",
                "**kwargs"
            ],
            "lineno": 415
        },
        {
            "type": "function",
            "name": "get_distribution_names",
            "args": [
                "self"
            ],
            "lineno": 426
        },
        {
            "type": "function",
            "name": "_get_project",
            "args": [
                "self",
                "name"
            ],
            "lineno": 432
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "url",
                "**kwargs"
            ],
            "lineno": 464
        },
        {
            "type": "function",
            "name": "get_distribution_names",
            "args": [
                "self"
            ],
            "lineno": 468
        },
        {
            "type": "function",
            "name": "_get_project",
            "args": [
                "self",
                "name"
            ],
            "lineno": 474
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "data",
                "url"
            ],
            "lineno": 544
        },
        {
            "type": "function",
            "name": "links",
            "args": [
                "self"
            ],
            "lineno": 558
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "url",
                "timeout",
                "num_workers",
                "**kwargs"
            ],
            "lineno": 600
        },
        {
            "type": "function",
            "name": "_prepare_threads",
            "args": [
                "self"
            ],
            "lineno": 627
        },
        {
            "type": "function",
            "name": "_wait_threads",
            "args": [
                "self"
            ],
            "lineno": 640
        },
        {
            "type": "function",
            "name": "_get_project",
            "args": [
                "self",
                "name"
            ],
            "lineno": 653
        },
        {
            "type": "function",
            "name": "_is_platform_dependent",
            "args": [
                "self",
                "url"
            ],
            "lineno": 674
        },
        {
            "type": "function",
            "name": "_process_download",
            "args": [
                "self",
                "url"
            ],
            "lineno": 680
        },
        {
            "type": "function",
            "name": "_should_queue",
            "args": [
                "self",
                "link",
                "referrer",
                "rel"
            ],
            "lineno": 700
        },
        {
            "type": "function",
            "name": "_fetch",
            "args": [
                "self"
            ],
            "lineno": 729
        },
        {
            "type": "function",
            "name": "get_page",
            "args": [
                "self",
                "url"
            ],
            "lineno": 762
        },
        {
            "type": "function",
            "name": "get_distribution_names",
            "args": [
                "self"
            ],
            "lineno": 823
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "path",
                "**kwargs"
            ],
            "lineno": 841
        },
        {
            "type": "function",
            "name": "should_include",
            "args": [
                "self",
                "filename",
                "parent"
            ],
            "lineno": 858
        },
        {
            "type": "function",
            "name": "_get_project",
            "args": [
                "self",
                "name"
            ],
            "lineno": 866
        },
        {
            "type": "function",
            "name": "get_distribution_names",
            "args": [
                "self"
            ],
            "lineno": 882
        },
        {
            "type": "function",
            "name": "get_distribution_names",
            "args": [
                "self"
            ],
            "lineno": 909
        },
        {
            "type": "function",
            "name": "_get_project",
            "args": [
                "self",
                "name"
            ],
            "lineno": 915
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "distpath",
                "**kwargs"
            ],
            "lineno": 946
        },
        {
            "type": "function",
            "name": "_get_project",
            "args": [
                "self",
                "name"
            ],
            "lineno": 956
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*locators",
                "**kwargs"
            ],
            "lineno": 973
        },
        {
            "type": "function",
            "name": "clear_cache",
            "args": [
                "self"
            ],
            "lineno": 989
        },
        {
            "type": "function",
            "name": "_set_scheme",
            "args": [
                "self",
                "value"
            ],
            "lineno": 994
        },
        {
            "type": "function",
            "name": "_get_project",
            "args": [
                "self",
                "name"
            ],
            "lineno": 1001
        },
        {
            "type": "function",
            "name": "get_distribution_names",
            "args": [
                "self"
            ],
            "lineno": 1045
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "locator"
            ],
            "lineno": 1074
        },
        {
            "type": "function",
            "name": "add_distribution",
            "args": [
                "self",
                "dist"
            ],
            "lineno": 1082
        },
        {
            "type": "function",
            "name": "remove_distribution",
            "args": [
                "self",
                "dist"
            ],
            "lineno": 1097
        },
        {
            "type": "function",
            "name": "get_matcher",
            "args": [
                "self",
                "reqt"
            ],
            "lineno": 1115
        },
        {
            "type": "function",
            "name": "find_providers",
            "args": [
                "self",
                "reqt"
            ],
            "lineno": 1131
        },
        {
            "type": "function",
            "name": "try_to_replace",
            "args": [
                "self",
                "provider",
                "other",
                "problems"
            ],
            "lineno": 1155
        },
        {
            "type": "function",
            "name": "find",
            "args": [
                "self",
                "requirement",
                "meta_extras",
                "prereleases"
            ],
            "lineno": 1195
        },
        {
            "type": "function",
            "name": "same_project",
            "args": [
                "name1",
                "name2"
            ],
            "lineno": 242
        },
        {
            "type": "function",
            "name": "clean",
            "args": [
                "url"
            ],
            "lineno": 564
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distlib/manifest.py": [
        {
            "type": "class",
            "name": "Manifest",
            "methods": [
                "Method `__init__` (line 44)",
                "Method `findall` (line 59)",
                "Method `add` (line 86)",
                "Method `add_many` (line 96)",
                "Method `sorted` (line 105)",
                "Method `clear` (line 127)",
                "Method `process_directive` (line 132)",
                "Method `_parse_directive` (line 200)",
                "Method `_include_pattern` (line 247)",
                "Method `_exclude_pattern` (line 288)",
                "Method `_translate_pattern` (line 308)",
                "Method `_glob_to_re` (line 363)"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "base"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "findall",
            "args": [
                "self"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "add",
            "args": [
                "self",
                "item"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "add_many",
            "args": [
                "self",
                "items"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "sorted",
            "args": [
                "self",
                "wantdirs"
            ],
            "lineno": 105
        },
        {
            "type": "function",
            "name": "clear",
            "args": [
                "self"
            ],
            "lineno": 127
        },
        {
            "type": "function",
            "name": "process_directive",
            "args": [
                "self",
                "directive"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "_parse_directive",
            "args": [
                "self",
                "directive"
            ],
            "lineno": 200
        },
        {
            "type": "function",
            "name": "_include_pattern",
            "args": [
                "self",
                "pattern",
                "anchor",
                "prefix",
                "is_regex"
            ],
            "lineno": 247
        },
        {
            "type": "function",
            "name": "_exclude_pattern",
            "args": [
                "self",
                "pattern",
                "anchor",
                "prefix",
                "is_regex"
            ],
            "lineno": 288
        },
        {
            "type": "function",
            "name": "_translate_pattern",
            "args": [
                "self",
                "pattern",
                "anchor",
                "prefix",
                "is_regex"
            ],
            "lineno": 308
        },
        {
            "type": "function",
            "name": "_glob_to_re",
            "args": [
                "self",
                "pattern"
            ],
            "lineno": 363
        },
        {
            "type": "function",
            "name": "add_dir",
            "args": [
                "dirs",
                "d"
            ],
            "lineno": 110
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distlib/markers.py": [
        {
            "type": "function",
            "name": "_is_version_marker",
            "args": [
                "s"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "_is_literal",
            "args": [
                "o"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "_get_versions",
            "args": [
                "s"
            ],
            "lineno": 41
        },
        {
            "type": "class",
            "name": "Evaluator",
            "methods": [
                "Method `evaluate` (line 65)"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "default_context",
            "args": [],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "interpret",
            "args": [
                "marker",
                "execution_context"
            ],
            "lineno": 147
        },
        {
            "type": "function",
            "name": "evaluate",
            "args": [
                "self",
                "expr",
                "context"
            ],
            "lineno": 65
        },
        {
            "type": "function",
            "name": "format_full_version",
            "args": [
                "info"
            ],
            "lineno": 106
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distlib/metadata.py": [
        {
            "type": "class",
            "name": "MetadataMissingError",
            "methods": null,
            "lineno": 28
        },
        {
            "type": "class",
            "name": "MetadataConflictError",
            "methods": null,
            "lineno": 32
        },
        {
            "type": "class",
            "name": "MetadataUnrecognizedVersionError",
            "methods": null,
            "lineno": 36
        },
        {
            "type": "class",
            "name": "MetadataInvalidError",
            "methods": null,
            "lineno": 40
        },
        {
            "type": "function",
            "name": "_version2fieldlist",
            "args": [
                "version"
            ],
            "lineno": 118
        },
        {
            "type": "function",
            "name": "_best_version",
            "args": [
                "fields"
            ],
            "lineno": 136
        },
        {
            "type": "function",
            "name": "_get_name_and_version",
            "args": [
                "name",
                "version",
                "for_filename"
            ],
            "lineno": 232
        },
        {
            "type": "class",
            "name": "LegacyMetadata",
            "methods": [
                "Method `__init__` (line 257)",
                "Method `set_metadata_version` (line 273)",
                "Method `_write_field` (line 276)",
                "Method `__getitem__` (line 279)",
                "Method `__setitem__` (line 282)",
                "Method `__delitem__` (line 285)",
                "Method `__contains__` (line 292)",
                "Method `_convert_name` (line 296)",
                "Method `_default_value` (line 302)",
                "Method `_remove_line_prefix` (line 307)",
                "Method `__getattr__` (line 313)",
                "Method `get_fullname` (line 324)",
                "Method `is_field` (line 330)",
                "Method `is_multi_field` (line 335)",
                "Method `read` (line 339)",
                "Method `read_file` (line 347)",
                "Method `write` (line 375)",
                "Method `write_file` (line 383)",
                "Method `update` (line 408)",
                "Method `set` (line 436)",
                "Method `get` (line 480)",
                "Method `check` (line 509)",
                "Method `todict` (line 553)",
                "Method `add_requirements` (line 576)",
                "Method `keys` (line 587)",
                "Method `__iter__` (line 590)",
                "Method `values` (line 594)",
                "Method `items` (line 597)",
                "Method `__repr__` (line 600)"
            ],
            "lineno": 245
        },
        {
            "type": "class",
            "name": "Metadata",
            "methods": [
                "Method `__init__` (line 655)",
                "Method `__getattribute__` (line 723)",
                "Method `_validate_value` (line 766)",
                "Method `__setattr__` (line 776)",
                "Method `name_and_version` (line 816)",
                "Method `provides` (line 820)",
                "Method `provides` (line 831)",
                "Method `get_requirements` (line 837)",
                "Method `dictionary` (line 880)",
                "Method `dependencies` (line 886)",
                "Method `dependencies` (line 893)",
                "Method `_validate_mapping` (line 899)",
                "Method `validate` (line 913)",
                "Method `todict` (line 922)",
                "Method `_from_legacy` (line 929)",
                "Method `_to_legacy` (line 971)",
                "Method `write` (line 1021)",
                "Method `add_requirements` (line 1047)",
                "Method `__repr__` (line 1064)"
            ],
            "lineno": 610
        },
        {
            "type": "function",
            "name": "_has_marker",
            "args": [
                "keys",
                "markers"
            ],
            "lineno": 138
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "path",
                "fileobj",
                "mapping",
                "scheme"
            ],
            "lineno": 257
        },
        {
            "type": "function",
            "name": "set_metadata_version",
            "args": [
                "self"
            ],
            "lineno": 273
        },
        {
            "type": "function",
            "name": "_write_field",
            "args": [
                "self",
                "fileobj",
                "name",
                "value"
            ],
            "lineno": 276
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 279
        },
        {
            "type": "function",
            "name": "__setitem__",
            "args": [
                "self",
                "name",
                "value"
            ],
            "lineno": 282
        },
        {
            "type": "function",
            "name": "__delitem__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 285
        },
        {
            "type": "function",
            "name": "__contains__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 292
        },
        {
            "type": "function",
            "name": "_convert_name",
            "args": [
                "self",
                "name"
            ],
            "lineno": 296
        },
        {
            "type": "function",
            "name": "_default_value",
            "args": [
                "self",
                "name"
            ],
            "lineno": 302
        },
        {
            "type": "function",
            "name": "_remove_line_prefix",
            "args": [
                "self",
                "value"
            ],
            "lineno": 307
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 313
        },
        {
            "type": "function",
            "name": "get_fullname",
            "args": [
                "self",
                "filesafe"
            ],
            "lineno": 324
        },
        {
            "type": "function",
            "name": "is_field",
            "args": [
                "self",
                "name"
            ],
            "lineno": 330
        },
        {
            "type": "function",
            "name": "is_multi_field",
            "args": [
                "self",
                "name"
            ],
            "lineno": 335
        },
        {
            "type": "function",
            "name": "read",
            "args": [
                "self",
                "filepath"
            ],
            "lineno": 339
        },
        {
            "type": "function",
            "name": "read_file",
            "args": [
                "self",
                "fileob"
            ],
            "lineno": 347
        },
        {
            "type": "function",
            "name": "write",
            "args": [
                "self",
                "filepath",
                "skip_unknown"
            ],
            "lineno": 375
        },
        {
            "type": "function",
            "name": "write_file",
            "args": [
                "self",
                "fileobject",
                "skip_unknown"
            ],
            "lineno": 383
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "other",
                "**kwargs"
            ],
            "lineno": 408
        },
        {
            "type": "function",
            "name": "set",
            "args": [
                "self",
                "name",
                "value"
            ],
            "lineno": 436
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "name",
                "default"
            ],
            "lineno": 480
        },
        {
            "type": "function",
            "name": "check",
            "args": [
                "self",
                "strict"
            ],
            "lineno": 509
        },
        {
            "type": "function",
            "name": "todict",
            "args": [
                "self",
                "skip_missing"
            ],
            "lineno": 553
        },
        {
            "type": "function",
            "name": "add_requirements",
            "args": [
                "self",
                "requirements"
            ],
            "lineno": 576
        },
        {
            "type": "function",
            "name": "keys",
            "args": [
                "self"
            ],
            "lineno": 587
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 590
        },
        {
            "type": "function",
            "name": "values",
            "args": [
                "self"
            ],
            "lineno": 594
        },
        {
            "type": "function",
            "name": "items",
            "args": [
                "self"
            ],
            "lineno": 597
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 600
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "path",
                "fileobj",
                "mapping",
                "scheme"
            ],
            "lineno": 655
        },
        {
            "type": "function",
            "name": "__getattribute__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 723
        },
        {
            "type": "function",
            "name": "_validate_value",
            "args": [
                "self",
                "key",
                "value",
                "scheme"
            ],
            "lineno": 766
        },
        {
            "type": "function",
            "name": "__setattr__",
            "args": [
                "self",
                "key",
                "value"
            ],
            "lineno": 776
        },
        {
            "type": "function",
            "name": "name_and_version",
            "args": [
                "self"
            ],
            "lineno": 816
        },
        {
            "type": "function",
            "name": "provides",
            "args": [
                "self"
            ],
            "lineno": 820
        },
        {
            "type": "function",
            "name": "provides",
            "args": [
                "self",
                "value"
            ],
            "lineno": 831
        },
        {
            "type": "function",
            "name": "get_requirements",
            "args": [
                "self",
                "reqts",
                "extras",
                "env"
            ],
            "lineno": 837
        },
        {
            "type": "function",
            "name": "dictionary",
            "args": [
                "self"
            ],
            "lineno": 880
        },
        {
            "type": "function",
            "name": "dependencies",
            "args": [
                "self"
            ],
            "lineno": 886
        },
        {
            "type": "function",
            "name": "dependencies",
            "args": [
                "self",
                "value"
            ],
            "lineno": 893
        },
        {
            "type": "function",
            "name": "_validate_mapping",
            "args": [
                "self",
                "mapping",
                "scheme"
            ],
            "lineno": 899
        },
        {
            "type": "function",
            "name": "validate",
            "args": [
                "self"
            ],
            "lineno": 913
        },
        {
            "type": "function",
            "name": "todict",
            "args": [
                "self"
            ],
            "lineno": 922
        },
        {
            "type": "function",
            "name": "_from_legacy",
            "args": [
                "self"
            ],
            "lineno": 929
        },
        {
            "type": "function",
            "name": "_to_legacy",
            "args": [
                "self"
            ],
            "lineno": 971
        },
        {
            "type": "function",
            "name": "write",
            "args": [
                "self",
                "path",
                "fileobj",
                "legacy",
                "skip_unknown"
            ],
            "lineno": 1021
        },
        {
            "type": "function",
            "name": "add_requirements",
            "args": [
                "self",
                "requirements"
            ],
            "lineno": 1047
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 1064
        },
        {
            "type": "function",
            "name": "_set",
            "args": [
                "key",
                "value"
            ],
            "lineno": 418
        },
        {
            "type": "function",
            "name": "are_valid_constraints",
            "args": [
                "value"
            ],
            "lineno": 535
        },
        {
            "type": "function",
            "name": "process_entries",
            "args": [
                "entries"
            ],
            "lineno": 972
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distlib/resources.py": [
        {
            "type": "class",
            "name": "ResourceCache",
            "methods": [
                "Method `__init__` (line 28)",
                "Method `is_stale` (line 34)",
                "Method `get` (line 45)"
            ],
            "lineno": 27
        },
        {
            "type": "class",
            "name": "ResourceBase",
            "methods": [
                "Method `__init__` (line 72)"
            ],
            "lineno": 71
        },
        {
            "type": "class",
            "name": "Resource",
            "methods": [
                "Method `as_stream` (line 85)",
                "Method `file_path` (line 95)",
                "Method `bytes` (line 102)",
                "Method `size` (line 106)"
            ],
            "lineno": 77
        },
        {
            "type": "class",
            "name": "ResourceContainer",
            "methods": [
                "Method `resources` (line 114)"
            ],
            "lineno": 110
        },
        {
            "type": "class",
            "name": "ResourceFinder",
            "methods": [
                "Method `__init__` (line 128)",
                "Method `_adjust_path` (line 133)",
                "Method `_make_path` (line 136)",
                "Method `_find` (line 148)",
                "Method `get_cache_info` (line 151)",
                "Method `find` (line 154)",
                "Method `get_stream` (line 166)",
                "Method `get_bytes` (line 169)",
                "Method `get_size` (line 173)",
                "Method `get_resources` (line 176)",
                "Method `is_container` (line 182)",
                "Method `iterator` (line 187)"
            ],
            "lineno": 118
        },
        {
            "type": "class",
            "name": "ZipResourceFinder",
            "methods": [
                "Method `__init__` (line 212)",
                "Method `_adjust_path` (line 223)",
                "Method `_find` (line 226)",
                "Method `get_cache_info` (line 244)",
                "Method `get_bytes` (line 249)",
                "Method `get_stream` (line 252)",
                "Method `get_size` (line 255)",
                "Method `get_resources` (line 259)",
                "Method `_is_directory` (line 274)"
            ],
            "lineno": 208
        },
        {
            "type": "function",
            "name": "register_finder",
            "args": [
                "loader",
                "finder_maker"
            ],
            "lineno": 306
        },
        {
            "type": "function",
            "name": "finder",
            "args": [
                "package"
            ],
            "lineno": 313
        },
        {
            "type": "function",
            "name": "finder_for_path",
            "args": [
                "path"
            ],
            "lineno": 341
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "base"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "is_stale",
            "args": [
                "self",
                "resource",
                "path"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "resource"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "finder",
                "name"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "as_stream",
            "args": [
                "self"
            ],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "file_path",
            "args": [
                "self"
            ],
            "lineno": 95
        },
        {
            "type": "function",
            "name": "bytes",
            "args": [
                "self"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "size",
            "args": [
                "self"
            ],
            "lineno": 106
        },
        {
            "type": "function",
            "name": "resources",
            "args": [
                "self"
            ],
            "lineno": 114
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "module"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "_adjust_path",
            "args": [
                "self",
                "path"
            ],
            "lineno": 133
        },
        {
            "type": "function",
            "name": "_make_path",
            "args": [
                "self",
                "resource_name"
            ],
            "lineno": 136
        },
        {
            "type": "function",
            "name": "_find",
            "args": [
                "self",
                "path"
            ],
            "lineno": 148
        },
        {
            "type": "function",
            "name": "get_cache_info",
            "args": [
                "self",
                "resource"
            ],
            "lineno": 151
        },
        {
            "type": "function",
            "name": "find",
            "args": [
                "self",
                "resource_name"
            ],
            "lineno": 154
        },
        {
            "type": "function",
            "name": "get_stream",
            "args": [
                "self",
                "resource"
            ],
            "lineno": 166
        },
        {
            "type": "function",
            "name": "get_bytes",
            "args": [
                "self",
                "resource"
            ],
            "lineno": 169
        },
        {
            "type": "function",
            "name": "get_size",
            "args": [
                "self",
                "resource"
            ],
            "lineno": 173
        },
        {
            "type": "function",
            "name": "get_resources",
            "args": [
                "self",
                "resource"
            ],
            "lineno": 176
        },
        {
            "type": "function",
            "name": "is_container",
            "args": [
                "self",
                "resource"
            ],
            "lineno": 182
        },
        {
            "type": "function",
            "name": "iterator",
            "args": [
                "self",
                "resource_name"
            ],
            "lineno": 187
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "module"
            ],
            "lineno": 212
        },
        {
            "type": "function",
            "name": "_adjust_path",
            "args": [
                "self",
                "path"
            ],
            "lineno": 223
        },
        {
            "type": "function",
            "name": "_find",
            "args": [
                "self",
                "path"
            ],
            "lineno": 226
        },
        {
            "type": "function",
            "name": "get_cache_info",
            "args": [
                "self",
                "resource"
            ],
            "lineno": 244
        },
        {
            "type": "function",
            "name": "get_bytes",
            "args": [
                "self",
                "resource"
            ],
            "lineno": 249
        },
        {
            "type": "function",
            "name": "get_stream",
            "args": [
                "self",
                "resource"
            ],
            "lineno": 252
        },
        {
            "type": "function",
            "name": "get_size",
            "args": [
                "self",
                "resource"
            ],
            "lineno": 255
        },
        {
            "type": "function",
            "name": "get_resources",
            "args": [
                "self",
                "resource"
            ],
            "lineno": 259
        },
        {
            "type": "function",
            "name": "_is_directory",
            "args": [
                "self",
                "path"
            ],
            "lineno": 274
        },
        {
            "type": "function",
            "name": "allowed",
            "args": [
                "f"
            ],
            "lineno": 177
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distlib/scripts.py": [
        {
            "type": "function",
            "name": "enquote_executable",
            "args": [
                "executable"
            ],
            "lineno": 53
        },
        {
            "type": "class",
            "name": "ScriptMaker",
            "methods": [
                "Method `__init__` (line 82)",
                "Method `_get_alternate_executable` (line 103)",
                "Method `_build_shebang` (line 136)",
                "Method `_get_shebang` (line 167)",
                "Method `_get_script_text` (line 239)",
                "Method `get_manifest` (line 247)",
                "Method `_write_script` (line 251)",
                "Method `get_script_filenames` (line 313)",
                "Method `_make_script` (line 325)",
                "Method `_copy_script` (line 341)",
                "Method `dry_run` (line 393)",
                "Method `dry_run` (line 397)",
                "Method `make` (line 424)",
                "Method `make_multiple` (line 443)"
            ],
            "lineno": 73
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "source_dir",
                "target_dir",
                "add_launchers",
                "dry_run",
                "fileop"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "_get_alternate_executable",
            "args": [
                "self",
                "executable",
                "options"
            ],
            "lineno": 103
        },
        {
            "type": "function",
            "name": "_build_shebang",
            "args": [
                "self",
                "executable",
                "post_interp"
            ],
            "lineno": 136
        },
        {
            "type": "function",
            "name": "_get_shebang",
            "args": [
                "self",
                "encoding",
                "post_interp",
                "options"
            ],
            "lineno": 167
        },
        {
            "type": "function",
            "name": "_get_script_text",
            "args": [
                "self",
                "entry"
            ],
            "lineno": 239
        },
        {
            "type": "function",
            "name": "get_manifest",
            "args": [
                "self",
                "exename"
            ],
            "lineno": 247
        },
        {
            "type": "function",
            "name": "_write_script",
            "args": [
                "self",
                "names",
                "shebang",
                "script_bytes",
                "filenames",
                "ext"
            ],
            "lineno": 251
        },
        {
            "type": "function",
            "name": "get_script_filenames",
            "args": [
                "self",
                "name"
            ],
            "lineno": 313
        },
        {
            "type": "function",
            "name": "_make_script",
            "args": [
                "self",
                "entry",
                "filenames",
                "options"
            ],
            "lineno": 325
        },
        {
            "type": "function",
            "name": "_copy_script",
            "args": [
                "self",
                "script",
                "filenames"
            ],
            "lineno": 341
        },
        {
            "type": "function",
            "name": "dry_run",
            "args": [
                "self"
            ],
            "lineno": 393
        },
        {
            "type": "function",
            "name": "dry_run",
            "args": [
                "self",
                "value"
            ],
            "lineno": 397
        },
        {
            "type": "function",
            "name": "make",
            "args": [
                "self",
                "specification",
                "options"
            ],
            "lineno": 424
        },
        {
            "type": "function",
            "name": "make_multiple",
            "args": [
                "self",
                "specifications",
                "options"
            ],
            "lineno": 443
        },
        {
            "type": "function",
            "name": "_is_shell",
            "args": [
                "self",
                "executable"
            ],
            "lineno": 112
        },
        {
            "type": "function",
            "name": "_fix_jython_executable",
            "args": [
                "self",
                "executable"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "_get_launcher",
            "args": [
                "self",
                "kind"
            ],
            "lineno": 405
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distlib/util.py": [
        {
            "type": "function",
            "name": "parse_marker",
            "args": [
                "marker_string"
            ],
            "lineno": 56
        },
        {
            "type": "function",
            "name": "parse_requirement",
            "args": [
                "req"
            ],
            "lineno": 147
        },
        {
            "type": "function",
            "name": "get_resources_dests",
            "args": [
                "resources_root",
                "rules"
            ],
            "lineno": 280
        },
        {
            "type": "function",
            "name": "in_venv",
            "args": [],
            "lineno": 306
        },
        {
            "type": "function",
            "name": "get_executable",
            "args": [],
            "lineno": 316
        },
        {
            "type": "function",
            "name": "proceed",
            "args": [
                "prompt",
                "allowed_chars",
                "error_prompt",
                "default"
            ],
            "lineno": 334
        },
        {
            "type": "function",
            "name": "extract_by_key",
            "args": [
                "d",
                "keys"
            ],
            "lineno": 350
        },
        {
            "type": "function",
            "name": "read_exports",
            "args": [
                "stream"
            ],
            "lineno": 360
        },
        {
            "type": "function",
            "name": "write_exports",
            "args": [
                "exports",
                "stream"
            ],
            "lineno": 407
        },
        {
            "type": "function",
            "name": "tempdir",
            "args": [],
            "lineno": 427
        },
        {
            "type": "function",
            "name": "chdir",
            "args": [
                "d"
            ],
            "lineno": 436
        },
        {
            "type": "function",
            "name": "socket_timeout",
            "args": [
                "seconds"
            ],
            "lineno": 446
        },
        {
            "type": "class",
            "name": "cached_property",
            "methods": [
                "Method `__init__` (line 457)",
                "Method `__get__` (line 462)"
            ],
            "lineno": 455
        },
        {
            "type": "function",
            "name": "convert_path",
            "args": [
                "pathname"
            ],
            "lineno": 471
        },
        {
            "type": "class",
            "name": "FileOperator",
            "methods": [
                "Method `__init__` (line 500)",
                "Method `_init_record` (line 505)",
                "Method `record_as_written` (line 510)",
                "Method `newer` (line 514)",
                "Method `copy_file` (line 534)",
                "Method `copy_stream` (line 551)",
                "Method `write_binary_file` (line 566)",
                "Method `write_text_file` (line 575)",
                "Method `set_mode` (line 578)",
                "Method `ensure_dir` (line 592)",
                "Method `byte_compile` (line 604)",
                "Method `ensure_removed` (line 629)",
                "Method `is_writable` (line 650)",
                "Method `commit` (line 662)",
                "Method `rollback` (line 672)"
            ],
            "lineno": 498
        },
        {
            "type": "function",
            "name": "resolve",
            "args": [
                "module_name",
                "dotted_path"
            ],
            "lineno": 691
        },
        {
            "type": "class",
            "name": "ExportEntry",
            "methods": [
                "Method `__init__` (line 708)",
                "Method `value` (line 715)",
                "Method `__repr__` (line 718)",
                "Method `__eq__` (line 722)"
            ],
            "lineno": 706
        },
        {
            "type": "function",
            "name": "get_export_entry",
            "args": [
                "specification"
            ],
            "lineno": 741
        },
        {
            "type": "function",
            "name": "get_cache_base",
            "args": [
                "suffix"
            ],
            "lineno": 772
        },
        {
            "type": "function",
            "name": "path_to_cache_dir",
            "args": [
                "path"
            ],
            "lineno": 813
        },
        {
            "type": "function",
            "name": "ensure_slash",
            "args": [
                "s"
            ],
            "lineno": 830
        },
        {
            "type": "function",
            "name": "parse_credentials",
            "args": [
                "netloc"
            ],
            "lineno": 836
        },
        {
            "type": "function",
            "name": "get_process_umask",
            "args": [],
            "lineno": 851
        },
        {
            "type": "function",
            "name": "is_string_sequence",
            "args": [
                "seq"
            ],
            "lineno": 857
        },
        {
            "type": "function",
            "name": "split_filename",
            "args": [
                "filename",
                "project_name"
            ],
            "lineno": 874
        },
        {
            "type": "function",
            "name": "parse_name_and_version",
            "args": [
                "p"
            ],
            "lineno": 904
        },
        {
            "type": "function",
            "name": "get_extras",
            "args": [
                "requested",
                "available"
            ],
            "lineno": 920
        },
        {
            "type": "function",
            "name": "_get_external_data",
            "args": [
                "url"
            ],
            "lineno": 948
        },
        {
            "type": "function",
            "name": "get_project_data",
            "args": [
                "name"
            ],
            "lineno": 972
        },
        {
            "type": "function",
            "name": "get_package_data",
            "args": [
                "name",
                "version"
            ],
            "lineno": 979
        },
        {
            "type": "class",
            "name": "Cache",
            "methods": [
                "Method `__init__` (line 992)",
                "Method `prefix_to_dir` (line 1006)",
                "Method `clear` (line 1012)"
            ],
            "lineno": 985
        },
        {
            "type": "class",
            "name": "EventMixin",
            "methods": [
                "Method `__init__` (line 1034)",
                "Method `add` (line 1037)",
                "Method `remove` (line 1057)",
                "Method `get_subscribers` (line 1069)",
                "Method `publish` (line 1076)"
            ],
            "lineno": 1029
        },
        {
            "type": "class",
            "name": "Sequencer",
            "methods": [
                "Method `__init__` (line 1105)",
                "Method `add_node` (line 1110)",
                "Method `remove_node` (line 1113)",
                "Method `add` (line 1129)",
                "Method `remove` (line 1134)",
                "Method `is_step` (line 1147)",
                "Method `get_steps` (line 1151)",
                "Method `strong_connections` (line 1177)",
                "Method `dot` (line 1229)"
            ],
            "lineno": 1103
        },
        {
            "type": "function",
            "name": "unarchive",
            "args": [
                "archive_filename",
                "dest_dir",
                "format",
                "check"
            ],
            "lineno": 1249
        },
        {
            "type": "function",
            "name": "zip_dir",
            "args": [
                "directory"
            ],
            "lineno": 1317
        },
        {
            "type": "class",
            "name": "Progress",
            "methods": [
                "Method `__init__` (line 1341)",
                "Method `update` (line 1349)",
                "Method `increment` (line 1359)",
                "Method `start` (line 1363)",
                "Method `stop` (line 1367)",
                "Method `maximum` (line 1373)",
                "Method `percentage` (line 1377)",
                "Method `format_duration` (line 1387)",
                "Method `ETA` (line 1397)",
                "Method `speed` (line 1416)"
            ],
            "lineno": 1338
        },
        {
            "type": "function",
            "name": "iglob",
            "args": [
                "path_glob"
            ],
            "lineno": 1437
        },
        {
            "type": "function",
            "name": "_iglob",
            "args": [
                "path_glob"
            ],
            "lineno": 1448
        },
        {
            "type": "class",
            "name": "Transport",
            "methods": [
                "Method `__init__` (line 1574)",
                "Method `make_connection` (line 1578)"
            ],
            "lineno": 1572
        },
        {
            "type": "class",
            "name": "ServerProxy",
            "methods": [
                "Method `__init__` (line 1608)"
            ],
            "lineno": 1606
        },
        {
            "type": "function",
            "name": "_csv_open",
            "args": [
                "fn",
                "mode",
                "**kwargs"
            ],
            "lineno": 1631
        },
        {
            "type": "class",
            "name": "CSVBase",
            "methods": [
                "Method `__enter__` (line 1649)",
                "Method `__exit__` (line 1652)"
            ],
            "lineno": 1642
        },
        {
            "type": "class",
            "name": "CSVReader",
            "methods": [
                "Method `__init__` (line 1658)",
                "Method `__iter__` (line 1669)",
                "Method `next` (line 1672)"
            ],
            "lineno": 1656
        },
        {
            "type": "class",
            "name": "CSVWriter",
            "methods": [
                "Method `__init__` (line 1685)",
                "Method `writerow` (line 1689)"
            ],
            "lineno": 1683
        },
        {
            "type": "class",
            "name": "Configurator",
            "methods": [
                "Method `__init__` (line 1710)",
                "Method `configure_custom` (line 1714)",
                "Method `__getitem__` (line 1746)",
                "Method `inc_convert` (line 1752)"
            ],
            "lineno": 1705
        },
        {
            "type": "class",
            "name": "SubprocessMixin",
            "methods": [
                "Method `__init__` (line 1766)",
                "Method `reader` (line 1770)",
                "Method `run_command` (line 1791)"
            ],
            "lineno": 1761
        },
        {
            "type": "function",
            "name": "normalize_name",
            "args": [
                "name"
            ],
            "lineno": 1810
        },
        {
            "type": "class",
            "name": "PyPIRCFile",
            "methods": [
                "Method `__init__` (line 1832)",
                "Method `read` (line 1838)",
                "Method `update` (line 1898)"
            ],
            "lineno": 1827
        },
        {
            "type": "function",
            "name": "_load_pypirc",
            "args": [
                "index"
            ],
            "lineno": 1911
        },
        {
            "type": "function",
            "name": "_store_pypirc",
            "args": [
                "index"
            ],
            "lineno": 1918
        },
        {
            "type": "function",
            "name": "get_host_platform",
            "args": [],
            "lineno": 1928
        },
        {
            "type": "function",
            "name": "get_platform",
            "args": [],
            "lineno": 2019
        },
        {
            "type": "function",
            "name": "marker_var",
            "args": [
                "remaining"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "marker_expr",
            "args": [
                "remaining"
            ],
            "lineno": 103
        },
        {
            "type": "function",
            "name": "marker_and",
            "args": [
                "remaining"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "marker",
            "args": [
                "remaining"
            ],
            "lineno": 133
        },
        {
            "type": "function",
            "name": "get_rel_path",
            "args": [
                "root",
                "path"
            ],
            "lineno": 283
        },
        {
            "type": "function",
            "name": "read_stream",
            "args": [
                "cp",
                "stream"
            ],
            "lineno": 380
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "func"
            ],
            "lineno": 457
        },
        {
            "type": "function",
            "name": "__get__",
            "args": [
                "self",
                "obj",
                "cls"
            ],
            "lineno": 462
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "dry_run"
            ],
            "lineno": 500
        },
        {
            "type": "function",
            "name": "_init_record",
            "args": [
                "self"
            ],
            "lineno": 505
        },
        {
            "type": "function",
            "name": "record_as_written",
            "args": [
                "self",
                "path"
            ],
            "lineno": 510
        },
        {
            "type": "function",
            "name": "newer",
            "args": [
                "self",
                "source",
                "target"
            ],
            "lineno": 514
        },
        {
            "type": "function",
            "name": "copy_file",
            "args": [
                "self",
                "infile",
                "outfile",
                "check"
            ],
            "lineno": 534
        },
        {
            "type": "function",
            "name": "copy_stream",
            "args": [
                "self",
                "instream",
                "outfile",
                "encoding"
            ],
            "lineno": 551
        },
        {
            "type": "function",
            "name": "write_binary_file",
            "args": [
                "self",
                "path",
                "data"
            ],
            "lineno": 566
        },
        {
            "type": "function",
            "name": "write_text_file",
            "args": [
                "self",
                "path",
                "data",
                "encoding"
            ],
            "lineno": 575
        },
        {
            "type": "function",
            "name": "set_mode",
            "args": [
                "self",
                "bits",
                "mask",
                "files"
            ],
            "lineno": 578
        },
        {
            "type": "function",
            "name": "ensure_dir",
            "args": [
                "self",
                "path"
            ],
            "lineno": 592
        },
        {
            "type": "function",
            "name": "byte_compile",
            "args": [
                "self",
                "path",
                "optimize",
                "force",
                "prefix",
                "hashed_invalidation"
            ],
            "lineno": 604
        },
        {
            "type": "function",
            "name": "ensure_removed",
            "args": [
                "self",
                "path"
            ],
            "lineno": 629
        },
        {
            "type": "function",
            "name": "is_writable",
            "args": [
                "self",
                "path"
            ],
            "lineno": 650
        },
        {
            "type": "function",
            "name": "commit",
            "args": [
                "self"
            ],
            "lineno": 662
        },
        {
            "type": "function",
            "name": "rollback",
            "args": [
                "self"
            ],
            "lineno": 672
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "prefix",
                "suffix",
                "flags"
            ],
            "lineno": 708
        },
        {
            "type": "function",
            "name": "value",
            "args": [
                "self"
            ],
            "lineno": 715
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 718
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 722
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "base"
            ],
            "lineno": 992
        },
        {
            "type": "function",
            "name": "prefix_to_dir",
            "args": [
                "self",
                "prefix"
            ],
            "lineno": 1006
        },
        {
            "type": "function",
            "name": "clear",
            "args": [
                "self"
            ],
            "lineno": 1012
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 1034
        },
        {
            "type": "function",
            "name": "add",
            "args": [
                "self",
                "event",
                "subscriber",
                "append"
            ],
            "lineno": 1037
        },
        {
            "type": "function",
            "name": "remove",
            "args": [
                "self",
                "event",
                "subscriber"
            ],
            "lineno": 1057
        },
        {
            "type": "function",
            "name": "get_subscribers",
            "args": [
                "self",
                "event"
            ],
            "lineno": 1069
        },
        {
            "type": "function",
            "name": "publish",
            "args": [
                "self",
                "event",
                "*args",
                "**kwargs"
            ],
            "lineno": 1076
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 1105
        },
        {
            "type": "function",
            "name": "add_node",
            "args": [
                "self",
                "node"
            ],
            "lineno": 1110
        },
        {
            "type": "function",
            "name": "remove_node",
            "args": [
                "self",
                "node",
                "edges"
            ],
            "lineno": 1113
        },
        {
            "type": "function",
            "name": "add",
            "args": [
                "self",
                "pred",
                "succ"
            ],
            "lineno": 1129
        },
        {
            "type": "function",
            "name": "remove",
            "args": [
                "self",
                "pred",
                "succ"
            ],
            "lineno": 1134
        },
        {
            "type": "function",
            "name": "is_step",
            "args": [
                "self",
                "step"
            ],
            "lineno": 1147
        },
        {
            "type": "function",
            "name": "get_steps",
            "args": [
                "self",
                "final"
            ],
            "lineno": 1151
        },
        {
            "type": "function",
            "name": "strong_connections",
            "args": [
                "self"
            ],
            "lineno": 1177
        },
        {
            "type": "function",
            "name": "dot",
            "args": [
                "self"
            ],
            "lineno": 1229
        },
        {
            "type": "function",
            "name": "check_path",
            "args": [
                "path"
            ],
            "lineno": 1251
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "minval",
                "maxval"
            ],
            "lineno": 1341
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "curval"
            ],
            "lineno": 1349
        },
        {
            "type": "function",
            "name": "increment",
            "args": [
                "self",
                "incr"
            ],
            "lineno": 1359
        },
        {
            "type": "function",
            "name": "start",
            "args": [
                "self"
            ],
            "lineno": 1363
        },
        {
            "type": "function",
            "name": "stop",
            "args": [
                "self"
            ],
            "lineno": 1367
        },
        {
            "type": "function",
            "name": "maximum",
            "args": [
                "self"
            ],
            "lineno": 1373
        },
        {
            "type": "function",
            "name": "percentage",
            "args": [
                "self"
            ],
            "lineno": 1377
        },
        {
            "type": "function",
            "name": "format_duration",
            "args": [
                "self",
                "duration"
            ],
            "lineno": 1387
        },
        {
            "type": "function",
            "name": "ETA",
            "args": [
                "self"
            ],
            "lineno": 1397
        },
        {
            "type": "function",
            "name": "speed",
            "args": [
                "self"
            ],
            "lineno": 1416
        },
        {
            "type": "class",
            "name": "HTTPSConnection",
            "methods": [
                "Method `connect` (line 1489)"
            ],
            "lineno": 1484
        },
        {
            "type": "class",
            "name": "HTTPSHandler",
            "methods": [
                "Method `__init__` (line 1520)",
                "Method `_conn_maker` (line 1525)",
                "Method `https_open` (line 1541)"
            ],
            "lineno": 1518
        },
        {
            "type": "class",
            "name": "HTTPSOnlyHandler",
            "methods": [
                "Method `http_open` (line 1563)"
            ],
            "lineno": 1561
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "timeout",
                "use_datetime"
            ],
            "lineno": 1574
        },
        {
            "type": "function",
            "name": "make_connection",
            "args": [
                "self",
                "host"
            ],
            "lineno": 1578
        },
        {
            "type": "class",
            "name": "SafeTransport",
            "methods": [
                "Method `__init__` (line 1590)",
                "Method `make_connection` (line 1594)"
            ],
            "lineno": 1588
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "uri",
                "**kwargs"
            ],
            "lineno": 1608
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 1649
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "*exc_info"
            ],
            "lineno": 1652
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**kwargs"
            ],
            "lineno": 1658
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 1669
        },
        {
            "type": "function",
            "name": "next",
            "args": [
                "self"
            ],
            "lineno": 1672
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "fn",
                "**kwargs"
            ],
            "lineno": 1685
        },
        {
            "type": "function",
            "name": "writerow",
            "args": [
                "self",
                "row"
            ],
            "lineno": 1689
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "config",
                "base"
            ],
            "lineno": 1710
        },
        {
            "type": "function",
            "name": "configure_custom",
            "args": [
                "self",
                "config"
            ],
            "lineno": 1714
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 1746
        },
        {
            "type": "function",
            "name": "inc_convert",
            "args": [
                "self",
                "value"
            ],
            "lineno": 1752
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "verbose",
                "progress"
            ],
            "lineno": 1766
        },
        {
            "type": "function",
            "name": "reader",
            "args": [
                "self",
                "stream",
                "context"
            ],
            "lineno": 1770
        },
        {
            "type": "function",
            "name": "run_command",
            "args": [
                "self",
                "cmd",
                "**kwargs"
            ],
            "lineno": 1791
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "fn",
                "url"
            ],
            "lineno": 1832
        },
        {
            "type": "function",
            "name": "read",
            "args": [
                "self"
            ],
            "lineno": 1838
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "username",
                "password"
            ],
            "lineno": 1898
        },
        {
            "type": "function",
            "name": "strongconnect",
            "args": [
                "node"
            ],
            "lineno": 1187
        },
        {
            "type": "function",
            "name": "extraction_filter",
            "args": [
                "member",
                "path"
            ],
            "lineno": 1300
        },
        {
            "type": "function",
            "name": "connect",
            "args": [
                "self"
            ],
            "lineno": 1489
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "ca_certs",
                "check_domain"
            ],
            "lineno": 1520
        },
        {
            "type": "function",
            "name": "_conn_maker",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 1525
        },
        {
            "type": "function",
            "name": "https_open",
            "args": [
                "self",
                "req"
            ],
            "lineno": 1541
        },
        {
            "type": "function",
            "name": "http_open",
            "args": [
                "self",
                "req"
            ],
            "lineno": 1563
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "timeout",
                "use_datetime"
            ],
            "lineno": 1590
        },
        {
            "type": "function",
            "name": "make_connection",
            "args": [
                "self",
                "host"
            ],
            "lineno": 1594
        },
        {
            "type": "function",
            "name": "convert",
            "args": [
                "o"
            ],
            "lineno": 1716
        },
        {
            "type": "function",
            "name": "get_versions",
            "args": [
                "ver_remaining"
            ],
            "lineno": 199
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distlib/version.py": [
        {
            "type": "class",
            "name": "UnsupportedVersionError",
            "methods": null,
            "lineno": 25
        },
        {
            "type": "class",
            "name": "Version",
            "methods": [
                "Method `__init__` (line 31)",
                "Method `parse` (line 37)",
                "Method `_check_compatible` (line 40)",
                "Method `__eq__` (line 44)",
                "Method `__ne__` (line 48)",
                "Method `__lt__` (line 51)",
                "Method `__gt__` (line 55)",
                "Method `__le__` (line 58)",
                "Method `__ge__` (line 61)",
                "Method `__hash__` (line 65)",
                "Method `__repr__` (line 68)",
                "Method `__str__` (line 71)",
                "Method `is_prerelease` (line 75)"
            ],
            "lineno": 30
        },
        {
            "type": "class",
            "name": "Matcher",
            "methods": [
                "Method `parse_requirement` (line 97)",
                "Method `__init__` (line 100)",
                "Method `match` (line 129)",
                "Method `exact_version` (line 151)",
                "Method `_check_compatible` (line 157)",
                "Method `__eq__` (line 161)",
                "Method `__ne__` (line 165)",
                "Method `__hash__` (line 169)",
                "Method `__repr__` (line 172)",
                "Method `__str__` (line 175)"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "_pep_440_key",
            "args": [
                "s"
            ],
            "lineno": 184
        },
        {
            "type": "class",
            "name": "NormalizedVersion",
            "methods": [
                "Method `parse` (line 274)",
                "Method `is_prerelease` (line 288)"
            ],
            "lineno": 256
        },
        {
            "type": "function",
            "name": "_match_prefix",
            "args": [
                "x",
                "y"
            ],
            "lineno": 292
        },
        {
            "type": "class",
            "name": "NormalizedMatcher",
            "methods": [
                "Method `_adjust_local` (line 318)",
                "Method `_match_lt` (line 332)",
                "Method `_match_gt` (line 340)",
                "Method `_match_le` (line 348)",
                "Method `_match_ge` (line 352)",
                "Method `_match_eq` (line 356)",
                "Method `_match_arbitrary` (line 364)",
                "Method `_match_ne` (line 367)",
                "Method `_match_compatible` (line 375)"
            ],
            "lineno": 303
        },
        {
            "type": "function",
            "name": "_suggest_semantic_version",
            "args": [
                "s"
            ],
            "lineno": 415
        },
        {
            "type": "function",
            "name": "_suggest_normalized_version",
            "args": [
                "s"
            ],
            "lineno": 461
        },
        {
            "type": "function",
            "name": "_legacy_key",
            "args": [
                "s"
            ],
            "lineno": 588
        },
        {
            "type": "class",
            "name": "LegacyVersion",
            "methods": [
                "Method `parse` (line 615)",
                "Method `is_prerelease` (line 619)"
            ],
            "lineno": 614
        },
        {
            "type": "class",
            "name": "LegacyMatcher",
            "methods": [
                "Method `_match_compatible` (line 637)"
            ],
            "lineno": 629
        },
        {
            "type": "function",
            "name": "is_semver",
            "args": [
                "s"
            ],
            "lineno": 660
        },
        {
            "type": "function",
            "name": "_semantic_key",
            "args": [
                "s"
            ],
            "lineno": 664
        },
        {
            "type": "class",
            "name": "SemanticVersion",
            "methods": [
                "Method `parse` (line 686)",
                "Method `is_prerelease` (line 690)"
            ],
            "lineno": 685
        },
        {
            "type": "class",
            "name": "SemanticMatcher",
            "methods": null,
            "lineno": 694
        },
        {
            "type": "class",
            "name": "VersionScheme",
            "methods": [
                "Method `__init__` (line 699)",
                "Method `is_valid_version` (line 704)",
                "Method `is_valid_matcher` (line 712)",
                "Method `is_valid_constraint_list` (line 720)",
                "Method `suggest` (line 729)"
            ],
            "lineno": 698
        },
        {
            "type": "function",
            "name": "get_scheme",
            "args": [
                "name"
            ],
            "lineno": 748
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "s"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "parse",
            "args": [
                "self",
                "s"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "_check_compatible",
            "args": [
                "self",
                "other"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "__ne__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "__lt__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "__gt__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "__le__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "__ge__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 65
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 68
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 71
        },
        {
            "type": "function",
            "name": "is_prerelease",
            "args": [
                "self"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "parse_requirement",
            "args": [
                "self",
                "s"
            ],
            "lineno": 97
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "s"
            ],
            "lineno": 100
        },
        {
            "type": "function",
            "name": "match",
            "args": [
                "self",
                "version"
            ],
            "lineno": 129
        },
        {
            "type": "function",
            "name": "exact_version",
            "args": [
                "self"
            ],
            "lineno": 151
        },
        {
            "type": "function",
            "name": "_check_compatible",
            "args": [
                "self",
                "other"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 161
        },
        {
            "type": "function",
            "name": "__ne__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 165
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 169
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 172
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "parse",
            "args": [
                "self",
                "s"
            ],
            "lineno": 274
        },
        {
            "type": "function",
            "name": "is_prerelease",
            "args": [
                "self"
            ],
            "lineno": 288
        },
        {
            "type": "function",
            "name": "_adjust_local",
            "args": [
                "self",
                "version",
                "constraint",
                "prefix"
            ],
            "lineno": 318
        },
        {
            "type": "function",
            "name": "_match_lt",
            "args": [
                "self",
                "version",
                "constraint",
                "prefix"
            ],
            "lineno": 332
        },
        {
            "type": "function",
            "name": "_match_gt",
            "args": [
                "self",
                "version",
                "constraint",
                "prefix"
            ],
            "lineno": 340
        },
        {
            "type": "function",
            "name": "_match_le",
            "args": [
                "self",
                "version",
                "constraint",
                "prefix"
            ],
            "lineno": 348
        },
        {
            "type": "function",
            "name": "_match_ge",
            "args": [
                "self",
                "version",
                "constraint",
                "prefix"
            ],
            "lineno": 352
        },
        {
            "type": "function",
            "name": "_match_eq",
            "args": [
                "self",
                "version",
                "constraint",
                "prefix"
            ],
            "lineno": 356
        },
        {
            "type": "function",
            "name": "_match_arbitrary",
            "args": [
                "self",
                "version",
                "constraint",
                "prefix"
            ],
            "lineno": 364
        },
        {
            "type": "function",
            "name": "_match_ne",
            "args": [
                "self",
                "version",
                "constraint",
                "prefix"
            ],
            "lineno": 367
        },
        {
            "type": "function",
            "name": "_match_compatible",
            "args": [
                "self",
                "version",
                "constraint",
                "prefix"
            ],
            "lineno": 375
        },
        {
            "type": "function",
            "name": "get_parts",
            "args": [
                "s"
            ],
            "lineno": 589
        },
        {
            "type": "function",
            "name": "parse",
            "args": [
                "self",
                "s"
            ],
            "lineno": 615
        },
        {
            "type": "function",
            "name": "is_prerelease",
            "args": [
                "self"
            ],
            "lineno": 619
        },
        {
            "type": "function",
            "name": "_match_compatible",
            "args": [
                "self",
                "version",
                "constraint",
                "prefix"
            ],
            "lineno": 637
        },
        {
            "type": "function",
            "name": "make_tuple",
            "args": [
                "s",
                "absent"
            ],
            "lineno": 665
        },
        {
            "type": "function",
            "name": "parse",
            "args": [
                "self",
                "s"
            ],
            "lineno": 686
        },
        {
            "type": "function",
            "name": "is_prerelease",
            "args": [
                "self"
            ],
            "lineno": 690
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "key",
                "matcher",
                "suggester"
            ],
            "lineno": 699
        },
        {
            "type": "function",
            "name": "is_valid_version",
            "args": [
                "self",
                "s"
            ],
            "lineno": 704
        },
        {
            "type": "function",
            "name": "is_valid_matcher",
            "args": [
                "self",
                "s"
            ],
            "lineno": 712
        },
        {
            "type": "function",
            "name": "is_valid_constraint_list",
            "args": [
                "self",
                "s"
            ],
            "lineno": 720
        },
        {
            "type": "function",
            "name": "suggest",
            "args": [
                "self",
                "s"
            ],
            "lineno": 729
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distlib/wheel.py": [
        {
            "type": "function",
            "name": "_get_suffixes",
            "args": [],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "_load_dynamic",
            "args": [
                "name",
                "path"
            ],
            "lineno": 123
        },
        {
            "type": "class",
            "name": "Mounter",
            "methods": [
                "Method `__init__` (line 137)",
                "Method `add` (line 141)",
                "Method `remove` (line 145)",
                "Method `find_module` (line 151)",
                "Method `load_module` (line 158)"
            ],
            "lineno": 135
        },
        {
            "type": "class",
            "name": "Wheel",
            "methods": [
                "Method `__init__` (line 183)",
                "Method `filename` (line 225)",
                "Method `exists` (line 242)",
                "Method `tags` (line 247)",
                "Method `metadata` (line 254)",
                "Method `get_wheel_metadata` (line 285)",
                "Method `info` (line 295)",
                "Method `process_shebang` (line 301)",
                "Method `get_hash` (line 331)",
                "Method `write_record` (line 343)",
                "Method `write_records` (line 350)",
                "Method `build_zip` (line 366)",
                "Method `build` (line 372)",
                "Method `skip_entry` (line 489)",
                "Method `install` (line 505)",
                "Method `_get_dylib_cache` (line 745)",
                "Method `_get_extensions` (line 754)",
                "Method `is_compatible` (line 789)",
                "Method `is_mountable` (line 795)",
                "Method `mount` (line 801)",
                "Method `unmount` (line 822)",
                "Method `verify` (line 834)",
                "Method `update` (line 890)"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "_get_glibc_version",
            "args": [],
            "lineno": 993
        },
        {
            "type": "function",
            "name": "compatible_tags",
            "args": [],
            "lineno": 1004
        },
        {
            "type": "function",
            "name": "is_compatible",
            "args": [
                "wheel",
                "tags"
            ],
            "lineno": 1089
        },
        {
            "type": "function",
            "name": "_derive_abi",
            "args": [],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 137
        },
        {
            "type": "function",
            "name": "add",
            "args": [
                "self",
                "pathname",
                "extensions"
            ],
            "lineno": 141
        },
        {
            "type": "function",
            "name": "remove",
            "args": [
                "self",
                "pathname"
            ],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "find_module",
            "args": [
                "self",
                "fullname",
                "path"
            ],
            "lineno": 151
        },
        {
            "type": "function",
            "name": "load_module",
            "args": [
                "self",
                "fullname"
            ],
            "lineno": 158
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "filename",
                "sign",
                "verify"
            ],
            "lineno": 183
        },
        {
            "type": "function",
            "name": "filename",
            "args": [
                "self"
            ],
            "lineno": 225
        },
        {
            "type": "function",
            "name": "exists",
            "args": [
                "self"
            ],
            "lineno": 242
        },
        {
            "type": "function",
            "name": "tags",
            "args": [
                "self"
            ],
            "lineno": 247
        },
        {
            "type": "function",
            "name": "metadata",
            "args": [
                "self"
            ],
            "lineno": 254
        },
        {
            "type": "function",
            "name": "get_wheel_metadata",
            "args": [
                "self",
                "zf"
            ],
            "lineno": 285
        },
        {
            "type": "function",
            "name": "info",
            "args": [
                "self"
            ],
            "lineno": 295
        },
        {
            "type": "function",
            "name": "process_shebang",
            "args": [
                "self",
                "data"
            ],
            "lineno": 301
        },
        {
            "type": "function",
            "name": "get_hash",
            "args": [
                "self",
                "data",
                "hash_kind"
            ],
            "lineno": 331
        },
        {
            "type": "function",
            "name": "write_record",
            "args": [
                "self",
                "records",
                "record_path",
                "archive_record_path"
            ],
            "lineno": 343
        },
        {
            "type": "function",
            "name": "write_records",
            "args": [
                "self",
                "info",
                "libdir",
                "archive_paths"
            ],
            "lineno": 350
        },
        {
            "type": "function",
            "name": "build_zip",
            "args": [
                "self",
                "pathname",
                "archive_paths"
            ],
            "lineno": 366
        },
        {
            "type": "function",
            "name": "build",
            "args": [
                "self",
                "paths",
                "tags",
                "wheel_version"
            ],
            "lineno": 372
        },
        {
            "type": "function",
            "name": "skip_entry",
            "args": [
                "self",
                "arcname"
            ],
            "lineno": 489
        },
        {
            "type": "function",
            "name": "install",
            "args": [
                "self",
                "paths",
                "maker",
                "**kwargs"
            ],
            "lineno": 505
        },
        {
            "type": "function",
            "name": "_get_dylib_cache",
            "args": [
                "self"
            ],
            "lineno": 745
        },
        {
            "type": "function",
            "name": "_get_extensions",
            "args": [
                "self"
            ],
            "lineno": 754
        },
        {
            "type": "function",
            "name": "is_compatible",
            "args": [
                "self"
            ],
            "lineno": 789
        },
        {
            "type": "function",
            "name": "is_mountable",
            "args": [
                "self"
            ],
            "lineno": 795
        },
        {
            "type": "function",
            "name": "mount",
            "args": [
                "self",
                "append"
            ],
            "lineno": 801
        },
        {
            "type": "function",
            "name": "unmount",
            "args": [
                "self"
            ],
            "lineno": 822
        },
        {
            "type": "function",
            "name": "verify",
            "args": [
                "self"
            ],
            "lineno": 834
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "modifier",
                "dest_dir",
                "**kwargs"
            ],
            "lineno": 890
        },
        {
            "type": "function",
            "name": "sorter",
            "args": [
                "t"
            ],
            "lineno": 472
        },
        {
            "type": "function",
            "name": "get_version",
            "args": [
                "path_map",
                "info_dir"
            ],
            "lineno": 907
        },
        {
            "type": "function",
            "name": "update_version",
            "args": [
                "version",
                "path"
            ],
            "lineno": 917
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distlib/__init__.py": [
        {
            "type": "class",
            "name": "DistlibException",
            "methods": null,
            "lineno": 12
        },
        {
            "type": "class",
            "name": "NullHandler",
            "methods": [
                "Method `handle` (line 22)",
                "Method `emit` (line 25)",
                "Method `createLock` (line 28)"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "handle",
            "args": [
                "self",
                "record"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "emit",
            "args": [
                "self",
                "record"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "createLock",
            "args": [
                "self"
            ],
            "lineno": 28
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distro/distro.py": [
        {
            "type": "class",
            "name": "VersionDict",
            "methods": null,
            "lineno": 61
        },
        {
            "type": "class",
            "name": "InfoDict",
            "methods": null,
            "lineno": 67
        },
        {
            "type": "function",
            "name": "linux_distribution",
            "args": [
                "full_distribution_name"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "id",
            "args": [],
            "lineno": 200
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "pretty"
            ],
            "lineno": 283
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "pretty",
                "best"
            ],
            "lineno": 322
        },
        {
            "type": "function",
            "name": "version_parts",
            "args": [
                "best"
            ],
            "lineno": 370
        },
        {
            "type": "function",
            "name": "major_version",
            "args": [
                "best"
            ],
            "lineno": 387
        },
        {
            "type": "function",
            "name": "minor_version",
            "args": [
                "best"
            ],
            "lineno": 400
        },
        {
            "type": "function",
            "name": "build_number",
            "args": [
                "best"
            ],
            "lineno": 413
        },
        {
            "type": "function",
            "name": "like",
            "args": [],
            "lineno": 426
        },
        {
            "type": "function",
            "name": "codename",
            "args": [],
            "lineno": 443
        },
        {
            "type": "function",
            "name": "info",
            "args": [
                "pretty",
                "best"
            ],
            "lineno": 467
        },
        {
            "type": "function",
            "name": "os_release_info",
            "args": [],
            "lineno": 511
        },
        {
            "type": "function",
            "name": "lsb_release_info",
            "args": [],
            "lineno": 521
        },
        {
            "type": "function",
            "name": "distro_release_info",
            "args": [],
            "lineno": 532
        },
        {
            "type": "function",
            "name": "uname_info",
            "args": [],
            "lineno": 542
        },
        {
            "type": "function",
            "name": "os_release_attr",
            "args": [
                "attribute"
            ],
            "lineno": 550
        },
        {
            "type": "function",
            "name": "lsb_release_attr",
            "args": [
                "attribute"
            ],
            "lineno": 569
        },
        {
            "type": "function",
            "name": "distro_release_attr",
            "args": [
                "attribute"
            ],
            "lineno": 589
        },
        {
            "type": "function",
            "name": "uname_attr",
            "args": [
                "attribute"
            ],
            "lineno": 608
        },
        {
            "type": "class",
            "name": "LinuxDistribution",
            "methods": [
                "Method `__init__` (line 663)",
                "Method `__repr__` (line 796)",
                "Method `linux_distribution` (line 813)",
                "Method `id` (line 829)",
                "Method `name` (line 857)",
                "Method `version` (line 880)",
                "Method `version_parts` (line 922)",
                "Method `major_version` (line 938)",
                "Method `minor_version` (line 946)",
                "Method `build_number` (line 954)",
                "Method `like` (line 962)",
                "Method `codename` (line 970)",
                "Method `info` (line 987)",
                "Method `os_release_info` (line 1006)",
                "Method `lsb_release_info` (line 1015)",
                "Method `distro_release_info` (line 1025)",
                "Method `uname_info` (line 1035)",
                "Method `oslevel_info` (line 1044)",
                "Method `os_release_attr` (line 1050)",
                "Method `lsb_release_attr` (line 1059)",
                "Method `distro_release_attr` (line 1068)",
                "Method `uname_attr` (line 1077)",
                "Method `_os_release_info` (line 1087)",
                "Method `_parse_os_release_content` (line 1100)",
                "Method `_lsb_release_info` (line 1150)",
                "Method `_parse_lsb_release_content` (line 1169)",
                "Method `_uname_info` (line 1193)",
                "Method `_oslevel_info` (line 1205)",
                "Method `_debian_version` (line 1215)",
                "Method `_parse_uname_content` (line 1225)",
                "Method `_to_str` (line 1244)",
                "Method `_distro_release_info` (line 1249)",
                "Method `_parse_distro_release_file` (line 1307)",
                "Method `_parse_distro_release_content` (line 1330)"
            ],
            "lineno": 645
        },
        {
            "type": "function",
            "name": "main",
            "args": [],
            "lineno": 1358
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "include_lsb",
                "os_release_file",
                "distro_release_file",
                "include_uname",
                "root_dir",
                "include_oslevel"
            ],
            "lineno": 663
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 796
        },
        {
            "type": "function",
            "name": "linux_distribution",
            "args": [
                "self",
                "full_distribution_name"
            ],
            "lineno": 813
        },
        {
            "type": "function",
            "name": "id",
            "args": [
                "self"
            ],
            "lineno": 829
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self",
                "pretty"
            ],
            "lineno": 857
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "self",
                "pretty",
                "best"
            ],
            "lineno": 880
        },
        {
            "type": "function",
            "name": "version_parts",
            "args": [
                "self",
                "best"
            ],
            "lineno": 922
        },
        {
            "type": "function",
            "name": "major_version",
            "args": [
                "self",
                "best"
            ],
            "lineno": 938
        },
        {
            "type": "function",
            "name": "minor_version",
            "args": [
                "self",
                "best"
            ],
            "lineno": 946
        },
        {
            "type": "function",
            "name": "build_number",
            "args": [
                "self",
                "best"
            ],
            "lineno": 954
        },
        {
            "type": "function",
            "name": "like",
            "args": [
                "self"
            ],
            "lineno": 962
        },
        {
            "type": "function",
            "name": "codename",
            "args": [
                "self"
            ],
            "lineno": 970
        },
        {
            "type": "function",
            "name": "info",
            "args": [
                "self",
                "pretty",
                "best"
            ],
            "lineno": 987
        },
        {
            "type": "function",
            "name": "os_release_info",
            "args": [
                "self"
            ],
            "lineno": 1006
        },
        {
            "type": "function",
            "name": "lsb_release_info",
            "args": [
                "self"
            ],
            "lineno": 1015
        },
        {
            "type": "function",
            "name": "distro_release_info",
            "args": [
                "self"
            ],
            "lineno": 1025
        },
        {
            "type": "function",
            "name": "uname_info",
            "args": [
                "self"
            ],
            "lineno": 1035
        },
        {
            "type": "function",
            "name": "oslevel_info",
            "args": [
                "self"
            ],
            "lineno": 1044
        },
        {
            "type": "function",
            "name": "os_release_attr",
            "args": [
                "self",
                "attribute"
            ],
            "lineno": 1050
        },
        {
            "type": "function",
            "name": "lsb_release_attr",
            "args": [
                "self",
                "attribute"
            ],
            "lineno": 1059
        },
        {
            "type": "function",
            "name": "distro_release_attr",
            "args": [
                "self",
                "attribute"
            ],
            "lineno": 1068
        },
        {
            "type": "function",
            "name": "uname_attr",
            "args": [
                "self",
                "attribute"
            ],
            "lineno": 1077
        },
        {
            "type": "function",
            "name": "_os_release_info",
            "args": [
                "self"
            ],
            "lineno": 1087
        },
        {
            "type": "function",
            "name": "_parse_os_release_content",
            "args": [
                "lines"
            ],
            "lineno": 1100
        },
        {
            "type": "function",
            "name": "_lsb_release_info",
            "args": [
                "self"
            ],
            "lineno": 1150
        },
        {
            "type": "function",
            "name": "_parse_lsb_release_content",
            "args": [
                "lines"
            ],
            "lineno": 1169
        },
        {
            "type": "function",
            "name": "_uname_info",
            "args": [
                "self"
            ],
            "lineno": 1193
        },
        {
            "type": "function",
            "name": "_oslevel_info",
            "args": [
                "self"
            ],
            "lineno": 1205
        },
        {
            "type": "function",
            "name": "_debian_version",
            "args": [
                "self"
            ],
            "lineno": 1215
        },
        {
            "type": "function",
            "name": "_parse_uname_content",
            "args": [
                "lines"
            ],
            "lineno": 1225
        },
        {
            "type": "function",
            "name": "_to_str",
            "args": [
                "bytestring"
            ],
            "lineno": 1244
        },
        {
            "type": "function",
            "name": "_distro_release_info",
            "args": [
                "self"
            ],
            "lineno": 1249
        },
        {
            "type": "function",
            "name": "_parse_distro_release_file",
            "args": [
                "self",
                "filepath"
            ],
            "lineno": 1307
        },
        {
            "type": "function",
            "name": "_parse_distro_release_content",
            "args": [
                "line"
            ],
            "lineno": 1330
        },
        {
            "type": "class",
            "name": "cached_property",
            "methods": [
                "Method `__init__` (line 635)",
                "Method `__get__` (line 639)"
            ],
            "lineno": 629
        },
        {
            "type": "function",
            "name": "normalize",
            "args": [
                "distro_id",
                "table"
            ],
            "lineno": 835
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "f"
            ],
            "lineno": 635
        },
        {
            "type": "function",
            "name": "__get__",
            "args": [
                "self",
                "obj",
                "owner"
            ],
            "lineno": 639
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distro/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/distro/__main__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/idna/codec.py": [
        {
            "type": "class",
            "name": "Codec",
            "methods": [
                "Method `encode` (line 10)",
                "Method `decode` (line 19)"
            ],
            "lineno": 8
        },
        {
            "type": "class",
            "name": "IncrementalEncoder",
            "methods": [
                "Method `_buffer_encode` (line 29)"
            ],
            "lineno": 28
        },
        {
            "type": "class",
            "name": "IncrementalDecoder",
            "methods": [
                "Method `_buffer_decode` (line 62)"
            ],
            "lineno": 61
        },
        {
            "type": "class",
            "name": "StreamWriter",
            "methods": null,
            "lineno": 94
        },
        {
            "type": "class",
            "name": "StreamReader",
            "methods": null,
            "lineno": 98
        },
        {
            "type": "function",
            "name": "getregentry",
            "args": [],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "encode",
            "args": [
                "self",
                "data",
                "errors"
            ],
            "lineno": 10
        },
        {
            "type": "function",
            "name": "decode",
            "args": [
                "self",
                "data",
                "errors"
            ],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "_buffer_encode",
            "args": [
                "self",
                "data",
                "errors",
                "final"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "_buffer_decode",
            "args": [
                "self",
                "data",
                "errors",
                "final"
            ],
            "lineno": 62
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/idna/compat.py": [
        {
            "type": "function",
            "name": "ToASCII",
            "args": [
                "label"
            ],
            "lineno": 5
        },
        {
            "type": "function",
            "name": "ToUnicode",
            "args": [
                "label"
            ],
            "lineno": 8
        },
        {
            "type": "function",
            "name": "nameprep",
            "args": [
                "s"
            ],
            "lineno": 11
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/idna/core.py": [
        {
            "type": "class",
            "name": "IDNAError",
            "methods": null,
            "lineno": 12
        },
        {
            "type": "class",
            "name": "IDNABidiError",
            "methods": null,
            "lineno": 17
        },
        {
            "type": "class",
            "name": "InvalidCodepoint",
            "methods": null,
            "lineno": 22
        },
        {
            "type": "class",
            "name": "InvalidCodepointContext",
            "methods": null,
            "lineno": 27
        },
        {
            "type": "function",
            "name": "_combining_class",
            "args": [
                "cp"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "_is_script",
            "args": [
                "cp",
                "script"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "_punycode",
            "args": [
                "s"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "_unot",
            "args": [
                "s"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "valid_label_length",
            "args": [
                "label"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "valid_string_length",
            "args": [
                "label",
                "trailing_dot"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "check_bidi",
            "args": [
                "label",
                "check_ltr"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "check_initial_combiner",
            "args": [
                "label"
            ],
            "lineno": 120
        },
        {
            "type": "function",
            "name": "check_hyphen_ok",
            "args": [
                "label"
            ],
            "lineno": 126
        },
        {
            "type": "function",
            "name": "check_nfc",
            "args": [
                "label"
            ],
            "lineno": 134
        },
        {
            "type": "function",
            "name": "valid_contextj",
            "args": [
                "label",
                "pos"
            ],
            "lineno": 139
        },
        {
            "type": "function",
            "name": "valid_contexto",
            "args": [
                "label",
                "pos",
                "exception"
            ],
            "lineno": 182
        },
        {
            "type": "function",
            "name": "check_label",
            "args": [
                "label"
            ],
            "lineno": 224
        },
        {
            "type": "function",
            "name": "alabel",
            "args": [
                "label"
            ],
            "lineno": 255
        },
        {
            "type": "function",
            "name": "ulabel",
            "args": [
                "label"
            ],
            "lineno": 279
        },
        {
            "type": "function",
            "name": "uts46_remap",
            "args": [
                "domain",
                "std3_rules",
                "transitional"
            ],
            "lineno": 308
        },
        {
            "type": "function",
            "name": "encode",
            "args": [
                "s",
                "strict",
                "uts46",
                "std3_rules",
                "transitional"
            ],
            "lineno": 340
        },
        {
            "type": "function",
            "name": "decode",
            "args": [
                "s",
                "strict",
                "uts46",
                "std3_rules"
            ],
            "lineno": 373
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/idna/idnadata.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/idna/intranges.py": [
        {
            "type": "function",
            "name": "intranges_from_list",
            "args": [
                "list_"
            ],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "_encode_range",
            "args": [
                "start",
                "end"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "_decode_range",
            "args": [
                "r"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "intranges_contain",
            "args": [
                "int_",
                "ranges"
            ],
            "lineno": 39
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/idna/package_data.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/idna/uts46data.py": [
        {
            "type": "function",
            "name": "_seg_0",
            "args": [],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "_seg_1",
            "args": [],
            "lineno": 115
        },
        {
            "type": "function",
            "name": "_seg_2",
            "args": [],
            "lineno": 219
        },
        {
            "type": "function",
            "name": "_seg_3",
            "args": [],
            "lineno": 323
        },
        {
            "type": "function",
            "name": "_seg_4",
            "args": [],
            "lineno": 427
        },
        {
            "type": "function",
            "name": "_seg_5",
            "args": [],
            "lineno": 531
        },
        {
            "type": "function",
            "name": "_seg_6",
            "args": [],
            "lineno": 635
        },
        {
            "type": "function",
            "name": "_seg_7",
            "args": [],
            "lineno": 739
        },
        {
            "type": "function",
            "name": "_seg_8",
            "args": [],
            "lineno": 843
        },
        {
            "type": "function",
            "name": "_seg_9",
            "args": [],
            "lineno": 947
        },
        {
            "type": "function",
            "name": "_seg_10",
            "args": [],
            "lineno": 1051
        },
        {
            "type": "function",
            "name": "_seg_11",
            "args": [],
            "lineno": 1155
        },
        {
            "type": "function",
            "name": "_seg_12",
            "args": [],
            "lineno": 1259
        },
        {
            "type": "function",
            "name": "_seg_13",
            "args": [],
            "lineno": 1363
        },
        {
            "type": "function",
            "name": "_seg_14",
            "args": [],
            "lineno": 1467
        },
        {
            "type": "function",
            "name": "_seg_15",
            "args": [],
            "lineno": 1571
        },
        {
            "type": "function",
            "name": "_seg_16",
            "args": [],
            "lineno": 1675
        },
        {
            "type": "function",
            "name": "_seg_17",
            "args": [],
            "lineno": 1779
        },
        {
            "type": "function",
            "name": "_seg_18",
            "args": [],
            "lineno": 1883
        },
        {
            "type": "function",
            "name": "_seg_19",
            "args": [],
            "lineno": 1987
        },
        {
            "type": "function",
            "name": "_seg_20",
            "args": [],
            "lineno": 2091
        },
        {
            "type": "function",
            "name": "_seg_21",
            "args": [],
            "lineno": 2195
        },
        {
            "type": "function",
            "name": "_seg_22",
            "args": [],
            "lineno": 2299
        },
        {
            "type": "function",
            "name": "_seg_23",
            "args": [],
            "lineno": 2403
        },
        {
            "type": "function",
            "name": "_seg_24",
            "args": [],
            "lineno": 2507
        },
        {
            "type": "function",
            "name": "_seg_25",
            "args": [],
            "lineno": 2611
        },
        {
            "type": "function",
            "name": "_seg_26",
            "args": [],
            "lineno": 2715
        },
        {
            "type": "function",
            "name": "_seg_27",
            "args": [],
            "lineno": 2819
        },
        {
            "type": "function",
            "name": "_seg_28",
            "args": [],
            "lineno": 2923
        },
        {
            "type": "function",
            "name": "_seg_29",
            "args": [],
            "lineno": 3027
        },
        {
            "type": "function",
            "name": "_seg_30",
            "args": [],
            "lineno": 3131
        },
        {
            "type": "function",
            "name": "_seg_31",
            "args": [],
            "lineno": 3235
        },
        {
            "type": "function",
            "name": "_seg_32",
            "args": [],
            "lineno": 3339
        },
        {
            "type": "function",
            "name": "_seg_33",
            "args": [],
            "lineno": 3443
        },
        {
            "type": "function",
            "name": "_seg_34",
            "args": [],
            "lineno": 3547
        },
        {
            "type": "function",
            "name": "_seg_35",
            "args": [],
            "lineno": 3651
        },
        {
            "type": "function",
            "name": "_seg_36",
            "args": [],
            "lineno": 3755
        },
        {
            "type": "function",
            "name": "_seg_37",
            "args": [],
            "lineno": 3859
        },
        {
            "type": "function",
            "name": "_seg_38",
            "args": [],
            "lineno": 3963
        },
        {
            "type": "function",
            "name": "_seg_39",
            "args": [],
            "lineno": 4067
        },
        {
            "type": "function",
            "name": "_seg_40",
            "args": [],
            "lineno": 4171
        },
        {
            "type": "function",
            "name": "_seg_41",
            "args": [],
            "lineno": 4275
        },
        {
            "type": "function",
            "name": "_seg_42",
            "args": [],
            "lineno": 4379
        },
        {
            "type": "function",
            "name": "_seg_43",
            "args": [],
            "lineno": 4483
        },
        {
            "type": "function",
            "name": "_seg_44",
            "args": [],
            "lineno": 4587
        },
        {
            "type": "function",
            "name": "_seg_45",
            "args": [],
            "lineno": 4691
        },
        {
            "type": "function",
            "name": "_seg_46",
            "args": [],
            "lineno": 4795
        },
        {
            "type": "function",
            "name": "_seg_47",
            "args": [],
            "lineno": 4899
        },
        {
            "type": "function",
            "name": "_seg_48",
            "args": [],
            "lineno": 5003
        },
        {
            "type": "function",
            "name": "_seg_49",
            "args": [],
            "lineno": 5107
        },
        {
            "type": "function",
            "name": "_seg_50",
            "args": [],
            "lineno": 5211
        },
        {
            "type": "function",
            "name": "_seg_51",
            "args": [],
            "lineno": 5315
        },
        {
            "type": "function",
            "name": "_seg_52",
            "args": [],
            "lineno": 5419
        },
        {
            "type": "function",
            "name": "_seg_53",
            "args": [],
            "lineno": 5523
        },
        {
            "type": "function",
            "name": "_seg_54",
            "args": [],
            "lineno": 5627
        },
        {
            "type": "function",
            "name": "_seg_55",
            "args": [],
            "lineno": 5731
        },
        {
            "type": "function",
            "name": "_seg_56",
            "args": [],
            "lineno": 5835
        },
        {
            "type": "function",
            "name": "_seg_57",
            "args": [],
            "lineno": 5939
        },
        {
            "type": "function",
            "name": "_seg_58",
            "args": [],
            "lineno": 6043
        },
        {
            "type": "function",
            "name": "_seg_59",
            "args": [],
            "lineno": 6147
        },
        {
            "type": "function",
            "name": "_seg_60",
            "args": [],
            "lineno": 6251
        },
        {
            "type": "function",
            "name": "_seg_61",
            "args": [],
            "lineno": 6355
        },
        {
            "type": "function",
            "name": "_seg_62",
            "args": [],
            "lineno": 6459
        },
        {
            "type": "function",
            "name": "_seg_63",
            "args": [],
            "lineno": 6563
        },
        {
            "type": "function",
            "name": "_seg_64",
            "args": [],
            "lineno": 6667
        },
        {
            "type": "function",
            "name": "_seg_65",
            "args": [],
            "lineno": 6771
        },
        {
            "type": "function",
            "name": "_seg_66",
            "args": [],
            "lineno": 6875
        },
        {
            "type": "function",
            "name": "_seg_67",
            "args": [],
            "lineno": 6979
        },
        {
            "type": "function",
            "name": "_seg_68",
            "args": [],
            "lineno": 7083
        },
        {
            "type": "function",
            "name": "_seg_69",
            "args": [],
            "lineno": 7187
        },
        {
            "type": "function",
            "name": "_seg_70",
            "args": [],
            "lineno": 7291
        },
        {
            "type": "function",
            "name": "_seg_71",
            "args": [],
            "lineno": 7395
        },
        {
            "type": "function",
            "name": "_seg_72",
            "args": [],
            "lineno": 7499
        },
        {
            "type": "function",
            "name": "_seg_73",
            "args": [],
            "lineno": 7603
        },
        {
            "type": "function",
            "name": "_seg_74",
            "args": [],
            "lineno": 7707
        },
        {
            "type": "function",
            "name": "_seg_75",
            "args": [],
            "lineno": 7811
        },
        {
            "type": "function",
            "name": "_seg_76",
            "args": [],
            "lineno": 7915
        },
        {
            "type": "function",
            "name": "_seg_77",
            "args": [],
            "lineno": 8019
        },
        {
            "type": "function",
            "name": "_seg_78",
            "args": [],
            "lineno": 8123
        },
        {
            "type": "function",
            "name": "_seg_79",
            "args": [],
            "lineno": 8227
        },
        {
            "type": "function",
            "name": "_seg_80",
            "args": [],
            "lineno": 8331
        },
        {
            "type": "function",
            "name": "_seg_81",
            "args": [],
            "lineno": 8435
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/idna/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/msgpack/exceptions.py": [
        {
            "type": "class",
            "name": "UnpackException",
            "methods": null,
            "lineno": 1
        },
        {
            "type": "class",
            "name": "BufferFull",
            "methods": null,
            "lineno": 10
        },
        {
            "type": "class",
            "name": "OutOfData",
            "methods": null,
            "lineno": 14
        },
        {
            "type": "class",
            "name": "FormatError",
            "methods": null,
            "lineno": 18
        },
        {
            "type": "class",
            "name": "StackError",
            "methods": null,
            "lineno": 22
        },
        {
            "type": "class",
            "name": "ExtraData",
            "methods": [
                "Method `__init__` (line 37)",
                "Method `__str__` (line 41)"
            ],
            "lineno": 30
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "unpacked",
                "extra"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 41
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/msgpack/ext.py": [
        {
            "type": "class",
            "name": "ExtType",
            "methods": [
                "Method `__new__` (line 24)"
            ],
            "lineno": 21
        },
        {
            "type": "class",
            "name": "Timestamp",
            "methods": [
                "Method `__init__` (line 45)",
                "Method `__repr__` (line 69)",
                "Method `__eq__` (line 75)",
                "Method `__ne__` (line 83)",
                "Method `__hash__` (line 87)",
                "Method `from_bytes` (line 91)",
                "Method `to_bytes` (line 117)",
                "Method `from_unix` (line 139)",
                "Method `to_unix` (line 149)",
                "Method `from_unix_nano` (line 158)",
                "Method `to_unix_nano` (line 166)",
                "Method `to_datetime` (line 174)",
                "Method `from_datetime` (line 186)"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "code",
                "data"
            ],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "seconds",
                "nanoseconds"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 69
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "__ne__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "from_bytes",
            "args": [
                "b"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "to_bytes",
            "args": [
                "self"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "from_unix",
            "args": [
                "unix_sec"
            ],
            "lineno": 139
        },
        {
            "type": "function",
            "name": "to_unix",
            "args": [
                "self"
            ],
            "lineno": 149
        },
        {
            "type": "function",
            "name": "from_unix_nano",
            "args": [
                "unix_ns"
            ],
            "lineno": 158
        },
        {
            "type": "function",
            "name": "to_unix_nano",
            "args": [
                "self"
            ],
            "lineno": 166
        },
        {
            "type": "function",
            "name": "to_datetime",
            "args": [
                "self"
            ],
            "lineno": 174
        },
        {
            "type": "function",
            "name": "from_datetime",
            "args": [
                "dt"
            ],
            "lineno": 186
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/msgpack/fallback.py": [
        {
            "type": "function",
            "name": "_check_type_strict",
            "args": [
                "obj",
                "t",
                "type",
                "tuple"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "_get_data_from_buffer",
            "args": [
                "obj"
            ],
            "lineno": 103
        },
        {
            "type": "function",
            "name": "unpackb",
            "args": [
                "packed",
                "**kwargs"
            ],
            "lineno": 110
        },
        {
            "type": "class",
            "name": "Unpacker",
            "methods": [
                "Method `__init__` (line 275)",
                "Method `feed` (line 368)",
                "Method `_consume` (line 383)",
                "Method `_got_extradata` (line 388)",
                "Method `_get_extradata` (line 391)",
                "Method `read_bytes` (line 394)",
                "Method `_read` (line 399)",
                "Method `_reserve` (line 407)",
                "Method `_read_header` (line 441)",
                "Method `_unpack` (line 543)",
                "Method `__iter__` (line 620)",
                "Method `__next__` (line 623)",
                "Method `skip` (line 636)",
                "Method `unpack` (line 640)",
                "Method `read_array_header` (line 648)",
                "Method `read_map_header` (line 653)",
                "Method `tell` (line 658)"
            ],
            "lineno": 179
        },
        {
            "type": "class",
            "name": "Packer",
            "methods": [
                "Method `__init__` (line 731)",
                "Method `_pack` (line 755)",
                "Method `pack` (line 881)",
                "Method `pack_map_pairs` (line 892)",
                "Method `pack_array_header` (line 899)",
                "Method `pack_map_header` (line 908)",
                "Method `pack_ext_type` (line 917)",
                "Method `_pack_array_header` (line 946)",
                "Method `_pack_map_header` (line 955)",
                "Method `_pack_map_pairs` (line 964)",
                "Method `_pack_raw_header` (line 970)",
                "Method `_pack_bin_header` (line 982)",
                "Method `bytes` (line 994)",
                "Method `reset` (line 998)",
                "Method `getbuffer` (line 1005)"
            ],
            "lineno": 662
        },
        {
            "type": "function",
            "name": "dict_iteritems",
            "args": [
                "d"
            ],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "dict_iteritems",
            "args": [
                "d"
            ],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "_is_recursionerror",
            "args": [
                "e"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "_is_recursionerror",
            "args": [
                "e"
            ],
            "lineno": 36
        },
        {
            "type": "class",
            "name": "StringIO",
            "methods": [
                "Method `__init__` (line 52)",
                "Method `write` (line 59)",
                "Method `getvalue` (line 66)"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "_unpack_from",
            "args": [
                "f",
                "b",
                "o"
            ],
            "lineno": 139
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "file_like",
                "read_size",
                "use_list",
                "raw",
                "timestamp",
                "strict_map_key",
                "object_hook",
                "object_pairs_hook",
                "list_hook",
                "unicode_errors",
                "max_buffer_size",
                "ext_hook",
                "max_str_len",
                "max_bin_len",
                "max_array_len",
                "max_map_len",
                "max_ext_len"
            ],
            "lineno": 275
        },
        {
            "type": "function",
            "name": "feed",
            "args": [
                "self",
                "next_bytes"
            ],
            "lineno": 368
        },
        {
            "type": "function",
            "name": "_consume",
            "args": [
                "self"
            ],
            "lineno": 383
        },
        {
            "type": "function",
            "name": "_got_extradata",
            "args": [
                "self"
            ],
            "lineno": 388
        },
        {
            "type": "function",
            "name": "_get_extradata",
            "args": [
                "self"
            ],
            "lineno": 391
        },
        {
            "type": "function",
            "name": "read_bytes",
            "args": [
                "self",
                "n"
            ],
            "lineno": 394
        },
        {
            "type": "function",
            "name": "_read",
            "args": [
                "self",
                "n",
                "raise_outofdata"
            ],
            "lineno": 399
        },
        {
            "type": "function",
            "name": "_reserve",
            "args": [
                "self",
                "n",
                "raise_outofdata"
            ],
            "lineno": 407
        },
        {
            "type": "function",
            "name": "_read_header",
            "args": [
                "self"
            ],
            "lineno": 441
        },
        {
            "type": "function",
            "name": "_unpack",
            "args": [
                "self",
                "execute"
            ],
            "lineno": 543
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 620
        },
        {
            "type": "function",
            "name": "__next__",
            "args": [
                "self"
            ],
            "lineno": 623
        },
        {
            "type": "function",
            "name": "skip",
            "args": [
                "self"
            ],
            "lineno": 636
        },
        {
            "type": "function",
            "name": "unpack",
            "args": [
                "self"
            ],
            "lineno": 640
        },
        {
            "type": "function",
            "name": "read_array_header",
            "args": [
                "self"
            ],
            "lineno": 648
        },
        {
            "type": "function",
            "name": "read_map_header",
            "args": [
                "self"
            ],
            "lineno": 653
        },
        {
            "type": "function",
            "name": "tell",
            "args": [
                "self"
            ],
            "lineno": 658
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "default",
                "use_single_float",
                "autoreset",
                "use_bin_type",
                "strict_types",
                "datetime",
                "unicode_errors"
            ],
            "lineno": 731
        },
        {
            "type": "function",
            "name": "_pack",
            "args": [
                "self",
                "obj",
                "nest_limit",
                "check",
                "check_type_strict"
            ],
            "lineno": 755
        },
        {
            "type": "function",
            "name": "pack",
            "args": [
                "self",
                "obj"
            ],
            "lineno": 881
        },
        {
            "type": "function",
            "name": "pack_map_pairs",
            "args": [
                "self",
                "pairs"
            ],
            "lineno": 892
        },
        {
            "type": "function",
            "name": "pack_array_header",
            "args": [
                "self",
                "n"
            ],
            "lineno": 899
        },
        {
            "type": "function",
            "name": "pack_map_header",
            "args": [
                "self",
                "n"
            ],
            "lineno": 908
        },
        {
            "type": "function",
            "name": "pack_ext_type",
            "args": [
                "self",
                "typecode",
                "data"
            ],
            "lineno": 917
        },
        {
            "type": "function",
            "name": "_pack_array_header",
            "args": [
                "self",
                "n"
            ],
            "lineno": 946
        },
        {
            "type": "function",
            "name": "_pack_map_header",
            "args": [
                "self",
                "n"
            ],
            "lineno": 955
        },
        {
            "type": "function",
            "name": "_pack_map_pairs",
            "args": [
                "self",
                "n",
                "pairs",
                "nest_limit"
            ],
            "lineno": 964
        },
        {
            "type": "function",
            "name": "_pack_raw_header",
            "args": [
                "self",
                "n"
            ],
            "lineno": 970
        },
        {
            "type": "function",
            "name": "_pack_bin_header",
            "args": [
                "self",
                "n"
            ],
            "lineno": 982
        },
        {
            "type": "function",
            "name": "bytes",
            "args": [
                "self"
            ],
            "lineno": 994
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 998
        },
        {
            "type": "function",
            "name": "getbuffer",
            "args": [
                "self"
            ],
            "lineno": 1005
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "s"
            ],
            "lineno": 52
        },
        {
            "type": "function",
            "name": "write",
            "args": [
                "self",
                "s"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "getvalue",
            "args": [
                "self"
            ],
            "lineno": 66
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/msgpack/__init__.py": [
        {
            "type": "function",
            "name": "pack",
            "args": [
                "o",
                "stream",
                "**kwargs"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "packb",
            "args": [
                "o",
                "**kwargs"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "unpack",
            "args": [
                "stream",
                "**kwargs"
            ],
            "lineno": 41
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/packaging/markers.py": [
        {
            "type": "class",
            "name": "InvalidMarker",
            "methods": null,
            "lineno": 36
        },
        {
            "type": "class",
            "name": "UndefinedComparison",
            "methods": null,
            "lineno": 42
        },
        {
            "type": "class",
            "name": "UndefinedEnvironmentName",
            "methods": null,
            "lineno": 48
        },
        {
            "type": "class",
            "name": "Node",
            "methods": [
                "Method `__init__` (line 56)",
                "Method `__str__` (line 59)",
                "Method `__repr__` (line 62)",
                "Method `serialize` (line 65)"
            ],
            "lineno": 55
        },
        {
            "type": "class",
            "name": "Variable",
            "methods": [
                "Method `serialize` (line 70)"
            ],
            "lineno": 69
        },
        {
            "type": "class",
            "name": "Value",
            "methods": [
                "Method `serialize` (line 75)"
            ],
            "lineno": 74
        },
        {
            "type": "class",
            "name": "Op",
            "methods": [
                "Method `serialize` (line 80)"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "_coerce_parse_result",
            "args": [
                "results"
            ],
            "lineno": 141
        },
        {
            "type": "function",
            "name": "_format_marker",
            "args": [
                "marker",
                "first"
            ],
            "lineno": 148
        },
        {
            "type": "function",
            "name": "_eval_op",
            "args": [
                "lhs",
                "op",
                "rhs"
            ],
            "lineno": 189
        },
        {
            "type": "class",
            "name": "Undefined",
            "methods": null,
            "lineno": 204
        },
        {
            "type": "function",
            "name": "_get_env",
            "args": [
                "environment",
                "name"
            ],
            "lineno": 211
        },
        {
            "type": "function",
            "name": "_evaluate_markers",
            "args": [
                "markers",
                "environment"
            ],
            "lineno": 222
        },
        {
            "type": "function",
            "name": "format_full_version",
            "args": [
                "info"
            ],
            "lineno": 249
        },
        {
            "type": "function",
            "name": "default_environment",
            "args": [],
            "lineno": 257
        },
        {
            "type": "class",
            "name": "Marker",
            "methods": [
                "Method `__init__` (line 276)",
                "Method `__str__` (line 285)",
                "Method `__repr__` (line 288)",
                "Method `evaluate` (line 291)"
            ],
            "lineno": 275
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "value"
            ],
            "lineno": 56
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "serialize",
            "args": [
                "self"
            ],
            "lineno": 65
        },
        {
            "type": "function",
            "name": "serialize",
            "args": [
                "self"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "serialize",
            "args": [
                "self"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "serialize",
            "args": [
                "self"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "marker"
            ],
            "lineno": 276
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 285
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 288
        },
        {
            "type": "function",
            "name": "evaluate",
            "args": [
                "self",
                "environment"
            ],
            "lineno": 291
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/packaging/requirements.py": [
        {
            "type": "class",
            "name": "InvalidRequirement",
            "methods": null,
            "lineno": 27
        },
        {
            "type": "class",
            "name": "Requirement",
            "methods": [
                "Method `__init__` (line 100)",
                "Method `__str__` (line 125)",
                "Method `__repr__` (line 145)"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "requirement_string"
            ],
            "lineno": 100
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 125
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 145
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/packaging/specifiers.py": [
        {
            "type": "class",
            "name": "InvalidSpecifier",
            "methods": null,
            "lineno": 33
        },
        {
            "type": "class",
            "name": "BaseSpecifier",
            "methods": [
                "Method `__str__` (line 41)",
                "Method `__hash__` (line 48)",
                "Method `__eq__` (line 54)",
                "Method `prereleases` (line 61)",
                "Method `prereleases` (line 68)",
                "Method `contains` (line 75)",
                "Method `filter` (line 81)"
            ],
            "lineno": 39
        },
        {
            "type": "class",
            "name": "_IndividualSpecifier",
            "methods": [
                "Method `__init__` (line 95)",
                "Method `__repr__` (line 108)",
                "Method `__str__` (line 117)",
                "Method `_canonical_spec` (line 121)",
                "Method `__hash__` (line 124)",
                "Method `__eq__` (line 127)",
                "Method `_get_operator` (line 138)",
                "Method `_coerce_version` (line 144)",
                "Method `operator` (line 150)",
                "Method `version` (line 154)",
                "Method `prereleases` (line 158)",
                "Method `prereleases` (line 162)",
                "Method `__contains__` (line 165)",
                "Method `contains` (line 168)",
                "Method `filter` (line 191)"
            ],
            "lineno": 90
        },
        {
            "type": "class",
            "name": "LegacySpecifier",
            "methods": [
                "Method `__init__` (line 252)",
                "Method `_coerce_version` (line 261)",
                "Method `_compare_equal` (line 266)",
                "Method `_compare_not_equal` (line 269)",
                "Method `_compare_less_than_equal` (line 272)",
                "Method `_compare_greater_than_equal` (line 275)",
                "Method `_compare_less_than` (line 280)",
                "Method `_compare_greater_than` (line 283)"
            ],
            "lineno": 227
        },
        {
            "type": "function",
            "name": "_require_version_compare",
            "args": [
                "fn"
            ],
            "lineno": 287
        },
        {
            "type": "class",
            "name": "Specifier",
            "methods": [
                "Method `_compare_compatible` (line 408)",
                "Method `_compare_equal` (line 430)",
                "Method `_compare_not_equal` (line 470)",
                "Method `_compare_less_than_equal` (line 474)",
                "Method `_compare_greater_than_equal` (line 482)",
                "Method `_compare_less_than` (line 492)",
                "Method `_compare_greater_than` (line 518)",
                "Method `_compare_arbitrary` (line 549)",
                "Method `prereleases` (line 553)",
                "Method `prereleases` (line 578)"
            ],
            "lineno": 299
        },
        {
            "type": "function",
            "name": "_version_split",
            "args": [
                "version"
            ],
            "lineno": 585
        },
        {
            "type": "function",
            "name": "_is_not_suffix",
            "args": [
                "segment"
            ],
            "lineno": 596
        },
        {
            "type": "function",
            "name": "_pad_version",
            "args": [
                "left",
                "right"
            ],
            "lineno": 602
        },
        {
            "type": "class",
            "name": "SpecifierSet",
            "methods": [
                "Method `__init__` (line 621)",
                "Method `__repr__` (line 645)",
                "Method `__str__` (line 654)",
                "Method `__hash__` (line 657)",
                "Method `__and__` (line 660)",
                "Method `__eq__` (line 683)",
                "Method `__len__` (line 691)",
                "Method `__iter__` (line 694)",
                "Method `prereleases` (line 698)",
                "Method `prereleases` (line 716)",
                "Method `__contains__` (line 719)",
                "Method `contains` (line 722)",
                "Method `filter` (line 751)"
            ],
            "lineno": 620
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "prereleases",
            "args": [
                "self"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "prereleases",
            "args": [
                "self",
                "value"
            ],
            "lineno": 68
        },
        {
            "type": "function",
            "name": "contains",
            "args": [
                "self",
                "item",
                "prereleases"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "iterable",
                "prereleases"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "spec",
                "prereleases"
            ],
            "lineno": 95
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 108
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "_canonical_spec",
            "args": [
                "self"
            ],
            "lineno": 121
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 127
        },
        {
            "type": "function",
            "name": "_get_operator",
            "args": [
                "self",
                "op"
            ],
            "lineno": 138
        },
        {
            "type": "function",
            "name": "_coerce_version",
            "args": [
                "self",
                "version"
            ],
            "lineno": 144
        },
        {
            "type": "function",
            "name": "operator",
            "args": [
                "self"
            ],
            "lineno": 150
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "self"
            ],
            "lineno": 154
        },
        {
            "type": "function",
            "name": "prereleases",
            "args": [
                "self"
            ],
            "lineno": 158
        },
        {
            "type": "function",
            "name": "prereleases",
            "args": [
                "self",
                "value"
            ],
            "lineno": 162
        },
        {
            "type": "function",
            "name": "__contains__",
            "args": [
                "self",
                "item"
            ],
            "lineno": 165
        },
        {
            "type": "function",
            "name": "contains",
            "args": [
                "self",
                "item",
                "prereleases"
            ],
            "lineno": 168
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "iterable",
                "prereleases"
            ],
            "lineno": 191
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "spec",
                "prereleases"
            ],
            "lineno": 252
        },
        {
            "type": "function",
            "name": "_coerce_version",
            "args": [
                "self",
                "version"
            ],
            "lineno": 261
        },
        {
            "type": "function",
            "name": "_compare_equal",
            "args": [
                "self",
                "prospective",
                "spec"
            ],
            "lineno": 266
        },
        {
            "type": "function",
            "name": "_compare_not_equal",
            "args": [
                "self",
                "prospective",
                "spec"
            ],
            "lineno": 269
        },
        {
            "type": "function",
            "name": "_compare_less_than_equal",
            "args": [
                "self",
                "prospective",
                "spec"
            ],
            "lineno": 272
        },
        {
            "type": "function",
            "name": "_compare_greater_than_equal",
            "args": [
                "self",
                "prospective",
                "spec"
            ],
            "lineno": 275
        },
        {
            "type": "function",
            "name": "_compare_less_than",
            "args": [
                "self",
                "prospective",
                "spec"
            ],
            "lineno": 280
        },
        {
            "type": "function",
            "name": "_compare_greater_than",
            "args": [
                "self",
                "prospective",
                "spec"
            ],
            "lineno": 283
        },
        {
            "type": "function",
            "name": "wrapped",
            "args": [
                "self",
                "prospective",
                "spec"
            ],
            "lineno": 291
        },
        {
            "type": "function",
            "name": "_compare_compatible",
            "args": [
                "self",
                "prospective",
                "spec"
            ],
            "lineno": 408
        },
        {
            "type": "function",
            "name": "_compare_equal",
            "args": [
                "self",
                "prospective",
                "spec"
            ],
            "lineno": 430
        },
        {
            "type": "function",
            "name": "_compare_not_equal",
            "args": [
                "self",
                "prospective",
                "spec"
            ],
            "lineno": 470
        },
        {
            "type": "function",
            "name": "_compare_less_than_equal",
            "args": [
                "self",
                "prospective",
                "spec"
            ],
            "lineno": 474
        },
        {
            "type": "function",
            "name": "_compare_greater_than_equal",
            "args": [
                "self",
                "prospective",
                "spec"
            ],
            "lineno": 482
        },
        {
            "type": "function",
            "name": "_compare_less_than",
            "args": [
                "self",
                "prospective",
                "spec_str"
            ],
            "lineno": 492
        },
        {
            "type": "function",
            "name": "_compare_greater_than",
            "args": [
                "self",
                "prospective",
                "spec_str"
            ],
            "lineno": 518
        },
        {
            "type": "function",
            "name": "_compare_arbitrary",
            "args": [
                "self",
                "prospective",
                "spec"
            ],
            "lineno": 549
        },
        {
            "type": "function",
            "name": "prereleases",
            "args": [
                "self"
            ],
            "lineno": 553
        },
        {
            "type": "function",
            "name": "prereleases",
            "args": [
                "self",
                "value"
            ],
            "lineno": 578
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "specifiers",
                "prereleases"
            ],
            "lineno": 621
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 645
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 654
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 657
        },
        {
            "type": "function",
            "name": "__and__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 660
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 683
        },
        {
            "type": "function",
            "name": "__len__",
            "args": [
                "self"
            ],
            "lineno": 691
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 694
        },
        {
            "type": "function",
            "name": "prereleases",
            "args": [
                "self"
            ],
            "lineno": 698
        },
        {
            "type": "function",
            "name": "prereleases",
            "args": [
                "self",
                "value"
            ],
            "lineno": 716
        },
        {
            "type": "function",
            "name": "__contains__",
            "args": [
                "self",
                "item"
            ],
            "lineno": 719
        },
        {
            "type": "function",
            "name": "contains",
            "args": [
                "self",
                "item",
                "prereleases"
            ],
            "lineno": 722
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "iterable",
                "prereleases"
            ],
            "lineno": 751
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/packaging/tags.py": [
        {
            "type": "class",
            "name": "Tag",
            "methods": [
                "Method `__init__` (line 52)",
                "Method `interpreter` (line 64)",
                "Method `abi` (line 68)",
                "Method `platform` (line 72)",
                "Method `__eq__` (line 75)",
                "Method `__hash__` (line 86)",
                "Method `__str__` (line 89)",
                "Method `__repr__` (line 92)"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "parse_tag",
            "args": [
                "tag"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "_get_config_var",
            "args": [
                "name",
                "warn"
            ],
            "lineno": 112
        },
        {
            "type": "function",
            "name": "_normalize_string",
            "args": [
                "string"
            ],
            "lineno": 121
        },
        {
            "type": "function",
            "name": "_abi3_applies",
            "args": [
                "python_version"
            ],
            "lineno": 125
        },
        {
            "type": "function",
            "name": "_cpython_abis",
            "args": [
                "py_version",
                "warn"
            ],
            "lineno": 134
        },
        {
            "type": "function",
            "name": "cpython_tags",
            "args": [
                "python_version",
                "abis",
                "platforms"
            ],
            "lineno": 170
        },
        {
            "type": "function",
            "name": "_generic_abi",
            "args": [],
            "lineno": 227
        },
        {
            "type": "function",
            "name": "generic_tags",
            "args": [
                "interpreter",
                "abis",
                "platforms"
            ],
            "lineno": 233
        },
        {
            "type": "function",
            "name": "_py_interpreter_range",
            "args": [
                "py_version"
            ],
            "lineno": 263
        },
        {
            "type": "function",
            "name": "compatible_tags",
            "args": [
                "python_version",
                "interpreter",
                "platforms"
            ],
            "lineno": 278
        },
        {
            "type": "function",
            "name": "_mac_arch",
            "args": [
                "arch",
                "is_32bit"
            ],
            "lineno": 303
        },
        {
            "type": "function",
            "name": "_mac_binary_formats",
            "args": [
                "version",
                "cpu_arch"
            ],
            "lineno": 313
        },
        {
            "type": "function",
            "name": "mac_platforms",
            "args": [
                "version",
                "arch"
            ],
            "lineno": 345
        },
        {
            "type": "function",
            "name": "_linux_platforms",
            "args": [
                "is_32bit"
            ],
            "lineno": 417
        },
        {
            "type": "function",
            "name": "_generic_platforms",
            "args": [],
            "lineno": 430
        },
        {
            "type": "function",
            "name": "platform_tags",
            "args": [],
            "lineno": 434
        },
        {
            "type": "function",
            "name": "interpreter_name",
            "args": [],
            "lineno": 446
        },
        {
            "type": "function",
            "name": "interpreter_version",
            "args": [],
            "lineno": 454
        },
        {
            "type": "function",
            "name": "_version_nodot",
            "args": [
                "version"
            ],
            "lineno": 466
        },
        {
            "type": "function",
            "name": "sys_tags",
            "args": [],
            "lineno": 470
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "interpreter",
                "abi",
                "platform"
            ],
            "lineno": 52
        },
        {
            "type": "function",
            "name": "interpreter",
            "args": [
                "self"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "abi",
            "args": [
                "self"
            ],
            "lineno": 68
        },
        {
            "type": "function",
            "name": "platform",
            "args": [
                "self"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 92
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/packaging/utils.py": [
        {
            "type": "class",
            "name": "InvalidWheelFilename",
            "methods": null,
            "lineno": 15
        },
        {
            "type": "class",
            "name": "InvalidSdistFilename",
            "methods": null,
            "lineno": 21
        },
        {
            "type": "function",
            "name": "canonicalize_name",
            "args": [
                "name"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "canonicalize_version",
            "args": [
                "version"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "parse_wheel_filename",
            "args": [
                "filename"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "parse_sdist_filename",
            "args": [
                "filename"
            ],
            "lineno": 117
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/packaging/version.py": [
        {
            "type": "function",
            "name": "parse",
            "args": [
                "version"
            ],
            "lineno": 42
        },
        {
            "type": "class",
            "name": "InvalidVersion",
            "methods": null,
            "lineno": 54
        },
        {
            "type": "class",
            "name": "_BaseVersion",
            "methods": [
                "Method `__hash__` (line 63)",
                "Method `__lt__` (line 69)",
                "Method `__le__` (line 75)",
                "Method `__eq__` (line 81)",
                "Method `__ge__` (line 87)",
                "Method `__gt__` (line 93)",
                "Method `__ne__` (line 99)"
            ],
            "lineno": 60
        },
        {
            "type": "class",
            "name": "LegacyVersion",
            "methods": [
                "Method `__init__` (line 107)",
                "Method `__str__` (line 117)",
                "Method `__repr__` (line 120)",
                "Method `public` (line 124)",
                "Method `base_version` (line 128)",
                "Method `epoch` (line 132)",
                "Method `release` (line 136)",
                "Method `pre` (line 140)",
                "Method `post` (line 144)",
                "Method `dev` (line 148)",
                "Method `local` (line 152)",
                "Method `is_prerelease` (line 156)",
                "Method `is_postrelease` (line 160)",
                "Method `is_devrelease` (line 164)"
            ],
            "lineno": 106
        },
        {
            "type": "function",
            "name": "_parse_version_parts",
            "args": [
                "s"
            ],
            "lineno": 179
        },
        {
            "type": "function",
            "name": "_legacy_cmpkey",
            "args": [
                "version"
            ],
            "lineno": 196
        },
        {
            "type": "class",
            "name": "Version",
            "methods": [
                "Method `__init__` (line 261)",
                "Method `__repr__` (line 290)",
                "Method `__str__` (line 293)",
                "Method `epoch` (line 322)",
                "Method `release` (line 327)",
                "Method `pre` (line 332)",
                "Method `post` (line 337)",
                "Method `dev` (line 341)",
                "Method `local` (line 345)",
                "Method `public` (line 352)",
                "Method `base_version` (line 356)",
                "Method `is_prerelease` (line 369)",
                "Method `is_postrelease` (line 373)",
                "Method `is_devrelease` (line 377)",
                "Method `major` (line 381)",
                "Method `minor` (line 385)",
                "Method `micro` (line 389)"
            ],
            "lineno": 257
        },
        {
            "type": "function",
            "name": "_parse_letter_version",
            "args": [
                "letter",
                "number"
            ],
            "lineno": 393
        },
        {
            "type": "function",
            "name": "_parse_local_version",
            "args": [
                "local"
            ],
            "lineno": 432
        },
        {
            "type": "function",
            "name": "_cmpkey",
            "args": [
                "epoch",
                "release",
                "pre",
                "post",
                "dev",
                "local"
            ],
            "lineno": 444
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 63
        },
        {
            "type": "function",
            "name": "__lt__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 69
        },
        {
            "type": "function",
            "name": "__le__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "__ge__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "__gt__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "__ne__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 99
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "version"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 120
        },
        {
            "type": "function",
            "name": "public",
            "args": [
                "self"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "base_version",
            "args": [
                "self"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "epoch",
            "args": [
                "self"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "release",
            "args": [
                "self"
            ],
            "lineno": 136
        },
        {
            "type": "function",
            "name": "pre",
            "args": [
                "self"
            ],
            "lineno": 140
        },
        {
            "type": "function",
            "name": "post",
            "args": [
                "self"
            ],
            "lineno": 144
        },
        {
            "type": "function",
            "name": "dev",
            "args": [
                "self"
            ],
            "lineno": 148
        },
        {
            "type": "function",
            "name": "local",
            "args": [
                "self"
            ],
            "lineno": 152
        },
        {
            "type": "function",
            "name": "is_prerelease",
            "args": [
                "self"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "is_postrelease",
            "args": [
                "self"
            ],
            "lineno": 160
        },
        {
            "type": "function",
            "name": "is_devrelease",
            "args": [
                "self"
            ],
            "lineno": 164
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "version"
            ],
            "lineno": 261
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 290
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 293
        },
        {
            "type": "function",
            "name": "epoch",
            "args": [
                "self"
            ],
            "lineno": 322
        },
        {
            "type": "function",
            "name": "release",
            "args": [
                "self"
            ],
            "lineno": 327
        },
        {
            "type": "function",
            "name": "pre",
            "args": [
                "self"
            ],
            "lineno": 332
        },
        {
            "type": "function",
            "name": "post",
            "args": [
                "self"
            ],
            "lineno": 337
        },
        {
            "type": "function",
            "name": "dev",
            "args": [
                "self"
            ],
            "lineno": 341
        },
        {
            "type": "function",
            "name": "local",
            "args": [
                "self"
            ],
            "lineno": 345
        },
        {
            "type": "function",
            "name": "public",
            "args": [
                "self"
            ],
            "lineno": 352
        },
        {
            "type": "function",
            "name": "base_version",
            "args": [
                "self"
            ],
            "lineno": 356
        },
        {
            "type": "function",
            "name": "is_prerelease",
            "args": [
                "self"
            ],
            "lineno": 369
        },
        {
            "type": "function",
            "name": "is_postrelease",
            "args": [
                "self"
            ],
            "lineno": 373
        },
        {
            "type": "function",
            "name": "is_devrelease",
            "args": [
                "self"
            ],
            "lineno": 377
        },
        {
            "type": "function",
            "name": "major",
            "args": [
                "self"
            ],
            "lineno": 381
        },
        {
            "type": "function",
            "name": "minor",
            "args": [
                "self"
            ],
            "lineno": 385
        },
        {
            "type": "function",
            "name": "micro",
            "args": [
                "self"
            ],
            "lineno": 389
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/packaging/_manylinux.py": [
        {
            "type": "class",
            "name": "_ELFFileHeader",
            "methods": [
                "Method `__init__` (line 35)"
            ],
            "lineno": 15
        },
        {
            "type": "function",
            "name": "_get_elf_header",
            "args": [],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "_is_linux_armhf",
            "args": [],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "_is_linux_i686",
            "args": [],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "_have_compatible_abi",
            "args": [
                "arch"
            ],
            "lineno": 114
        },
        {
            "type": "class",
            "name": "_GLibCVersion",
            "methods": null,
            "lineno": 130
        },
        {
            "type": "function",
            "name": "_glibc_version_string_confstr",
            "args": [],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "_glibc_version_string_ctypes",
            "args": [],
            "lineno": 154
        },
        {
            "type": "function",
            "name": "_glibc_version_string",
            "args": [],
            "lineno": 198
        },
        {
            "type": "function",
            "name": "_parse_glibc_version",
            "args": [
                "version_str"
            ],
            "lineno": 203
        },
        {
            "type": "function",
            "name": "_get_glibc_version",
            "args": [],
            "lineno": 223
        },
        {
            "type": "function",
            "name": "_is_compatible",
            "args": [
                "name",
                "arch",
                "version"
            ],
            "lineno": 231
        },
        {
            "type": "function",
            "name": "platform_tags",
            "args": [
                "linux",
                "arch"
            ],
            "lineno": 267
        },
        {
            "type": "class",
            "name": "_InvalidELFFileHeader",
            "methods": null,
            "lineno": 17
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "file"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "unpack",
            "args": [
                "fmt"
            ],
            "lineno": 36
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/packaging/_musllinux.py": [
        {
            "type": "function",
            "name": "_read_unpacked",
            "args": [
                "f",
                "fmt"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "_parse_ld_musl_from_elf",
            "args": [
                "f"
            ],
            "lineno": 22
        },
        {
            "type": "class",
            "name": "_MuslVersion",
            "methods": null,
            "lineno": 71
        },
        {
            "type": "function",
            "name": "_parse_musl_version",
            "args": [
                "output"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "_get_musl_version",
            "args": [
                "executable"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "platform_tags",
            "args": [
                "arch"
            ],
            "lineno": 110
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/packaging/_structures.py": [
        {
            "type": "class",
            "name": "InfinityType",
            "methods": [
                "Method `__repr__` (line 7)",
                "Method `__hash__` (line 10)",
                "Method `__lt__` (line 13)",
                "Method `__le__` (line 16)",
                "Method `__eq__` (line 19)",
                "Method `__gt__` (line 22)",
                "Method `__ge__` (line 25)",
                "Method `__neg__` (line 28)"
            ],
            "lineno": 6
        },
        {
            "type": "class",
            "name": "NegativeInfinityType",
            "methods": [
                "Method `__repr__` (line 36)",
                "Method `__hash__` (line 39)",
                "Method `__lt__` (line 42)",
                "Method `__le__` (line 45)",
                "Method `__eq__` (line 48)",
                "Method `__gt__` (line 51)",
                "Method `__ge__` (line 54)",
                "Method `__neg__` (line 57)"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 7
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 10
        },
        {
            "type": "function",
            "name": "__lt__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 13
        },
        {
            "type": "function",
            "name": "__le__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "__gt__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "__ge__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "__neg__",
            "args": [
                "self"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "__lt__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "__le__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "__gt__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "__ge__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "__neg__",
            "args": [
                "self"
            ],
            "lineno": 57
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/packaging/__about__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/packaging/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pkg_resources/__init__.py": [
        {
            "type": "class",
            "name": "PEP440Warning",
            "methods": null,
            "lineno": 129
        },
        {
            "type": "function",
            "name": "_declare_state",
            "args": [
                "vartype",
                "**kw"
            ],
            "lineno": 142
        },
        {
            "type": "function",
            "name": "__getstate__",
            "args": [],
            "lineno": 147
        },
        {
            "type": "function",
            "name": "__setstate__",
            "args": [
                "state"
            ],
            "lineno": 155
        },
        {
            "type": "function",
            "name": "_sget_dict",
            "args": [
                "val"
            ],
            "lineno": 162
        },
        {
            "type": "function",
            "name": "_sset_dict",
            "args": [
                "key",
                "ob",
                "state"
            ],
            "lineno": 166
        },
        {
            "type": "function",
            "name": "_sget_object",
            "args": [
                "val"
            ],
            "lineno": 171
        },
        {
            "type": "function",
            "name": "_sset_object",
            "args": [
                "key",
                "ob",
                "state"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "get_supported_platform",
            "args": [],
            "lineno": 182
        },
        {
            "type": "class",
            "name": "ResolutionError",
            "methods": [
                "Method `__repr__` (line 295)"
            ],
            "lineno": 292
        },
        {
            "type": "class",
            "name": "VersionConflict",
            "methods": [
                "Method `dist` (line 310)",
                "Method `req` (line 314)",
                "Method `report` (line 317)",
                "Method `with_context` (line 320)"
            ],
            "lineno": 299
        },
        {
            "type": "class",
            "name": "ContextualVersionConflict",
            "methods": [
                "Method `required_by` (line 340)"
            ],
            "lineno": 331
        },
        {
            "type": "class",
            "name": "DistributionNotFound",
            "methods": [
                "Method `req` (line 353)",
                "Method `requirers` (line 357)",
                "Method `requirers_str` (line 361)",
                "Method `report` (line 366)",
                "Method `__str__` (line 369)"
            ],
            "lineno": 344
        },
        {
            "type": "class",
            "name": "UnknownExtra",
            "methods": null,
            "lineno": 373
        },
        {
            "type": "function",
            "name": "register_loader_type",
            "args": [
                "loader_type",
                "provider_factory"
            ],
            "lineno": 387
        },
        {
            "type": "function",
            "name": "get_provider",
            "args": [
                "moduleOrReq"
            ],
            "lineno": 397
        },
        {
            "type": "function",
            "name": "_macos_vers",
            "args": [
                "_cache"
            ],
            "lineno": 410
        },
        {
            "type": "function",
            "name": "_macos_arch",
            "args": [
                "machine"
            ],
            "lineno": 426
        },
        {
            "type": "function",
            "name": "get_build_platform",
            "args": [],
            "lineno": 430
        },
        {
            "type": "function",
            "name": "compatible_platforms",
            "args": [
                "provided",
                "required"
            ],
            "lineno": 461
        },
        {
            "type": "function",
            "name": "run_script",
            "args": [
                "dist_spec",
                "script_name"
            ],
            "lineno": 510
        },
        {
            "type": "function",
            "name": "get_distribution",
            "args": [
                "dist"
            ],
            "lineno": 523
        },
        {
            "type": "function",
            "name": "load_entry_point",
            "args": [
                "dist",
                "group",
                "name"
            ],
            "lineno": 534
        },
        {
            "type": "function",
            "name": "get_entry_map",
            "args": [
                "dist",
                "group"
            ],
            "lineno": 539
        },
        {
            "type": "function",
            "name": "get_entry_info",
            "args": [
                "dist",
                "group",
                "name"
            ],
            "lineno": 544
        },
        {
            "type": "class",
            "name": "IMetadataProvider",
            "methods": [
                "Method `has_metadata` (line 550)",
                "Method `get_metadata` (line 553)",
                "Method `get_metadata_lines` (line 556)",
                "Method `metadata_isdir` (line 562)",
                "Method `metadata_listdir` (line 565)",
                "Method `run_script` (line 568)"
            ],
            "lineno": 549
        },
        {
            "type": "class",
            "name": "IResourceProvider",
            "methods": [
                "Method `get_resource_filename` (line 575)",
                "Method `get_resource_stream` (line 580)",
                "Method `get_resource_string` (line 585)",
                "Method `has_resource` (line 590)",
                "Method `resource_isdir` (line 593)",
                "Method `resource_listdir` (line 596)"
            ],
            "lineno": 572
        },
        {
            "type": "class",
            "name": "WorkingSet",
            "methods": [
                "Method `__init__` (line 603)",
                "Method `_build_master` (line 618)",
                "Method `_build_from_requirements` (line 638)",
                "Method `add_entry` (line 659)",
                "Method `__contains__` (line 674)",
                "Method `find` (line 678)",
                "Method `iter_entry_points` (line 702)",
                "Method `run_script` (line 716)",
                "Method `__iter__` (line 724)",
                "Method `add` (line 741)",
                "Method `resolve` (line 773)",
                "Method `_resolve_dist` (line 847)",
                "Method `find_plugins` (line 878)",
                "Method `require` (line 959)",
                "Method `subscribe` (line 975)",
                "Method `_added_new` (line 989)",
                "Method `__getstate__` (line 993)",
                "Method `__setstate__` (line 1002)"
            ],
            "lineno": 600
        },
        {
            "type": "class",
            "name": "_ReqExtras",
            "methods": [
                "Method `markers_pass` (line 1016)"
            ],
            "lineno": 1011
        },
        {
            "type": "class",
            "name": "Environment",
            "methods": [
                "Method `__init__` (line 1034)",
                "Method `can_add` (line 1058)",
                "Method `remove` (line 1072)",
                "Method `scan` (line 1076)",
                "Method `__getitem__` (line 1091)",
                "Method `add` (line 1102)",
                "Method `best_match` (line 1110)",
                "Method `obtain` (line 1137)",
                "Method `__iter__` (line 1149)",
                "Method `__iadd__` (line 1155)",
                "Method `__add__` (line 1167)"
            ],
            "lineno": 1031
        },
        {
            "type": "class",
            "name": "ExtractionError",
            "methods": null,
            "lineno": 1179
        },
        {
            "type": "class",
            "name": "ResourceManager",
            "methods": [
                "Method `__init__` (line 1200)",
                "Method `resource_exists` (line 1203)",
                "Method `resource_isdir` (line 1207)",
                "Method `resource_filename` (line 1211)",
                "Method `resource_stream` (line 1217)",
                "Method `resource_string` (line 1223)",
                "Method `resource_listdir` (line 1229)",
                "Method `extraction_error` (line 1233)",
                "Method `get_cache_path` (line 1263)",
                "Method `_warn_unsafe_extraction_path` (line 1289)",
                "Method `postprocess` (line 1315)",
                "Method `set_extraction_path` (line 1335)",
                "Method `cleanup_resources` (line 1359)"
            ],
            "lineno": 1195
        },
        {
            "type": "function",
            "name": "get_default_cache",
            "args": [],
            "lineno": 1373
        },
        {
            "type": "function",
            "name": "safe_name",
            "args": [
                "name"
            ],
            "lineno": 1384
        },
        {
            "type": "function",
            "name": "safe_version",
            "args": [
                "version"
            ],
            "lineno": 1392
        },
        {
            "type": "function",
            "name": "_forgiving_version",
            "args": [
                "version"
            ],
            "lineno": 1404
        },
        {
            "type": "function",
            "name": "_safe_segment",
            "args": [
                "segment"
            ],
            "lineno": 1429
        },
        {
            "type": "function",
            "name": "safe_extra",
            "args": [
                "extra"
            ],
            "lineno": 1436
        },
        {
            "type": "function",
            "name": "to_filename",
            "args": [
                "name"
            ],
            "lineno": 1445
        },
        {
            "type": "function",
            "name": "invalid_marker",
            "args": [
                "text"
            ],
            "lineno": 1453
        },
        {
            "type": "function",
            "name": "evaluate_marker",
            "args": [
                "text",
                "extra"
            ],
            "lineno": 1467
        },
        {
            "type": "class",
            "name": "NullProvider",
            "methods": [
                "Method `__init__` (line 1489)",
                "Method `get_resource_filename` (line 1493)",
                "Method `get_resource_stream` (line 1496)",
                "Method `get_resource_string` (line 1499)",
                "Method `has_resource` (line 1502)",
                "Method `_get_metadata_path` (line 1505)",
                "Method `has_metadata` (line 1508)",
                "Method `get_metadata` (line 1515)",
                "Method `get_metadata_lines` (line 1528)",
                "Method `resource_isdir` (line 1531)",
                "Method `metadata_isdir` (line 1534)",
                "Method `resource_listdir` (line 1537)",
                "Method `metadata_listdir` (line 1540)",
                "Method `run_script` (line 1545)",
                "Method `_has` (line 1574)",
                "Method `_isdir` (line 1579)",
                "Method `_listdir` (line 1584)",
                "Method `_fn` (line 1589)",
                "Method `_validate_resource_path` (line 1596)",
                "Method `_get` (line 1669)"
            ],
            "lineno": 1482
        },
        {
            "type": "function",
            "name": "_parents",
            "args": [
                "path"
            ],
            "lineno": 1680
        },
        {
            "type": "class",
            "name": "EggProvider",
            "methods": [
                "Method `__init__` (line 1694)",
                "Method `_setup_prefix` (line 1698)",
                "Method `_set_egg` (line 1705)"
            ],
            "lineno": 1691
        },
        {
            "type": "class",
            "name": "DefaultProvider",
            "methods": [
                "Method `_has` (line 1714)",
                "Method `_isdir` (line 1717)",
                "Method `_listdir` (line 1720)",
                "Method `get_resource_stream` (line 1723)",
                "Method `_get` (line 1726)",
                "Method `_register` (line 1731)"
            ],
            "lineno": 1711
        },
        {
            "type": "class",
            "name": "EmptyProvider",
            "methods": [
                "Method `_get` (line 1751)",
                "Method `_listdir` (line 1754)",
                "Method `__init__` (line 1757)"
            ],
            "lineno": 1744
        },
        {
            "type": "class",
            "name": "ZipManifests",
            "methods": [
                "Method `build` (line 1770)"
            ],
            "lineno": 1764
        },
        {
            "type": "class",
            "name": "MemoizedZipManifests",
            "methods": [
                "Method `load` (line 1798)"
            ],
            "lineno": 1791
        },
        {
            "type": "class",
            "name": "ZipProvider",
            "methods": [
                "Method `__init__` (line 1818)",
                "Method `_zipinfo_name` (line 1822)",
                "Method `_parts` (line 1832)",
                "Method `zipinfo` (line 1841)",
                "Method `get_resource_filename` (line 1844)",
                "Method `_get_date_and_size` (line 1858)",
                "Method `_extract_resource` (line 1867)",
                "Method `_is_current` (line 1917)",
                "Method `_get_eager_resources` (line 1933)",
                "Method `_index` (line 1942)",
                "Method `_has` (line 1959)",
                "Method `_isdir` (line 1963)",
                "Method `_listdir` (line 1966)",
                "Method `_eager_to_zip` (line 1969)",
                "Method `_resource_to_zip` (line 1972)"
            ],
            "lineno": 1812
        },
        {
            "type": "class",
            "name": "FileMetadata",
            "methods": [
                "Method `__init__` (line 1991)",
                "Method `_get_metadata_path` (line 1994)",
                "Method `has_metadata` (line 1997)",
                "Method `get_metadata` (line 2000)",
                "Method `_warn_on_replacement` (line 2009)",
                "Method `get_metadata_lines` (line 2016)"
            ],
            "lineno": 1979
        },
        {
            "type": "class",
            "name": "PathMetadata",
            "methods": [
                "Method `__init__` (line 2040)"
            ],
            "lineno": 2020
        },
        {
            "type": "class",
            "name": "EggMetadata",
            "methods": [
                "Method `__init__` (line 2048)"
            ],
            "lineno": 2045
        },
        {
            "type": "function",
            "name": "register_finder",
            "args": [
                "importer_type",
                "distribution_finder"
            ],
            "lineno": 2063
        },
        {
            "type": "function",
            "name": "find_distributions",
            "args": [
                "path_item",
                "only"
            ],
            "lineno": 2073
        },
        {
            "type": "function",
            "name": "find_eggs_in_zip",
            "args": [
                "importer",
                "path_item",
                "only"
            ],
            "lineno": 2080
        },
        {
            "type": "function",
            "name": "find_nothing",
            "args": [
                "importer",
                "path_item",
                "only"
            ],
            "lineno": 2110
        },
        {
            "type": "function",
            "name": "find_on_path",
            "args": [
                "importer",
                "path_item",
                "only"
            ],
            "lineno": 2117
        },
        {
            "type": "function",
            "name": "dist_factory",
            "args": [
                "path_item",
                "entry",
                "only"
            ],
            "lineno": 2138
        },
        {
            "type": "class",
            "name": "NoDists",
            "methods": [
                "Method `__bool__` (line 2166)",
                "Method `__call__` (line 2169)"
            ],
            "lineno": 2157
        },
        {
            "type": "function",
            "name": "safe_listdir",
            "args": [
                "path"
            ],
            "lineno": 2173
        },
        {
            "type": "function",
            "name": "distributions_from_metadata",
            "args": [
                "path"
            ],
            "lineno": 2189
        },
        {
            "type": "function",
            "name": "non_empty_lines",
            "args": [
                "path"
            ],
            "lineno": 2207
        },
        {
            "type": "function",
            "name": "resolve_egg_link",
            "args": [
                "path"
            ],
            "lineno": 2218
        },
        {
            "type": "function",
            "name": "register_namespace_handler",
            "args": [
                "importer_type",
                "namespace_handler"
            ],
            "lineno": 2240
        },
        {
            "type": "function",
            "name": "_handle_ns",
            "args": [
                "packageName",
                "path_item"
            ],
            "lineno": 2258
        },
        {
            "type": "function",
            "name": "_rebuild_mod_path",
            "args": [
                "orig_path",
                "package_name",
                "module"
            ],
            "lineno": 2295
        },
        {
            "type": "function",
            "name": "declare_namespace",
            "args": [
                "packageName"
            ],
            "lineno": 2329
        },
        {
            "type": "function",
            "name": "fixup_namespace_packages",
            "args": [
                "path_item",
                "parent"
            ],
            "lineno": 2372
        },
        {
            "type": "function",
            "name": "file_ns_handler",
            "args": [
                "importer",
                "path_item",
                "packageName",
                "module"
            ],
            "lineno": 2384
        },
        {
            "type": "function",
            "name": "null_ns_handler",
            "args": [
                "importer",
                "path_item",
                "packageName",
                "module"
            ],
            "lineno": 2404
        },
        {
            "type": "function",
            "name": "normalize_path",
            "args": [
                "filename"
            ],
            "lineno": 2411
        },
        {
            "type": "function",
            "name": "_cygwin_patch",
            "args": [
                "filename"
            ],
            "lineno": 2416
        },
        {
            "type": "function",
            "name": "_normalize_cached",
            "args": [
                "filename",
                "_cache"
            ],
            "lineno": 2427
        },
        {
            "type": "function",
            "name": "_is_egg_path",
            "args": [
                "path"
            ],
            "lineno": 2435
        },
        {
            "type": "function",
            "name": "_is_zip_egg",
            "args": [
                "path"
            ],
            "lineno": 2442
        },
        {
            "type": "function",
            "name": "_is_unpacked_egg",
            "args": [
                "path"
            ],
            "lineno": 2450
        },
        {
            "type": "function",
            "name": "_set_parent_ns",
            "args": [
                "packageName"
            ],
            "lineno": 2459
        },
        {
            "type": "class",
            "name": "EntryPoint",
            "methods": [
                "Method `__init__` (line 2485)",
                "Method `__str__` (line 2494)",
                "Method `__repr__` (line 2502)",
                "Method `load` (line 2505)",
                "Method `resolve` (line 2520)",
                "Method `require` (line 2530)",
                "Method `parse` (line 2553)",
                "Method `_parse_extras` (line 2573)",
                "Method `parse_group` (line 2582)",
                "Method `parse_map` (line 2595)"
            ],
            "lineno": 2482
        },
        {
            "type": "function",
            "name": "_version_from_file",
            "args": [
                "lines"
            ],
            "lineno": 2614
        },
        {
            "type": "class",
            "name": "Distribution",
            "methods": [
                "Method `__init__` (line 2634)",
                "Method `from_location` (line 2654)",
                "Method `_reload_version` (line 2675)",
                "Method `hashcmp` (line 2679)",
                "Method `__hash__` (line 2689)",
                "Method `__lt__` (line 2692)",
                "Method `__le__` (line 2695)",
                "Method `__gt__` (line 2698)",
                "Method `__ge__` (line 2701)",
                "Method `__eq__` (line 2704)",
                "Method `__ne__` (line 2710)",
                "Method `key` (line 2718)",
                "Method `parsed_version` (line 2726)",
                "Method `_forgiving_parsed_version` (line 2740)",
                "Method `version` (line 2766)",
                "Method `_dep_map` (line 2781)",
                "Method `_filter_extras` (line 2793)",
                "Method `_build_dep_map` (line 2813)",
                "Method `requires` (line 2820)",
                "Method `_get_metadata_path_for_display` (line 2834)",
                "Method `_get_metadata` (line 2851)",
                "Method `_get_version` (line 2856)",
                "Method `activate` (line 2862)",
                "Method `egg_name` (line 2873)",
                "Method `__repr__` (line 2885)",
                "Method `__str__` (line 2891)",
                "Method `__getattr__` (line 2899)",
                "Method `__dir__` (line 2905)",
                "Method `from_filename` (line 2912)",
                "Method `as_requirement` (line 2917)",
                "Method `load_entry_point` (line 2926)",
                "Method `get_entry_map` (line 2933)",
                "Method `get_entry_info` (line 2945)",
                "Method `insert_on` (line 2950)",
                "Method `check_version_conflict` (line 3018)",
                "Method `has_version` (line 3044)",
                "Method `clone` (line 3055)",
                "Method `extras` (line 3064)"
            ],
            "lineno": 2629
        },
        {
            "type": "class",
            "name": "EggInfoDistribution",
            "methods": [
                "Method `_reload_version` (line 3069)"
            ],
            "lineno": 3068
        },
        {
            "type": "class",
            "name": "DistInfoDistribution",
            "methods": [
                "Method `_parsed_pkg_info` (line 3097)",
                "Method `_dep_map` (line 3107)",
                "Method `_compute_dependencies` (line 3114)"
            ],
            "lineno": 3087
        },
        {
            "type": "function",
            "name": "issue_warning",
            "args": [
                "*args",
                "**kw"
            ],
            "lineno": 3145
        },
        {
            "type": "function",
            "name": "parse_requirements",
            "args": [
                "strs"
            ],
            "lineno": 3158
        },
        {
            "type": "class",
            "name": "RequirementParseError",
            "methods": null,
            "lineno": 3167
        },
        {
            "type": "class",
            "name": "Requirement",
            "methods": [
                "Method `__init__` (line 3172)",
                "Method `__eq__` (line 3189)",
                "Method `__ne__` (line 3192)",
                "Method `__contains__` (line 3195)",
                "Method `__hash__` (line 3207)",
                "Method `__repr__` (line 3210)",
                "Method `parse` (line 3214)"
            ],
            "lineno": 3171
        },
        {
            "type": "function",
            "name": "_always_object",
            "args": [
                "classes"
            ],
            "lineno": 3219
        },
        {
            "type": "function",
            "name": "_find_adapter",
            "args": [
                "registry",
                "ob"
            ],
            "lineno": 3229
        },
        {
            "type": "function",
            "name": "ensure_directory",
            "args": [
                "path"
            ],
            "lineno": 3237
        },
        {
            "type": "function",
            "name": "_bypass_ensure_directory",
            "args": [
                "path"
            ],
            "lineno": 3243
        },
        {
            "type": "function",
            "name": "split_sections",
            "args": [
                "s"
            ],
            "lineno": 3256
        },
        {
            "type": "function",
            "name": "_mkstemp",
            "args": [
                "*args",
                "**kw"
            ],
            "lineno": 3282
        },
        {
            "type": "function",
            "name": "_call_aside",
            "args": [
                "f",
                "*args",
                "**kwargs"
            ],
            "lineno": 3301
        },
        {
            "type": "function",
            "name": "_initialize",
            "args": [
                "g"
            ],
            "lineno": 3307
        },
        {
            "type": "class",
            "name": "PkgResourcesDeprecationWarning",
            "methods": null,
            "lineno": 3318
        },
        {
            "type": "function",
            "name": "_initialize_master_working_set",
            "args": [],
            "lineno": 3328
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 295
        },
        {
            "type": "function",
            "name": "dist",
            "args": [
                "self"
            ],
            "lineno": 310
        },
        {
            "type": "function",
            "name": "req",
            "args": [
                "self"
            ],
            "lineno": 314
        },
        {
            "type": "function",
            "name": "report",
            "args": [
                "self"
            ],
            "lineno": 317
        },
        {
            "type": "function",
            "name": "with_context",
            "args": [
                "self",
                "required_by"
            ],
            "lineno": 320
        },
        {
            "type": "function",
            "name": "required_by",
            "args": [
                "self"
            ],
            "lineno": 340
        },
        {
            "type": "function",
            "name": "req",
            "args": [
                "self"
            ],
            "lineno": 353
        },
        {
            "type": "function",
            "name": "requirers",
            "args": [
                "self"
            ],
            "lineno": 357
        },
        {
            "type": "function",
            "name": "requirers_str",
            "args": [
                "self"
            ],
            "lineno": 361
        },
        {
            "type": "function",
            "name": "report",
            "args": [
                "self"
            ],
            "lineno": 366
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 369
        },
        {
            "type": "function",
            "name": "has_metadata",
            "args": [
                "name"
            ],
            "lineno": 550
        },
        {
            "type": "function",
            "name": "get_metadata",
            "args": [
                "name"
            ],
            "lineno": 553
        },
        {
            "type": "function",
            "name": "get_metadata_lines",
            "args": [
                "name"
            ],
            "lineno": 556
        },
        {
            "type": "function",
            "name": "metadata_isdir",
            "args": [
                "name"
            ],
            "lineno": 562
        },
        {
            "type": "function",
            "name": "metadata_listdir",
            "args": [
                "name"
            ],
            "lineno": 565
        },
        {
            "type": "function",
            "name": "run_script",
            "args": [
                "script_name",
                "namespace"
            ],
            "lineno": 568
        },
        {
            "type": "function",
            "name": "get_resource_filename",
            "args": [
                "manager",
                "resource_name"
            ],
            "lineno": 575
        },
        {
            "type": "function",
            "name": "get_resource_stream",
            "args": [
                "manager",
                "resource_name"
            ],
            "lineno": 580
        },
        {
            "type": "function",
            "name": "get_resource_string",
            "args": [
                "manager",
                "resource_name"
            ],
            "lineno": 585
        },
        {
            "type": "function",
            "name": "has_resource",
            "args": [
                "resource_name"
            ],
            "lineno": 590
        },
        {
            "type": "function",
            "name": "resource_isdir",
            "args": [
                "resource_name"
            ],
            "lineno": 593
        },
        {
            "type": "function",
            "name": "resource_listdir",
            "args": [
                "resource_name"
            ],
            "lineno": 596
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "entries"
            ],
            "lineno": 603
        },
        {
            "type": "function",
            "name": "_build_master",
            "args": [
                "cls"
            ],
            "lineno": 618
        },
        {
            "type": "function",
            "name": "_build_from_requirements",
            "args": [
                "cls",
                "req_spec"
            ],
            "lineno": 638
        },
        {
            "type": "function",
            "name": "add_entry",
            "args": [
                "self",
                "entry"
            ],
            "lineno": 659
        },
        {
            "type": "function",
            "name": "__contains__",
            "args": [
                "self",
                "dist"
            ],
            "lineno": 674
        },
        {
            "type": "function",
            "name": "find",
            "args": [
                "self",
                "req"
            ],
            "lineno": 678
        },
        {
            "type": "function",
            "name": "iter_entry_points",
            "args": [
                "self",
                "group",
                "name"
            ],
            "lineno": 702
        },
        {
            "type": "function",
            "name": "run_script",
            "args": [
                "self",
                "requires",
                "script_name"
            ],
            "lineno": 716
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 724
        },
        {
            "type": "function",
            "name": "add",
            "args": [
                "self",
                "dist",
                "entry",
                "insert",
                "replace"
            ],
            "lineno": 741
        },
        {
            "type": "function",
            "name": "resolve",
            "args": [
                "self",
                "requirements",
                "env",
                "installer",
                "replace_conflicting",
                "extras"
            ],
            "lineno": 773
        },
        {
            "type": "function",
            "name": "_resolve_dist",
            "args": [
                "self",
                "req",
                "best",
                "replace_conflicting",
                "env",
                "installer",
                "required_by",
                "to_activate"
            ],
            "lineno": 847
        },
        {
            "type": "function",
            "name": "find_plugins",
            "args": [
                "self",
                "plugin_env",
                "full_env",
                "installer",
                "fallback"
            ],
            "lineno": 878
        },
        {
            "type": "function",
            "name": "require",
            "args": [
                "self",
                "*requirements"
            ],
            "lineno": 959
        },
        {
            "type": "function",
            "name": "subscribe",
            "args": [
                "self",
                "callback",
                "existing"
            ],
            "lineno": 975
        },
        {
            "type": "function",
            "name": "_added_new",
            "args": [
                "self",
                "dist"
            ],
            "lineno": 989
        },
        {
            "type": "function",
            "name": "__getstate__",
            "args": [
                "self"
            ],
            "lineno": 993
        },
        {
            "type": "function",
            "name": "__setstate__",
            "args": [
                "self",
                "e_k_b_n_c"
            ],
            "lineno": 1002
        },
        {
            "type": "function",
            "name": "markers_pass",
            "args": [
                "self",
                "req",
                "extras"
            ],
            "lineno": 1016
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "search_path",
                "platform",
                "python"
            ],
            "lineno": 1034
        },
        {
            "type": "function",
            "name": "can_add",
            "args": [
                "self",
                "dist"
            ],
            "lineno": 1058
        },
        {
            "type": "function",
            "name": "remove",
            "args": [
                "self",
                "dist"
            ],
            "lineno": 1072
        },
        {
            "type": "function",
            "name": "scan",
            "args": [
                "self",
                "search_path"
            ],
            "lineno": 1076
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "project_name"
            ],
            "lineno": 1091
        },
        {
            "type": "function",
            "name": "add",
            "args": [
                "self",
                "dist"
            ],
            "lineno": 1102
        },
        {
            "type": "function",
            "name": "best_match",
            "args": [
                "self",
                "req",
                "working_set",
                "installer",
                "replace_conflicting"
            ],
            "lineno": 1110
        },
        {
            "type": "function",
            "name": "obtain",
            "args": [
                "self",
                "requirement",
                "installer"
            ],
            "lineno": 1137
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 1149
        },
        {
            "type": "function",
            "name": "__iadd__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1155
        },
        {
            "type": "function",
            "name": "__add__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1167
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 1200
        },
        {
            "type": "function",
            "name": "resource_exists",
            "args": [
                "self",
                "package_or_requirement",
                "resource_name"
            ],
            "lineno": 1203
        },
        {
            "type": "function",
            "name": "resource_isdir",
            "args": [
                "self",
                "package_or_requirement",
                "resource_name"
            ],
            "lineno": 1207
        },
        {
            "type": "function",
            "name": "resource_filename",
            "args": [
                "self",
                "package_or_requirement",
                "resource_name"
            ],
            "lineno": 1211
        },
        {
            "type": "function",
            "name": "resource_stream",
            "args": [
                "self",
                "package_or_requirement",
                "resource_name"
            ],
            "lineno": 1217
        },
        {
            "type": "function",
            "name": "resource_string",
            "args": [
                "self",
                "package_or_requirement",
                "resource_name"
            ],
            "lineno": 1223
        },
        {
            "type": "function",
            "name": "resource_listdir",
            "args": [
                "self",
                "package_or_requirement",
                "resource_name"
            ],
            "lineno": 1229
        },
        {
            "type": "function",
            "name": "extraction_error",
            "args": [
                "self"
            ],
            "lineno": 1233
        },
        {
            "type": "function",
            "name": "get_cache_path",
            "args": [
                "self",
                "archive_name",
                "names"
            ],
            "lineno": 1263
        },
        {
            "type": "function",
            "name": "_warn_unsafe_extraction_path",
            "args": [
                "path"
            ],
            "lineno": 1289
        },
        {
            "type": "function",
            "name": "postprocess",
            "args": [
                "self",
                "tempname",
                "filename"
            ],
            "lineno": 1315
        },
        {
            "type": "function",
            "name": "set_extraction_path",
            "args": [
                "self",
                "path"
            ],
            "lineno": 1335
        },
        {
            "type": "function",
            "name": "cleanup_resources",
            "args": [
                "self",
                "force"
            ],
            "lineno": 1359
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "module"
            ],
            "lineno": 1489
        },
        {
            "type": "function",
            "name": "get_resource_filename",
            "args": [
                "self",
                "manager",
                "resource_name"
            ],
            "lineno": 1493
        },
        {
            "type": "function",
            "name": "get_resource_stream",
            "args": [
                "self",
                "manager",
                "resource_name"
            ],
            "lineno": 1496
        },
        {
            "type": "function",
            "name": "get_resource_string",
            "args": [
                "self",
                "manager",
                "resource_name"
            ],
            "lineno": 1499
        },
        {
            "type": "function",
            "name": "has_resource",
            "args": [
                "self",
                "resource_name"
            ],
            "lineno": 1502
        },
        {
            "type": "function",
            "name": "_get_metadata_path",
            "args": [
                "self",
                "name"
            ],
            "lineno": 1505
        },
        {
            "type": "function",
            "name": "has_metadata",
            "args": [
                "self",
                "name"
            ],
            "lineno": 1508
        },
        {
            "type": "function",
            "name": "get_metadata",
            "args": [
                "self",
                "name"
            ],
            "lineno": 1515
        },
        {
            "type": "function",
            "name": "get_metadata_lines",
            "args": [
                "self",
                "name"
            ],
            "lineno": 1528
        },
        {
            "type": "function",
            "name": "resource_isdir",
            "args": [
                "self",
                "resource_name"
            ],
            "lineno": 1531
        },
        {
            "type": "function",
            "name": "metadata_isdir",
            "args": [
                "self",
                "name"
            ],
            "lineno": 1534
        },
        {
            "type": "function",
            "name": "resource_listdir",
            "args": [
                "self",
                "resource_name"
            ],
            "lineno": 1537
        },
        {
            "type": "function",
            "name": "metadata_listdir",
            "args": [
                "self",
                "name"
            ],
            "lineno": 1540
        },
        {
            "type": "function",
            "name": "run_script",
            "args": [
                "self",
                "script_name",
                "namespace"
            ],
            "lineno": 1545
        },
        {
            "type": "function",
            "name": "_has",
            "args": [
                "self",
                "path"
            ],
            "lineno": 1574
        },
        {
            "type": "function",
            "name": "_isdir",
            "args": [
                "self",
                "path"
            ],
            "lineno": 1579
        },
        {
            "type": "function",
            "name": "_listdir",
            "args": [
                "self",
                "path"
            ],
            "lineno": 1584
        },
        {
            "type": "function",
            "name": "_fn",
            "args": [
                "self",
                "base",
                "resource_name"
            ],
            "lineno": 1589
        },
        {
            "type": "function",
            "name": "_validate_resource_path",
            "args": [
                "path"
            ],
            "lineno": 1596
        },
        {
            "type": "function",
            "name": "_get",
            "args": [
                "self",
                "path"
            ],
            "lineno": 1669
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "module"
            ],
            "lineno": 1694
        },
        {
            "type": "function",
            "name": "_setup_prefix",
            "args": [
                "self"
            ],
            "lineno": 1698
        },
        {
            "type": "function",
            "name": "_set_egg",
            "args": [
                "self",
                "path"
            ],
            "lineno": 1705
        },
        {
            "type": "function",
            "name": "_has",
            "args": [
                "self",
                "path"
            ],
            "lineno": 1714
        },
        {
            "type": "function",
            "name": "_isdir",
            "args": [
                "self",
                "path"
            ],
            "lineno": 1717
        },
        {
            "type": "function",
            "name": "_listdir",
            "args": [
                "self",
                "path"
            ],
            "lineno": 1720
        },
        {
            "type": "function",
            "name": "get_resource_stream",
            "args": [
                "self",
                "manager",
                "resource_name"
            ],
            "lineno": 1723
        },
        {
            "type": "function",
            "name": "_get",
            "args": [
                "self",
                "path"
            ],
            "lineno": 1726
        },
        {
            "type": "function",
            "name": "_register",
            "args": [
                "cls"
            ],
            "lineno": 1731
        },
        {
            "type": "function",
            "name": "_get",
            "args": [
                "self",
                "path"
            ],
            "lineno": 1751
        },
        {
            "type": "function",
            "name": "_listdir",
            "args": [
                "self",
                "path"
            ],
            "lineno": 1754
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 1757
        },
        {
            "type": "function",
            "name": "build",
            "args": [
                "cls",
                "path"
            ],
            "lineno": 1770
        },
        {
            "type": "function",
            "name": "load",
            "args": [
                "self",
                "path"
            ],
            "lineno": 1798
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "module"
            ],
            "lineno": 1818
        },
        {
            "type": "function",
            "name": "_zipinfo_name",
            "args": [
                "self",
                "fspath"
            ],
            "lineno": 1822
        },
        {
            "type": "function",
            "name": "_parts",
            "args": [
                "self",
                "zip_path"
            ],
            "lineno": 1832
        },
        {
            "type": "function",
            "name": "zipinfo",
            "args": [
                "self"
            ],
            "lineno": 1841
        },
        {
            "type": "function",
            "name": "get_resource_filename",
            "args": [
                "self",
                "manager",
                "resource_name"
            ],
            "lineno": 1844
        },
        {
            "type": "function",
            "name": "_get_date_and_size",
            "args": [
                "zip_stat"
            ],
            "lineno": 1858
        },
        {
            "type": "function",
            "name": "_extract_resource",
            "args": [
                "self",
                "manager",
                "zip_path"
            ],
            "lineno": 1867
        },
        {
            "type": "function",
            "name": "_is_current",
            "args": [
                "self",
                "file_path",
                "zip_path"
            ],
            "lineno": 1917
        },
        {
            "type": "function",
            "name": "_get_eager_resources",
            "args": [
                "self"
            ],
            "lineno": 1933
        },
        {
            "type": "function",
            "name": "_index",
            "args": [
                "self"
            ],
            "lineno": 1942
        },
        {
            "type": "function",
            "name": "_has",
            "args": [
                "self",
                "fspath"
            ],
            "lineno": 1959
        },
        {
            "type": "function",
            "name": "_isdir",
            "args": [
                "self",
                "fspath"
            ],
            "lineno": 1963
        },
        {
            "type": "function",
            "name": "_listdir",
            "args": [
                "self",
                "fspath"
            ],
            "lineno": 1966
        },
        {
            "type": "function",
            "name": "_eager_to_zip",
            "args": [
                "self",
                "resource_name"
            ],
            "lineno": 1969
        },
        {
            "type": "function",
            "name": "_resource_to_zip",
            "args": [
                "self",
                "resource_name"
            ],
            "lineno": 1972
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "path"
            ],
            "lineno": 1991
        },
        {
            "type": "function",
            "name": "_get_metadata_path",
            "args": [
                "self",
                "name"
            ],
            "lineno": 1994
        },
        {
            "type": "function",
            "name": "has_metadata",
            "args": [
                "self",
                "name"
            ],
            "lineno": 1997
        },
        {
            "type": "function",
            "name": "get_metadata",
            "args": [
                "self",
                "name"
            ],
            "lineno": 2000
        },
        {
            "type": "function",
            "name": "_warn_on_replacement",
            "args": [
                "self",
                "metadata"
            ],
            "lineno": 2009
        },
        {
            "type": "function",
            "name": "get_metadata_lines",
            "args": [
                "self",
                "name"
            ],
            "lineno": 2016
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "path",
                "egg_info"
            ],
            "lineno": 2040
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "importer"
            ],
            "lineno": 2048
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 2166
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "fullpath"
            ],
            "lineno": 2169
        },
        {
            "type": "function",
            "name": "safe_sys_path_index",
            "args": [
                "entry"
            ],
            "lineno": 2302
        },
        {
            "type": "function",
            "name": "position_in_sys_path",
            "args": [
                "path"
            ],
            "lineno": 2311
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "module_name",
                "attrs",
                "extras",
                "dist"
            ],
            "lineno": 2485
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 2494
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 2502
        },
        {
            "type": "function",
            "name": "load",
            "args": [
                "self",
                "require",
                "*args",
                "**kwargs"
            ],
            "lineno": 2505
        },
        {
            "type": "function",
            "name": "resolve",
            "args": [
                "self"
            ],
            "lineno": 2520
        },
        {
            "type": "function",
            "name": "require",
            "args": [
                "self",
                "env",
                "installer"
            ],
            "lineno": 2530
        },
        {
            "type": "function",
            "name": "parse",
            "args": [
                "cls",
                "src",
                "dist"
            ],
            "lineno": 2553
        },
        {
            "type": "function",
            "name": "_parse_extras",
            "args": [
                "cls",
                "extras_spec"
            ],
            "lineno": 2573
        },
        {
            "type": "function",
            "name": "parse_group",
            "args": [
                "cls",
                "group",
                "lines",
                "dist"
            ],
            "lineno": 2582
        },
        {
            "type": "function",
            "name": "parse_map",
            "args": [
                "cls",
                "data",
                "dist"
            ],
            "lineno": 2595
        },
        {
            "type": "function",
            "name": "is_version_line",
            "args": [
                "line"
            ],
            "lineno": 2620
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "location",
                "metadata",
                "project_name",
                "version",
                "py_version",
                "platform",
                "precedence"
            ],
            "lineno": 2634
        },
        {
            "type": "function",
            "name": "from_location",
            "args": [
                "cls",
                "location",
                "basename",
                "metadata",
                "**kw"
            ],
            "lineno": 2654
        },
        {
            "type": "function",
            "name": "_reload_version",
            "args": [
                "self"
            ],
            "lineno": 2675
        },
        {
            "type": "function",
            "name": "hashcmp",
            "args": [
                "self"
            ],
            "lineno": 2679
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 2689
        },
        {
            "type": "function",
            "name": "__lt__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 2692
        },
        {
            "type": "function",
            "name": "__le__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 2695
        },
        {
            "type": "function",
            "name": "__gt__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 2698
        },
        {
            "type": "function",
            "name": "__ge__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 2701
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 2704
        },
        {
            "type": "function",
            "name": "__ne__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 2710
        },
        {
            "type": "function",
            "name": "key",
            "args": [
                "self"
            ],
            "lineno": 2718
        },
        {
            "type": "function",
            "name": "parsed_version",
            "args": [
                "self"
            ],
            "lineno": 2726
        },
        {
            "type": "function",
            "name": "_forgiving_parsed_version",
            "args": [
                "self"
            ],
            "lineno": 2740
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "self"
            ],
            "lineno": 2766
        },
        {
            "type": "function",
            "name": "_dep_map",
            "args": [
                "self"
            ],
            "lineno": 2781
        },
        {
            "type": "function",
            "name": "_filter_extras",
            "args": [
                "dm"
            ],
            "lineno": 2793
        },
        {
            "type": "function",
            "name": "_build_dep_map",
            "args": [
                "self"
            ],
            "lineno": 2813
        },
        {
            "type": "function",
            "name": "requires",
            "args": [
                "self",
                "extras"
            ],
            "lineno": 2820
        },
        {
            "type": "function",
            "name": "_get_metadata_path_for_display",
            "args": [
                "self",
                "name"
            ],
            "lineno": 2834
        },
        {
            "type": "function",
            "name": "_get_metadata",
            "args": [
                "self",
                "name"
            ],
            "lineno": 2851
        },
        {
            "type": "function",
            "name": "_get_version",
            "args": [
                "self"
            ],
            "lineno": 2856
        },
        {
            "type": "function",
            "name": "activate",
            "args": [
                "self",
                "path",
                "replace"
            ],
            "lineno": 2862
        },
        {
            "type": "function",
            "name": "egg_name",
            "args": [
                "self"
            ],
            "lineno": 2873
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 2885
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 2891
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "attr"
            ],
            "lineno": 2899
        },
        {
            "type": "function",
            "name": "__dir__",
            "args": [
                "self"
            ],
            "lineno": 2905
        },
        {
            "type": "function",
            "name": "from_filename",
            "args": [
                "cls",
                "filename",
                "metadata",
                "**kw"
            ],
            "lineno": 2912
        },
        {
            "type": "function",
            "name": "as_requirement",
            "args": [
                "self"
            ],
            "lineno": 2917
        },
        {
            "type": "function",
            "name": "load_entry_point",
            "args": [
                "self",
                "group",
                "name"
            ],
            "lineno": 2926
        },
        {
            "type": "function",
            "name": "get_entry_map",
            "args": [
                "self",
                "group"
            ],
            "lineno": 2933
        },
        {
            "type": "function",
            "name": "get_entry_info",
            "args": [
                "self",
                "group",
                "name"
            ],
            "lineno": 2945
        },
        {
            "type": "function",
            "name": "insert_on",
            "args": [
                "self",
                "path",
                "loc",
                "replace"
            ],
            "lineno": 2950
        },
        {
            "type": "function",
            "name": "check_version_conflict",
            "args": [
                "self"
            ],
            "lineno": 3018
        },
        {
            "type": "function",
            "name": "has_version",
            "args": [
                "self"
            ],
            "lineno": 3044
        },
        {
            "type": "function",
            "name": "clone",
            "args": [
                "self",
                "**kw"
            ],
            "lineno": 3055
        },
        {
            "type": "function",
            "name": "extras",
            "args": [
                "self"
            ],
            "lineno": 3064
        },
        {
            "type": "function",
            "name": "_reload_version",
            "args": [
                "self"
            ],
            "lineno": 3069
        },
        {
            "type": "function",
            "name": "_parsed_pkg_info",
            "args": [
                "self"
            ],
            "lineno": 3097
        },
        {
            "type": "function",
            "name": "_dep_map",
            "args": [
                "self"
            ],
            "lineno": 3107
        },
        {
            "type": "function",
            "name": "_compute_dependencies",
            "args": [
                "self"
            ],
            "lineno": 3114
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "requirement_string"
            ],
            "lineno": 3172
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 3189
        },
        {
            "type": "function",
            "name": "__ne__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 3192
        },
        {
            "type": "function",
            "name": "__contains__",
            "args": [
                "self",
                "item"
            ],
            "lineno": 3195
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 3207
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 3210
        },
        {
            "type": "function",
            "name": "parse",
            "args": [
                "s"
            ],
            "lineno": 3214
        },
        {
            "type": "function",
            "name": "reqs_for_extra",
            "args": [
                "extra"
            ],
            "lineno": 3123
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/platformdirs/android.py": [
        {
            "type": "class",
            "name": "Android",
            "methods": [
                "Method `user_data_dir` (line 22)",
                "Method `site_data_dir` (line 27)",
                "Method `user_config_dir` (line 32)",
                "Method `site_config_dir` (line 40)",
                "Method `user_cache_dir` (line 45)",
                "Method `site_cache_dir` (line 50)",
                "Method `user_state_dir` (line 55)",
                "Method `user_log_dir` (line 60)",
                "Method `user_documents_dir` (line 71)",
                "Method `user_downloads_dir` (line 76)",
                "Method `user_pictures_dir` (line 81)",
                "Method `user_videos_dir` (line 86)",
                "Method `user_music_dir` (line 91)",
                "Method `user_runtime_dir` (line 96)"
            ],
            "lineno": 13
        },
        {
            "type": "function",
            "name": "_android_folder",
            "args": [],
            "lineno": 108
        },
        {
            "type": "function",
            "name": "_android_documents_folder",
            "args": [],
            "lineno": 129
        },
        {
            "type": "function",
            "name": "_android_downloads_folder",
            "args": [],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "_android_pictures_folder",
            "args": [],
            "lineno": 161
        },
        {
            "type": "function",
            "name": "_android_videos_folder",
            "args": [],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "_android_music_folder",
            "args": [],
            "lineno": 193
        },
        {
            "type": "function",
            "name": "user_data_dir",
            "args": [
                "self"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "site_data_dir",
            "args": [
                "self"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "user_config_dir",
            "args": [
                "self"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "site_config_dir",
            "args": [
                "self"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "user_cache_dir",
            "args": [
                "self"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "site_cache_dir",
            "args": [
                "self"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "user_state_dir",
            "args": [
                "self"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "user_log_dir",
            "args": [
                "self"
            ],
            "lineno": 60
        },
        {
            "type": "function",
            "name": "user_documents_dir",
            "args": [
                "self"
            ],
            "lineno": 71
        },
        {
            "type": "function",
            "name": "user_downloads_dir",
            "args": [
                "self"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "user_pictures_dir",
            "args": [
                "self"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "user_videos_dir",
            "args": [
                "self"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "user_music_dir",
            "args": [
                "self"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "user_runtime_dir",
            "args": [
                "self"
            ],
            "lineno": 96
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/platformdirs/api.py": [
        {
            "type": "class",
            "name": "PlatformDirsABC",
            "methods": [
                "Method `__init__` (line 21)",
                "Method `_append_app_name_and_version` (line 71)",
                "Method `_optionally_create_directory` (line 81)",
                "Method `user_data_dir` (line 87)",
                "Method `site_data_dir` (line 92)",
                "Method `user_config_dir` (line 97)",
                "Method `site_config_dir` (line 102)",
                "Method `user_cache_dir` (line 107)",
                "Method `site_cache_dir` (line 112)",
                "Method `user_state_dir` (line 117)",
                "Method `user_log_dir` (line 122)",
                "Method `user_documents_dir` (line 127)",
                "Method `user_downloads_dir` (line 132)",
                "Method `user_pictures_dir` (line 137)",
                "Method `user_videos_dir` (line 142)",
                "Method `user_music_dir` (line 147)",
                "Method `user_runtime_dir` (line 152)",
                "Method `user_data_path` (line 156)",
                "Method `site_data_path` (line 161)",
                "Method `user_config_path` (line 166)",
                "Method `site_config_path` (line 171)",
                "Method `user_cache_path` (line 176)",
                "Method `site_cache_path` (line 181)",
                "Method `user_state_path` (line 186)",
                "Method `user_log_path` (line 191)",
                "Method `user_documents_path` (line 196)",
                "Method `user_downloads_path` (line 201)",
                "Method `user_pictures_path` (line 206)",
                "Method `user_videos_path` (line 211)",
                "Method `user_music_path` (line 216)",
                "Method `user_runtime_path` (line 221)"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "appname",
                "appauthor",
                "version",
                "roaming",
                "multipath",
                "opinion",
                "ensure_exists"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "_append_app_name_and_version",
            "args": [
                "self",
                "*base"
            ],
            "lineno": 71
        },
        {
            "type": "function",
            "name": "_optionally_create_directory",
            "args": [
                "self",
                "path"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "user_data_dir",
            "args": [
                "self"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "site_data_dir",
            "args": [
                "self"
            ],
            "lineno": 92
        },
        {
            "type": "function",
            "name": "user_config_dir",
            "args": [
                "self"
            ],
            "lineno": 97
        },
        {
            "type": "function",
            "name": "site_config_dir",
            "args": [
                "self"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "user_cache_dir",
            "args": [
                "self"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "site_cache_dir",
            "args": [
                "self"
            ],
            "lineno": 112
        },
        {
            "type": "function",
            "name": "user_state_dir",
            "args": [
                "self"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "user_log_dir",
            "args": [
                "self"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "user_documents_dir",
            "args": [
                "self"
            ],
            "lineno": 127
        },
        {
            "type": "function",
            "name": "user_downloads_dir",
            "args": [
                "self"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "user_pictures_dir",
            "args": [
                "self"
            ],
            "lineno": 137
        },
        {
            "type": "function",
            "name": "user_videos_dir",
            "args": [
                "self"
            ],
            "lineno": 142
        },
        {
            "type": "function",
            "name": "user_music_dir",
            "args": [
                "self"
            ],
            "lineno": 147
        },
        {
            "type": "function",
            "name": "user_runtime_dir",
            "args": [
                "self"
            ],
            "lineno": 152
        },
        {
            "type": "function",
            "name": "user_data_path",
            "args": [
                "self"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "site_data_path",
            "args": [
                "self"
            ],
            "lineno": 161
        },
        {
            "type": "function",
            "name": "user_config_path",
            "args": [
                "self"
            ],
            "lineno": 166
        },
        {
            "type": "function",
            "name": "site_config_path",
            "args": [
                "self"
            ],
            "lineno": 171
        },
        {
            "type": "function",
            "name": "user_cache_path",
            "args": [
                "self"
            ],
            "lineno": 176
        },
        {
            "type": "function",
            "name": "site_cache_path",
            "args": [
                "self"
            ],
            "lineno": 181
        },
        {
            "type": "function",
            "name": "user_state_path",
            "args": [
                "self"
            ],
            "lineno": 186
        },
        {
            "type": "function",
            "name": "user_log_path",
            "args": [
                "self"
            ],
            "lineno": 191
        },
        {
            "type": "function",
            "name": "user_documents_path",
            "args": [
                "self"
            ],
            "lineno": 196
        },
        {
            "type": "function",
            "name": "user_downloads_path",
            "args": [
                "self"
            ],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "user_pictures_path",
            "args": [
                "self"
            ],
            "lineno": 206
        },
        {
            "type": "function",
            "name": "user_videos_path",
            "args": [
                "self"
            ],
            "lineno": 211
        },
        {
            "type": "function",
            "name": "user_music_path",
            "args": [
                "self"
            ],
            "lineno": 216
        },
        {
            "type": "function",
            "name": "user_runtime_path",
            "args": [
                "self"
            ],
            "lineno": 221
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/platformdirs/macos.py": [
        {
            "type": "class",
            "name": "MacOS",
            "methods": [
                "Method `user_data_dir` (line 19)",
                "Method `site_data_dir` (line 24)",
                "Method `user_config_dir` (line 29)",
                "Method `site_config_dir` (line 34)",
                "Method `user_cache_dir` (line 39)",
                "Method `site_cache_dir` (line 44)",
                "Method `user_state_dir` (line 49)",
                "Method `user_log_dir` (line 54)",
                "Method `user_documents_dir` (line 59)",
                "Method `user_downloads_dir` (line 64)",
                "Method `user_pictures_dir` (line 69)",
                "Method `user_videos_dir` (line 74)",
                "Method `user_music_dir` (line 79)",
                "Method `user_runtime_dir` (line 84)"
            ],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "user_data_dir",
            "args": [
                "self"
            ],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "site_data_dir",
            "args": [
                "self"
            ],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "user_config_dir",
            "args": [
                "self"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "site_config_dir",
            "args": [
                "self"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "user_cache_dir",
            "args": [
                "self"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "site_cache_dir",
            "args": [
                "self"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "user_state_dir",
            "args": [
                "self"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "user_log_dir",
            "args": [
                "self"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "user_documents_dir",
            "args": [
                "self"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "user_downloads_dir",
            "args": [
                "self"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "user_pictures_dir",
            "args": [
                "self"
            ],
            "lineno": 69
        },
        {
            "type": "function",
            "name": "user_videos_dir",
            "args": [
                "self"
            ],
            "lineno": 74
        },
        {
            "type": "function",
            "name": "user_music_dir",
            "args": [
                "self"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "user_runtime_dir",
            "args": [
                "self"
            ],
            "lineno": 84
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/platformdirs/unix.py": [
        {
            "type": "class",
            "name": "Unix",
            "methods": [
                "Method `user_data_dir` (line 35)",
                "Method `site_data_dir` (line 46)",
                "Method `_with_multi_path` (line 58)",
                "Method `user_config_dir` (line 66)",
                "Method `site_config_dir` (line 77)",
                "Method `user_cache_dir` (line 90)",
                "Method `site_cache_dir` (line 101)",
                "Method `user_state_dir` (line 106)",
                "Method `user_log_dir` (line 117)",
                "Method `user_documents_dir` (line 125)",
                "Method `user_downloads_dir` (line 130)",
                "Method `user_pictures_dir` (line 135)",
                "Method `user_videos_dir` (line 140)",
                "Method `user_music_dir` (line 145)",
                "Method `user_runtime_dir` (line 150)",
                "Method `site_data_path` (line 170)",
                "Method `site_config_path` (line 175)",
                "Method `site_cache_path` (line 180)",
                "Method `_first_item_as_path_if_multipath` (line 184)"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "_get_user_media_dir",
            "args": [
                "env_var",
                "fallback_tilde_path"
            ],
            "lineno": 191
        },
        {
            "type": "function",
            "name": "_get_user_dirs_folder",
            "args": [
                "key"
            ],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "getuid",
            "args": [],
            "lineno": 13
        },
        {
            "type": "function",
            "name": "user_data_dir",
            "args": [
                "self"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "site_data_dir",
            "args": [
                "self"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "_with_multi_path",
            "args": [
                "self",
                "path"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "user_config_dir",
            "args": [
                "self"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "site_config_dir",
            "args": [
                "self"
            ],
            "lineno": 77
        },
        {
            "type": "function",
            "name": "user_cache_dir",
            "args": [
                "self"
            ],
            "lineno": 90
        },
        {
            "type": "function",
            "name": "site_cache_dir",
            "args": [
                "self"
            ],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "user_state_dir",
            "args": [
                "self"
            ],
            "lineno": 106
        },
        {
            "type": "function",
            "name": "user_log_dir",
            "args": [
                "self"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "user_documents_dir",
            "args": [
                "self"
            ],
            "lineno": 125
        },
        {
            "type": "function",
            "name": "user_downloads_dir",
            "args": [
                "self"
            ],
            "lineno": 130
        },
        {
            "type": "function",
            "name": "user_pictures_dir",
            "args": [
                "self"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "user_videos_dir",
            "args": [
                "self"
            ],
            "lineno": 140
        },
        {
            "type": "function",
            "name": "user_music_dir",
            "args": [
                "self"
            ],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "user_runtime_dir",
            "args": [
                "self"
            ],
            "lineno": 150
        },
        {
            "type": "function",
            "name": "site_data_path",
            "args": [
                "self"
            ],
            "lineno": 170
        },
        {
            "type": "function",
            "name": "site_config_path",
            "args": [
                "self"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "site_cache_path",
            "args": [
                "self"
            ],
            "lineno": 180
        },
        {
            "type": "function",
            "name": "_first_item_as_path_if_multipath",
            "args": [
                "self",
                "directory"
            ],
            "lineno": 184
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/platformdirs/version.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/platformdirs/windows.py": [
        {
            "type": "class",
            "name": "Windows",
            "methods": [
                "Method `user_data_dir` (line 30)",
                "Method `_append_parts` (line 40)",
                "Method `site_data_dir` (line 56)",
                "Method `user_config_dir` (line 62)",
                "Method `site_config_dir` (line 67)",
                "Method `user_cache_dir` (line 72)",
                "Method `site_cache_dir` (line 81)",
                "Method `user_state_dir` (line 87)",
                "Method `user_log_dir` (line 92)",
                "Method `user_documents_dir` (line 101)",
                "Method `user_downloads_dir` (line 106)",
                "Method `user_pictures_dir` (line 111)",
                "Method `user_videos_dir` (line 116)",
                "Method `user_music_dir` (line 121)",
                "Method `user_runtime_dir` (line 126)"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "get_win_folder_from_env_vars",
            "args": [
                "csidl_name"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "get_win_folder_if_csidl_name_not_env_var",
            "args": [
                "csidl_name"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "get_win_folder_from_registry",
            "args": [
                "csidl_name"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "get_win_folder_via_ctypes",
            "args": [
                "csidl_name"
            ],
            "lineno": 204
        },
        {
            "type": "function",
            "name": "_pick_get_win_folder",
            "args": [],
            "lineno": 240
        },
        {
            "type": "function",
            "name": "user_data_dir",
            "args": [
                "self"
            ],
            "lineno": 30
        },
        {
            "type": "function",
            "name": "_append_parts",
            "args": [
                "self",
                "path"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "site_data_dir",
            "args": [
                "self"
            ],
            "lineno": 56
        },
        {
            "type": "function",
            "name": "user_config_dir",
            "args": [
                "self"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "site_config_dir",
            "args": [
                "self"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "user_cache_dir",
            "args": [
                "self"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "site_cache_dir",
            "args": [
                "self"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "user_state_dir",
            "args": [
                "self"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "user_log_dir",
            "args": [
                "self"
            ],
            "lineno": 92
        },
        {
            "type": "function",
            "name": "user_documents_dir",
            "args": [
                "self"
            ],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "user_downloads_dir",
            "args": [
                "self"
            ],
            "lineno": 106
        },
        {
            "type": "function",
            "name": "user_pictures_dir",
            "args": [
                "self"
            ],
            "lineno": 111
        },
        {
            "type": "function",
            "name": "user_videos_dir",
            "args": [
                "self"
            ],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "user_music_dir",
            "args": [
                "self"
            ],
            "lineno": 121
        },
        {
            "type": "function",
            "name": "user_runtime_dir",
            "args": [
                "self"
            ],
            "lineno": 126
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/platformdirs/__init__.py": [
        {
            "type": "function",
            "name": "_set_platform_dir_class",
            "args": [],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "user_data_dir",
            "args": [
                "appname",
                "appauthor",
                "version",
                "roaming",
                "ensure_exists"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "site_data_dir",
            "args": [
                "appname",
                "appauthor",
                "version",
                "multipath",
                "ensure_exists"
            ],
            "lineno": 74
        },
        {
            "type": "function",
            "name": "user_config_dir",
            "args": [
                "appname",
                "appauthor",
                "version",
                "roaming",
                "ensure_exists"
            ],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "site_config_dir",
            "args": [
                "appname",
                "appauthor",
                "version",
                "multipath",
                "ensure_exists"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "user_cache_dir",
            "args": [
                "appname",
                "appauthor",
                "version",
                "opinion",
                "ensure_exists"
            ],
            "lineno": 146
        },
        {
            "type": "function",
            "name": "site_cache_dir",
            "args": [
                "appname",
                "appauthor",
                "version",
                "opinion",
                "ensure_exists"
            ],
            "lineno": 170
        },
        {
            "type": "function",
            "name": "user_state_dir",
            "args": [
                "appname",
                "appauthor",
                "version",
                "roaming",
                "ensure_exists"
            ],
            "lineno": 194
        },
        {
            "type": "function",
            "name": "user_log_dir",
            "args": [
                "appname",
                "appauthor",
                "version",
                "opinion",
                "ensure_exists"
            ],
            "lineno": 218
        },
        {
            "type": "function",
            "name": "user_documents_dir",
            "args": [],
            "lineno": 242
        },
        {
            "type": "function",
            "name": "user_downloads_dir",
            "args": [],
            "lineno": 247
        },
        {
            "type": "function",
            "name": "user_pictures_dir",
            "args": [],
            "lineno": 252
        },
        {
            "type": "function",
            "name": "user_videos_dir",
            "args": [],
            "lineno": 257
        },
        {
            "type": "function",
            "name": "user_music_dir",
            "args": [],
            "lineno": 262
        },
        {
            "type": "function",
            "name": "user_runtime_dir",
            "args": [
                "appname",
                "appauthor",
                "version",
                "opinion",
                "ensure_exists"
            ],
            "lineno": 267
        },
        {
            "type": "function",
            "name": "user_data_path",
            "args": [
                "appname",
                "appauthor",
                "version",
                "roaming",
                "ensure_exists"
            ],
            "lineno": 291
        },
        {
            "type": "function",
            "name": "site_data_path",
            "args": [
                "appname",
                "appauthor",
                "version",
                "multipath",
                "ensure_exists"
            ],
            "lineno": 315
        },
        {
            "type": "function",
            "name": "user_config_path",
            "args": [
                "appname",
                "appauthor",
                "version",
                "roaming",
                "ensure_exists"
            ],
            "lineno": 339
        },
        {
            "type": "function",
            "name": "site_config_path",
            "args": [
                "appname",
                "appauthor",
                "version",
                "multipath",
                "ensure_exists"
            ],
            "lineno": 363
        },
        {
            "type": "function",
            "name": "site_cache_path",
            "args": [
                "appname",
                "appauthor",
                "version",
                "opinion",
                "ensure_exists"
            ],
            "lineno": 387
        },
        {
            "type": "function",
            "name": "user_cache_path",
            "args": [
                "appname",
                "appauthor",
                "version",
                "opinion",
                "ensure_exists"
            ],
            "lineno": 411
        },
        {
            "type": "function",
            "name": "user_state_path",
            "args": [
                "appname",
                "appauthor",
                "version",
                "roaming",
                "ensure_exists"
            ],
            "lineno": 435
        },
        {
            "type": "function",
            "name": "user_log_path",
            "args": [
                "appname",
                "appauthor",
                "version",
                "opinion",
                "ensure_exists"
            ],
            "lineno": 459
        },
        {
            "type": "function",
            "name": "user_documents_path",
            "args": [],
            "lineno": 483
        },
        {
            "type": "function",
            "name": "user_downloads_path",
            "args": [],
            "lineno": 488
        },
        {
            "type": "function",
            "name": "user_pictures_path",
            "args": [],
            "lineno": 493
        },
        {
            "type": "function",
            "name": "user_videos_path",
            "args": [],
            "lineno": 498
        },
        {
            "type": "function",
            "name": "user_music_path",
            "args": [],
            "lineno": 503
        },
        {
            "type": "function",
            "name": "user_runtime_path",
            "args": [
                "appname",
                "appauthor",
                "version",
                "opinion",
                "ensure_exists"
            ],
            "lineno": 508
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/platformdirs/__main__.py": [
        {
            "type": "function",
            "name": "main",
            "args": [],
            "lineno": 24
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/cmdline.py": [
        {
            "type": "function",
            "name": "_parse_options",
            "args": [
                "o_strs"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "_parse_filters",
            "args": [
                "f_strs"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "_print_help",
            "args": [
                "what",
                "name"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "_print_list",
            "args": [
                "what"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "_print_list_as_json",
            "args": [
                "requested_items"
            ],
            "lineno": 138
        },
        {
            "type": "function",
            "name": "main_inner",
            "args": [
                "parser",
                "argns"
            ],
            "lineno": 182
        },
        {
            "type": "class",
            "name": "HelpFormatter",
            "methods": [
                "Method `__init__` (line 518)"
            ],
            "lineno": 517
        },
        {
            "type": "function",
            "name": "main",
            "args": [
                "args"
            ],
            "lineno": 528
        },
        {
            "type": "function",
            "name": "is_only_option",
            "args": [
                "opt"
            ],
            "lineno": 192
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "prog",
                "indent_increment",
                "max_help_position",
                "width"
            ],
            "lineno": 518
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/console.py": [
        {
            "type": "function",
            "name": "reset_color",
            "args": [],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "colorize",
            "args": [
                "color_key",
                "text"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "ansiformat",
            "args": [
                "attr",
                "text"
            ],
            "lineno": 48
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/filter.py": [
        {
            "type": "function",
            "name": "apply_filters",
            "args": [
                "stream",
                "filters",
                "lexer"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "simplefilter",
            "args": [
                "f"
            ],
            "lineno": 25
        },
        {
            "type": "class",
            "name": "Filter",
            "methods": [
                "Method `__init__` (line 47)",
                "Method `filter` (line 50)"
            ],
            "lineno": 41
        },
        {
            "type": "class",
            "name": "FunctionFilter",
            "methods": [
                "Method `__init__` (line 63)",
                "Method `filter` (line 69)"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "_apply",
            "args": [
                "filter_",
                "stream"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 47
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "lexer",
                "stream"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 63
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "lexer",
                "stream"
            ],
            "lineno": 69
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatter.py": [
        {
            "type": "function",
            "name": "_lookup_style",
            "args": [
                "style"
            ],
            "lineno": 19
        },
        {
            "type": "class",
            "name": "Formatter",
            "methods": [
                "Method `__init__` (line 83)",
                "Method `get_style_defs` (line 99)",
                "Method `format` (line 114)"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "get_style_defs",
            "args": [
                "self",
                "arg"
            ],
            "lineno": 99
        },
        {
            "type": "function",
            "name": "format",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 114
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/lexer.py": [
        {
            "type": "class",
            "name": "LexerMeta",
            "methods": [
                "Method `__new__` (line 43)"
            ],
            "lineno": 37
        },
        {
            "type": "class",
            "name": "Lexer",
            "methods": [
                "Method `__init__` (line 131)",
                "Method `__repr__` (line 161)",
                "Method `add_filter` (line 168)",
                "Method `analyse_text` (line 176)",
                "Method `get_tokens` (line 193)",
                "Method `get_tokens_unprocessed` (line 257)"
            ],
            "lineno": 49
        },
        {
            "type": "class",
            "name": "DelegatingLexer",
            "methods": [
                "Method `__init__` (line 279)",
                "Method `get_tokens_unprocessed` (line 285)"
            ],
            "lineno": 269
        },
        {
            "type": "class",
            "name": "include",
            "methods": null,
            "lineno": 308
        },
        {
            "type": "class",
            "name": "_inherit",
            "methods": [
                "Method `__repr__` (line 319)"
            ],
            "lineno": 315
        },
        {
            "type": "class",
            "name": "combined",
            "methods": [
                "Method `__new__` (line 330)",
                "Method `__init__` (line 333)"
            ],
            "lineno": 325
        },
        {
            "type": "class",
            "name": "_PseudoMatch",
            "methods": [
                "Method `__init__` (line 343)",
                "Method `start` (line 347)",
                "Method `end` (line 350)",
                "Method `group` (line 353)",
                "Method `groups` (line 358)",
                "Method `groupdict` (line 361)"
            ],
            "lineno": 338
        },
        {
            "type": "function",
            "name": "bygroups",
            "args": [
                "*args"
            ],
            "lineno": 365
        },
        {
            "type": "class",
            "name": "_This",
            "methods": null,
            "lineno": 391
        },
        {
            "type": "function",
            "name": "using",
            "args": [
                "_other",
                "**kwargs"
            ],
            "lineno": 400
        },
        {
            "type": "class",
            "name": "default",
            "methods": [
                "Method `__init__` (line 458)"
            ],
            "lineno": 450
        },
        {
            "type": "class",
            "name": "words",
            "methods": [
                "Method `__init__` (line 469)",
                "Method `get` (line 474)"
            ],
            "lineno": 462
        },
        {
            "type": "class",
            "name": "RegexLexerMeta",
            "methods": [
                "Method `_process_regex` (line 484)",
                "Method `_process_token` (line 490)",
                "Method `_process_new_state` (line 496)",
                "Method `_process_state` (line 531)",
                "Method `process_tokendef` (line 575)",
                "Method `get_tokendefs` (line 583)",
                "Method `__call__` (line 632)"
            ],
            "lineno": 478
        },
        {
            "type": "class",
            "name": "RegexLexer",
            "methods": [
                "Method `get_tokens_unprocessed` (line 681)"
            ],
            "lineno": 646
        },
        {
            "type": "class",
            "name": "LexerContext",
            "methods": [
                "Method `__init__` (line 748)",
                "Method `__repr__` (line 754)"
            ],
            "lineno": 743
        },
        {
            "type": "class",
            "name": "ExtendedRegexLexer",
            "methods": [
                "Method `get_tokens_unprocessed` (line 764)"
            ],
            "lineno": 759
        },
        {
            "type": "function",
            "name": "do_insertions",
            "args": [
                "insertions",
                "tokens"
            ],
            "lineno": 831
        },
        {
            "type": "class",
            "name": "ProfilingRegexLexerMeta",
            "methods": [
                "Method `_process_regex` (line 898)"
            ],
            "lineno": 895
        },
        {
            "type": "class",
            "name": "ProfilingRegexLexer",
            "methods": [
                "Method `get_tokens_unprocessed` (line 923)"
            ],
            "lineno": 917
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "mcs",
                "name",
                "bases",
                "d"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 131
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 161
        },
        {
            "type": "function",
            "name": "add_filter",
            "args": [
                "self",
                "filter_",
                "**options"
            ],
            "lineno": 168
        },
        {
            "type": "function",
            "name": "analyse_text",
            "args": [
                "text"
            ],
            "lineno": 176
        },
        {
            "type": "function",
            "name": "get_tokens",
            "args": [
                "self",
                "text",
                "unfiltered"
            ],
            "lineno": 193
        },
        {
            "type": "function",
            "name": "get_tokens_unprocessed",
            "args": [
                "self",
                "text"
            ],
            "lineno": 257
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "_root_lexer",
                "_language_lexer",
                "_needle",
                "**options"
            ],
            "lineno": 279
        },
        {
            "type": "function",
            "name": "get_tokens_unprocessed",
            "args": [
                "self",
                "text"
            ],
            "lineno": 285
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 319
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "*args"
            ],
            "lineno": 330
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*args"
            ],
            "lineno": 333
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "start",
                "text"
            ],
            "lineno": 343
        },
        {
            "type": "function",
            "name": "start",
            "args": [
                "self",
                "arg"
            ],
            "lineno": 347
        },
        {
            "type": "function",
            "name": "end",
            "args": [
                "self",
                "arg"
            ],
            "lineno": 350
        },
        {
            "type": "function",
            "name": "group",
            "args": [
                "self",
                "arg"
            ],
            "lineno": 353
        },
        {
            "type": "function",
            "name": "groups",
            "args": [
                "self"
            ],
            "lineno": 358
        },
        {
            "type": "function",
            "name": "groupdict",
            "args": [
                "self"
            ],
            "lineno": 361
        },
        {
            "type": "function",
            "name": "callback",
            "args": [
                "lexer",
                "match",
                "ctx"
            ],
            "lineno": 369
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "state"
            ],
            "lineno": 458
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "words",
                "prefix",
                "suffix"
            ],
            "lineno": 469
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self"
            ],
            "lineno": 474
        },
        {
            "type": "function",
            "name": "_process_regex",
            "args": [
                "cls",
                "regex",
                "rflags",
                "state"
            ],
            "lineno": 484
        },
        {
            "type": "function",
            "name": "_process_token",
            "args": [
                "cls",
                "token"
            ],
            "lineno": 490
        },
        {
            "type": "function",
            "name": "_process_new_state",
            "args": [
                "cls",
                "new_state",
                "unprocessed",
                "processed"
            ],
            "lineno": 496
        },
        {
            "type": "function",
            "name": "_process_state",
            "args": [
                "cls",
                "unprocessed",
                "processed",
                "state"
            ],
            "lineno": 531
        },
        {
            "type": "function",
            "name": "process_tokendef",
            "args": [
                "cls",
                "name",
                "tokendefs"
            ],
            "lineno": 575
        },
        {
            "type": "function",
            "name": "get_tokendefs",
            "args": [
                "cls"
            ],
            "lineno": 583
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "cls",
                "*args",
                "**kwds"
            ],
            "lineno": 632
        },
        {
            "type": "function",
            "name": "get_tokens_unprocessed",
            "args": [
                "self",
                "text",
                "stack"
            ],
            "lineno": 681
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "text",
                "pos",
                "stack",
                "end"
            ],
            "lineno": 748
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 754
        },
        {
            "type": "function",
            "name": "get_tokens_unprocessed",
            "args": [
                "self",
                "text",
                "context"
            ],
            "lineno": 764
        },
        {
            "type": "function",
            "name": "_process_regex",
            "args": [
                "cls",
                "regex",
                "rflags",
                "state"
            ],
            "lineno": 898
        },
        {
            "type": "function",
            "name": "get_tokens_unprocessed",
            "args": [
                "self",
                "text",
                "stack"
            ],
            "lineno": 923
        },
        {
            "type": "function",
            "name": "streamer",
            "args": [],
            "lineno": 249
        },
        {
            "type": "function",
            "name": "callback",
            "args": [
                "lexer",
                "match",
                "ctx"
            ],
            "lineno": 422
        },
        {
            "type": "function",
            "name": "callback",
            "args": [
                "lexer",
                "match",
                "ctx"
            ],
            "lineno": 437
        },
        {
            "type": "function",
            "name": "match_func",
            "args": [
                "text",
                "pos",
                "endpos"
            ],
            "lineno": 906
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/modeline.py": [
        {
            "type": "function",
            "name": "get_filetype_from_line",
            "args": [
                "l"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "get_filetype_from_buffer",
            "args": [
                "buf",
                "max_lines"
            ],
            "lineno": 28
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/plugin.py": [
        {
            "type": "function",
            "name": "iter_entry_points",
            "args": [
                "group_name"
            ],
            "lineno": 47
        },
        {
            "type": "function",
            "name": "find_plugin_lexers",
            "args": [],
            "lineno": 71
        },
        {
            "type": "function",
            "name": "find_plugin_formatters",
            "args": [],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "find_plugin_styles",
            "args": [],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "find_plugin_filters",
            "args": [],
            "lineno": 86
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/regexopt.py": [
        {
            "type": "function",
            "name": "make_charset",
            "args": [
                "letters"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "regex_opt_inner",
            "args": [
                "strings",
                "open_paren"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "regex_opt",
            "args": [
                "strings",
                "prefix",
                "suffix"
            ],
            "lineno": 82
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/scanner.py": [
        {
            "type": "class",
            "name": "EndOfText",
            "methods": null,
            "lineno": 20
        },
        {
            "type": "class",
            "name": "Scanner",
            "methods": [
                "Method `__init__` (line 35)",
                "Method `eos` (line 49)",
                "Method `check` (line 54)",
                "Method `test` (line 66)",
                "Method `scan` (line 72)",
                "Method `get_char` (line 95)",
                "Method `__repr__` (line 99)"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "text",
                "flags"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "eos",
            "args": [
                "self"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "check",
            "args": [
                "self",
                "pattern"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "test",
            "args": [
                "self",
                "pattern"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "scan",
            "args": [
                "self",
                "pattern"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "get_char",
            "args": [
                "self"
            ],
            "lineno": 95
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 99
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/sphinxext.py": [
        {
            "type": "class",
            "name": "PygmentsDoc",
            "methods": [
                "Method `run` (line 69)",
                "Method `document_lexers_overview` (line 88)",
                "Method `document_lexers` (line 148)",
                "Method `document_formatters` (line 185)",
                "Method `document_filters` (line 203)"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "setup",
            "args": [
                "app"
            ],
            "lineno": 216
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self"
            ],
            "lineno": 69
        },
        {
            "type": "function",
            "name": "document_lexers_overview",
            "args": [
                "self"
            ],
            "lineno": 88
        },
        {
            "type": "function",
            "name": "document_lexers",
            "args": [
                "self"
            ],
            "lineno": 148
        },
        {
            "type": "function",
            "name": "document_formatters",
            "args": [
                "self"
            ],
            "lineno": 185
        },
        {
            "type": "function",
            "name": "document_filters",
            "args": [
                "self"
            ],
            "lineno": 203
        },
        {
            "type": "function",
            "name": "format_link",
            "args": [
                "name",
                "url"
            ],
            "lineno": 99
        },
        {
            "type": "function",
            "name": "write_row",
            "args": [
                "*columns"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "write_seperator",
            "args": [],
            "lineno": 130
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/style.py": [
        {
            "type": "class",
            "name": "StyleMeta",
            "methods": [
                "Method `__new__` (line 60)",
                "Method `style_for_token` (line 126)",
                "Method `list_styles` (line 156)",
                "Method `styles_token` (line 159)",
                "Method `__iter__` (line 162)",
                "Method `__len__` (line 166)"
            ],
            "lineno": 58
        },
        {
            "type": "class",
            "name": "Style",
            "methods": null,
            "lineno": 170
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "mcs",
                "name",
                "bases",
                "dct"
            ],
            "lineno": 60
        },
        {
            "type": "function",
            "name": "style_for_token",
            "args": [
                "cls",
                "token"
            ],
            "lineno": 126
        },
        {
            "type": "function",
            "name": "list_styles",
            "args": [
                "cls"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "styles_token",
            "args": [
                "cls",
                "ttype"
            ],
            "lineno": 159
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "cls"
            ],
            "lineno": 162
        },
        {
            "type": "function",
            "name": "__len__",
            "args": [
                "cls"
            ],
            "lineno": 166
        },
        {
            "type": "function",
            "name": "colorformat",
            "args": [
                "text"
            ],
            "lineno": 66
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/token.py": [
        {
            "type": "class",
            "name": "_TokenType",
            "methods": [
                "Method `split` (line 15)",
                "Method `__init__` (line 24)",
                "Method `__contains__` (line 28)",
                "Method `__getattr__` (line 34)",
                "Method `__repr__` (line 43)",
                "Method `__copy__` (line 46)",
                "Method `__deepcopy__` (line 50)"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "is_token_subtype",
            "args": [
                "ttype",
                "other"
            ],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "string_to_tokentype",
            "args": [
                "s"
            ],
            "lineno": 94
        },
        {
            "type": "function",
            "name": "split",
            "args": [
                "self"
            ],
            "lineno": 15
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*args"
            ],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "__contains__",
            "args": [
                "self",
                "val"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "val"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "__copy__",
            "args": [
                "self"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "__deepcopy__",
            "args": [
                "self",
                "memo"
            ],
            "lineno": 50
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/unistring.py": [
        {
            "type": "function",
            "name": "combine",
            "args": [
                "*args"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "allexcept",
            "args": [
                "*args"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "_handle_runs",
            "args": [
                "char_list"
            ],
            "lineno": 93
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/util.py": [
        {
            "type": "class",
            "name": "ClassNotFound",
            "methods": null,
            "lineno": 30
        },
        {
            "type": "class",
            "name": "OptionError",
            "methods": null,
            "lineno": 34
        },
        {
            "type": "function",
            "name": "get_choice_opt",
            "args": [
                "options",
                "optname",
                "allowed",
                "default",
                "normcase"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "get_bool_opt",
            "args": [
                "options",
                "optname",
                "default"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "get_int_opt",
            "args": [
                "options",
                "optname",
                "default"
            ],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "get_list_opt",
            "args": [
                "options",
                "optname",
                "default"
            ],
            "lineno": 99
        },
        {
            "type": "function",
            "name": "docstring_headline",
            "args": [
                "obj"
            ],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "make_analysator",
            "args": [
                "f"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "shebang_matches",
            "args": [
                "text",
                "regex"
            ],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "doctype_matches",
            "args": [
                "text",
                "regex"
            ],
            "lineno": 190
        },
        {
            "type": "function",
            "name": "html_doctype_matches",
            "args": [
                "text"
            ],
            "lineno": 203
        },
        {
            "type": "function",
            "name": "looks_like_xml",
            "args": [
                "text"
            ],
            "lineno": 211
        },
        {
            "type": "function",
            "name": "surrogatepair",
            "args": [
                "c"
            ],
            "lineno": 227
        },
        {
            "type": "function",
            "name": "format_lines",
            "args": [
                "var_name",
                "seq",
                "raw",
                "indent_level"
            ],
            "lineno": 236
        },
        {
            "type": "function",
            "name": "duplicates_removed",
            "args": [
                "it",
                "already_seen"
            ],
            "lineno": 255
        },
        {
            "type": "class",
            "name": "Future",
            "methods": [
                "Method `get` (line 277)"
            ],
            "lineno": 271
        },
        {
            "type": "function",
            "name": "guess_decode",
            "args": [
                "text"
            ],
            "lineno": 281
        },
        {
            "type": "function",
            "name": "guess_decode_from_terminal",
            "args": [
                "text",
                "term"
            ],
            "lineno": 302
        },
        {
            "type": "function",
            "name": "terminal_encoding",
            "args": [
                "term"
            ],
            "lineno": 319
        },
        {
            "type": "class",
            "name": "UnclosingTextIOWrapper",
            "methods": [
                "Method `close` (line 329)"
            ],
            "lineno": 327
        },
        {
            "type": "function",
            "name": "text_analyse",
            "args": [
                "text"
            ],
            "lineno": 130
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self"
            ],
            "lineno": 277
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 329
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/__init__.py": [
        {
            "type": "function",
            "name": "lex",
            "args": [
                "code",
                "lexer"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "format",
            "args": [
                "tokens",
                "formatter",
                "outfile"
            ],
            "lineno": 52
        },
        {
            "type": "function",
            "name": "highlight",
            "args": [
                "code",
                "lexer",
                "formatter",
                "outfile"
            ],
            "lineno": 77
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/__main__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyparsing/actions.py": [
        {
            "type": "class",
            "name": "OnlyOnce",
            "methods": [
                "Method `__init__` (line 12)",
                "Method `__call__` (line 18)",
                "Method `reset` (line 25)"
            ],
            "lineno": 7
        },
        {
            "type": "function",
            "name": "match_only_at_col",
            "args": [
                "n"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "replace_with",
            "args": [
                "repl_str"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "remove_quotes",
            "args": [
                "s",
                "l",
                "t"
            ],
            "lineno": 63
        },
        {
            "type": "function",
            "name": "with_attribute",
            "args": [
                "*args",
                "**attr_dict"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "with_class",
            "args": [
                "classname",
                "namespace"
            ],
            "lineno": 160
        },
        {
            "type": "function",
            "name": "replaceWith",
            "args": [],
            "lineno": 203
        },
        {
            "type": "function",
            "name": "removeQuotes",
            "args": [],
            "lineno": 206
        },
        {
            "type": "function",
            "name": "withAttribute",
            "args": [],
            "lineno": 209
        },
        {
            "type": "function",
            "name": "withClass",
            "args": [],
            "lineno": 212
        },
        {
            "type": "function",
            "name": "matchOnlyAtCol",
            "args": [],
            "lineno": 215
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "method_call"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "s",
                "l",
                "t"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "verify_col",
            "args": [
                "strg",
                "locn",
                "toks"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "pa",
            "args": [
                "s",
                "l",
                "tokens"
            ],
            "lineno": 143
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyparsing/common.py": [
        {
            "type": "class",
            "name": "pyparsing_common",
            "methods": [
                "Method `convert_to_date` (line 253)",
                "Method `convert_to_datetime` (line 280)",
                "Method `strip_html_tags` (line 322)"
            ],
            "lineno": 8
        },
        {
            "type": "function",
            "name": "convert_to_date",
            "args": [
                "fmt"
            ],
            "lineno": 253
        },
        {
            "type": "function",
            "name": "convert_to_datetime",
            "args": [
                "fmt"
            ],
            "lineno": 280
        },
        {
            "type": "function",
            "name": "strip_html_tags",
            "args": [
                "s",
                "l",
                "tokens"
            ],
            "lineno": 322
        },
        {
            "type": "function",
            "name": "cvt_fn",
            "args": [
                "ss",
                "ll",
                "tt"
            ],
            "lineno": 271
        },
        {
            "type": "function",
            "name": "cvt_fn",
            "args": [
                "s",
                "l",
                "t"
            ],
            "lineno": 298
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyparsing/core.py": [
        {
            "type": "class",
            "name": "__compat__",
            "methods": null,
            "lineno": 93
        },
        {
            "type": "class",
            "name": "__diag__",
            "methods": [
                "Method `enable_all_warnings` (line 133)"
            ],
            "lineno": 116
        },
        {
            "type": "class",
            "name": "Diagnostics",
            "methods": null,
            "lineno": 138
        },
        {
            "type": "function",
            "name": "enable_diag",
            "args": [
                "diag_enum"
            ],
            "lineno": 172
        },
        {
            "type": "function",
            "name": "disable_diag",
            "args": [
                "diag_enum"
            ],
            "lineno": 179
        },
        {
            "type": "function",
            "name": "enable_all_warnings",
            "args": [],
            "lineno": 186
        },
        {
            "type": "function",
            "name": "_should_enable_warnings",
            "args": [
                "cmd_line_warn_options",
                "warn_env_var"
            ],
            "lineno": 197
        },
        {
            "type": "function",
            "name": "_trim_arity",
            "args": [
                "func",
                "max_limit"
            ],
            "lineno": 269
        },
        {
            "type": "function",
            "name": "condition_as_parse_action",
            "args": [
                "fn",
                "message",
                "fatal"
            ],
            "lineno": 326
        },
        {
            "type": "function",
            "name": "_default_start_debug_action",
            "args": [
                "instring",
                "loc",
                "expr",
                "cache_hit"
            ],
            "lineno": 354
        },
        {
            "type": "function",
            "name": "_default_success_debug_action",
            "args": [
                "instring",
                "startloc",
                "endloc",
                "expr",
                "toks",
                "cache_hit"
            ],
            "lineno": 367
        },
        {
            "type": "function",
            "name": "_default_exception_debug_action",
            "args": [
                "instring",
                "loc",
                "expr",
                "exc",
                "cache_hit"
            ],
            "lineno": 379
        },
        {
            "type": "function",
            "name": "null_debug_action",
            "args": [
                "*args"
            ],
            "lineno": 390
        },
        {
            "type": "class",
            "name": "ParserElement",
            "methods": [
                "Method `set_default_whitespace_chars` (line 402)",
                "Method `inline_literals_using` (line 423)",
                "Method `using_each` (line 445)",
                "Method `__init__` (line 461)",
                "Method `suppress_warning` (line 489)",
                "Method `visit_all` (line 505)",
                "Method `copy` (line 522)",
                "Method `set_results_name` (line 551)",
                "Method `_setResultsName` (line 584)",
                "Method `set_break` (line 595)",
                "Method `set_parse_action` (line 618)",
                "Method `add_parse_action` (line 704)",
                "Method `add_condition` (line 716)",
                "Method `set_fail_action` (line 753)",
                "Method `_skipIgnorables` (line 769)",
                "Method `preParse` (line 785)",
                "Method `parseImpl` (line 797)",
                "Method `postParse` (line 800)",
                "Method `_parseNoCache` (line 804)",
                "Method `try_parse` (line 906)",
                "Method `can_parse_next` (line 921)",
                "Method `_parseCache` (line 957)",
                "Method `reset_cache` (line 1009)",
                "Method `disable_memoization` (line 1020)",
                "Method `enable_left_recursion` (line 1034)",
                "Method `enable_packrat` (line 1082)",
                "Method `parse_string` (line 1125)",
                "Method `scan_string` (line 1194)",
                "Method `transform_string` (line 1285)",
                "Method `search_string` (line 1331)",
                "Method `split` (line 1371)",
                "Method `__add__` (line 1403)",
                "Method `__radd__` (line 1439)",
                "Method `__sub__` (line 1452)",
                "Method `__rsub__` (line 1462)",
                "Method `__mul__` (line 1472)",
                "Method `__rmul__` (line 1551)",
                "Method `__or__` (line 1554)",
                "Method `__ror__` (line 1570)",
                "Method `__xor__` (line 1580)",
                "Method `__rxor__` (line 1590)",
                "Method `__and__` (line 1600)",
                "Method `__rand__` (line 1610)",
                "Method `__invert__` (line 1620)",
                "Method `__getitem__` (line 1630)",
                "Method `__call__` (line 1690)",
                "Method `suppress` (line 1710)",
                "Method `ignore_whitespace` (line 1717)",
                "Method `leave_whitespace` (line 1727)",
                "Method `set_whitespace_chars` (line 1738)",
                "Method `parse_with_tabs` (line 1749)",
                "Method `ignore` (line 1758)",
                "Method `set_debug_actions` (line 1786)",
                "Method `set_debug` (line 1812)",
                "Method `default_name` (line 1866)",
                "Method `_generateDefaultName` (line 1872)",
                "Method `set_name` (line 1877)",
                "Method `name` (line 1893)",
                "Method `__str__` (line 1897)",
                "Method `__repr__` (line 1900)",
                "Method `streamline` (line 1903)",
                "Method `recurse` (line 1908)",
                "Method `_checkRecursion` (line 1911)",
                "Method `validate` (line 1916)",
                "Method `parse_file` (line 1927)",
                "Method `__eq__` (line 1957)",
                "Method `__hash__` (line 1966)",
                "Method `matches` (line 1969)",
                "Method `run_tests` (line 1993)",
                "Method `create_diagram` (line 2192)",
                "Method `inlineLiteralsUsing` (line 2251)",
                "Method `setDefaultWhitespaceChars` (line 2255)",
                "Method `setResultsName` (line 2258)",
                "Method `setBreak` (line 2261)",
                "Method `setParseAction` (line 2264)",
                "Method `addParseAction` (line 2267)",
                "Method `addCondition` (line 2270)",
                "Method `setFailAction` (line 2273)",
                "Method `tryParse` (line 2276)",
                "Method `enableLeftRecursion` (line 2280)",
                "Method `enablePackrat` (line 2284)",
                "Method `parseString` (line 2287)",
                "Method `scanString` (line 2290)",
                "Method `transformString` (line 2293)",
                "Method `searchString` (line 2296)",
                "Method `ignoreWhitespace` (line 2299)",
                "Method `leaveWhitespace` (line 2302)",
                "Method `setWhitespaceChars` (line 2305)",
                "Method `parseWithTabs` (line 2308)",
                "Method `setDebugActions` (line 2311)",
                "Method `setDebug` (line 2314)",
                "Method `setName` (line 2317)",
                "Method `parseFile` (line 2320)",
                "Method `runTests` (line 2323)"
            ],
            "lineno": 394
        },
        {
            "type": "class",
            "name": "_PendingSkip",
            "methods": [
                "Method `__init__` (line 2334)",
                "Method `_generateDefaultName` (line 2339)",
                "Method `__add__` (line 2342)",
                "Method `__repr__` (line 2363)",
                "Method `parseImpl` (line 2366)"
            ],
            "lineno": 2331
        },
        {
            "type": "class",
            "name": "Token",
            "methods": [
                "Method `__init__` (line 2377)",
                "Method `_generateDefaultName` (line 2380)"
            ],
            "lineno": 2372
        },
        {
            "type": "class",
            "name": "NoMatch",
            "methods": [
                "Method `__init__` (line 2389)",
                "Method `parseImpl` (line 2395)"
            ],
            "lineno": 2384
        },
        {
            "type": "class",
            "name": "Literal",
            "methods": [
                "Method `__new__` (line 2415)",
                "Method `__getnewargs__` (line 2428)",
                "Method `__init__` (line 2431)",
                "Method `_generateDefaultName` (line 2441)",
                "Method `parseImpl` (line 2444)"
            ],
            "lineno": 2399
        },
        {
            "type": "class",
            "name": "Empty",
            "methods": [
                "Method `__init__` (line 2457)",
                "Method `_generateDefaultName` (line 2462)",
                "Method `parseImpl` (line 2465)"
            ],
            "lineno": 2452
        },
        {
            "type": "class",
            "name": "_SingleCharLiteral",
            "methods": [
                "Method `parseImpl` (line 2470)"
            ],
            "lineno": 2469
        },
        {
            "type": "class",
            "name": "Keyword",
            "methods": [
                "Method `__init__` (line 2508)",
                "Method `_generateDefaultName` (line 2537)",
                "Method `parseImpl` (line 2540)",
                "Method `set_default_keyword_chars` (line 2588)"
            ],
            "lineno": 2479
        },
        {
            "type": "class",
            "name": "CaselessLiteral",
            "methods": [
                "Method `__init__` (line 2611)",
                "Method `parseImpl` (line 2618)"
            ],
            "lineno": 2597
        },
        {
            "type": "class",
            "name": "CaselessKeyword",
            "methods": [
                "Method `__init__` (line 2636)"
            ],
            "lineno": 2624
        },
        {
            "type": "class",
            "name": "CloseMatch",
            "methods": [
                "Method `__init__` (line 2684)",
                "Method `_generateDefaultName` (line 2701)",
                "Method `parseImpl` (line 2704)"
            ],
            "lineno": 2649
        },
        {
            "type": "class",
            "name": "Word",
            "methods": [
                "Method `__init__` (line 2803)",
                "Method `_generateDefaultName` (line 2923)",
                "Method `parseImpl` (line 2950)",
                "Method `parseImpl_regex` (line 2982)"
            ],
            "lineno": 2736
        },
        {
            "type": "class",
            "name": "Char",
            "methods": [
                "Method `__init__` (line 2997)"
            ],
            "lineno": 2991
        },
        {
            "type": "class",
            "name": "Regex",
            "methods": [
                "Method `__init__` (line 3038)",
                "Method `re` (line 3085)",
                "Method `re_match` (line 3095)",
                "Method `mayReturnEmpty` (line 3099)",
                "Method `_generateDefaultName` (line 3102)",
                "Method `parseImpl` (line 3105)",
                "Method `parseImplAsGroupList` (line 3118)",
                "Method `parseImplAsMatch` (line 3127)",
                "Method `sub` (line 3136)"
            ],
            "lineno": 3013
        },
        {
            "type": "class",
            "name": "QuotedString",
            "methods": [
                "Method `__init__` (line 3209)",
                "Method `_generateDefaultName` (line 3328)",
                "Method `parseImpl` (line 3334)"
            ],
            "lineno": 3168
        },
        {
            "type": "class",
            "name": "CharsNotIn",
            "methods": [
                "Method `__init__` (line 3394)",
                "Method `_generateDefaultName` (line 3429)",
                "Method `parseImpl` (line 3436)"
            ],
            "lineno": 3373
        },
        {
            "type": "class",
            "name": "White",
            "methods": [
                "Method `__init__` (line 3489)",
                "Method `_generateDefaultName` (line 3511)",
                "Method `parseImpl` (line 3514)"
            ],
            "lineno": 3453
        },
        {
            "type": "class",
            "name": "PositionToken",
            "methods": [
                "Method `__init__` (line 3531)"
            ],
            "lineno": 3530
        },
        {
            "type": "class",
            "name": "GoToColumn",
            "methods": [
                "Method `__init__` (line 3542)",
                "Method `preParse` (line 3546)",
                "Method `parseImpl` (line 3559)"
            ],
            "lineno": 3537
        },
        {
            "type": "class",
            "name": "LineStart",
            "methods": [
                "Method `__init__` (line 3591)",
                "Method `preParse` (line 3599)",
                "Method `parseImpl` (line 3609)"
            ],
            "lineno": 3568
        },
        {
            "type": "class",
            "name": "LineEnd",
            "methods": [
                "Method `__init__` (line 3620)",
                "Method `parseImpl` (line 3626)"
            ],
            "lineno": 3615
        },
        {
            "type": "class",
            "name": "StringStart",
            "methods": [
                "Method `__init__` (line 3643)",
                "Method `parseImpl` (line 3647)"
            ],
            "lineno": 3638
        },
        {
            "type": "class",
            "name": "StringEnd",
            "methods": [
                "Method `__init__` (line 3660)",
                "Method `parseImpl` (line 3664)"
            ],
            "lineno": 3655
        },
        {
            "type": "class",
            "name": "WordStart",
            "methods": [
                "Method `__init__` (line 3685)",
                "Method `parseImpl` (line 3691)"
            ],
            "lineno": 3675
        },
        {
            "type": "class",
            "name": "WordEnd",
            "methods": [
                "Method `__init__` (line 3710)",
                "Method `parseImpl` (line 3717)"
            ],
            "lineno": 3701
        },
        {
            "type": "class",
            "name": "ParseExpression",
            "methods": [
                "Method `__init__` (line 3733)",
                "Method `recurse` (line 3759)",
                "Method `append` (line 3762)",
                "Method `leave_whitespace` (line 3767)",
                "Method `ignore_whitespace` (line 3780)",
                "Method `ignore` (line 3792)",
                "Method `_generateDefaultName` (line 3804)",
                "Method `streamline` (line 3807)",
                "Method `validate` (line 3848)",
                "Method `copy` (line 3859)",
                "Method `_setResultsName` (line 3865)",
                "Method `leaveWhitespace` (line 3894)",
                "Method `ignoreWhitespace` (line 3897)"
            ],
            "lineno": 3728
        },
        {
            "type": "class",
            "name": "And",
            "methods": [
                "Method `__init__` (line 3927)",
                "Method `streamline` (line 3962)",
                "Method `parseImpl` (line 4013)",
                "Method `__iadd__` (line 4042)",
                "Method `_checkRecursion` (line 4049)",
                "Method `_generateDefaultName` (line 4056)"
            ],
            "lineno": 3901
        },
        {
            "type": "class",
            "name": "Or",
            "methods": [
                "Method `__init__` (line 4082)",
                "Method `streamline` (line 4090)",
                "Method `parseImpl` (line 4102)",
                "Method `__ixor__` (line 4187)",
                "Method `_generateDefaultName` (line 4194)",
                "Method `_setResultsName` (line 4197)"
            ],
            "lineno": 4064
        },
        {
            "type": "class",
            "name": "MatchFirst",
            "methods": [
                "Method `__init__` (line 4242)",
                "Method `streamline` (line 4250)",
                "Method `parseImpl` (line 4266)",
                "Method `__ior__` (line 4303)",
                "Method `_generateDefaultName` (line 4310)",
                "Method `_setResultsName` (line 4313)"
            ],
            "lineno": 4224
        },
        {
            "type": "class",
            "name": "Each",
            "methods": [
                "Method `__init__` (line 4398)",
                "Method `__iand__` (line 4408)",
                "Method `streamline` (line 4415)",
                "Method `parseImpl` (line 4423)",
                "Method `_generateDefaultName` (line 4510)"
            ],
            "lineno": 4340
        },
        {
            "type": "class",
            "name": "ParseElementEnhance",
            "methods": [
                "Method `__init__` (line 4519)",
                "Method `recurse` (line 4542)",
                "Method `parseImpl` (line 4545)",
                "Method `leave_whitespace` (line 4555)",
                "Method `ignore_whitespace` (line 4564)",
                "Method `ignore` (line 4573)",
                "Method `streamline` (line 4585)",
                "Method `_checkRecursion` (line 4591)",
                "Method `validate` (line 4598)",
                "Method `_generateDefaultName` (line 4611)",
                "Method `leaveWhitespace` (line 4617)",
                "Method `ignoreWhitespace` (line 4620)"
            ],
            "lineno": 4514
        },
        {
            "type": "class",
            "name": "IndentedBlock",
            "methods": [
                "Method `__init__` (line 4642)",
                "Method `parseImpl` (line 4652)"
            ],
            "lineno": 4624
        },
        {
            "type": "class",
            "name": "AtStringStart",
            "methods": [
                "Method `__init__` (line 4699)",
                "Method `parseImpl` (line 4703)"
            ],
            "lineno": 4688
        },
        {
            "type": "class",
            "name": "AtLineStart",
            "methods": [
                "Method `__init__` (line 4732)",
                "Method `parseImpl` (line 4736)"
            ],
            "lineno": 4709
        },
        {
            "type": "class",
            "name": "FollowedBy",
            "methods": [
                "Method `__init__` (line 4765)",
                "Method `parseImpl` (line 4769)"
            ],
            "lineno": 4742
        },
        {
            "type": "class",
            "name": "PrecededBy",
            "methods": [
                "Method `__init__` (line 4808)",
                "Method `parseImpl` (line 4834)"
            ],
            "lineno": 4778
        },
        {
            "type": "class",
            "name": "Located",
            "methods": [
                "Method `parseImpl` (line 4888)"
            ],
            "lineno": 4860
        },
        {
            "type": "class",
            "name": "NotAny",
            "methods": [
                "Method `__init__` (line 4927)",
                "Method `parseImpl` (line 4936)",
                "Method `_generateDefaultName` (line 4941)"
            ],
            "lineno": 4902
        },
        {
            "type": "class",
            "name": "_MultipleMatch",
            "methods": [
                "Method `__init__` (line 4946)",
                "Method `stopOn` (line 4961)",
                "Method `parseImpl` (line 4967)",
                "Method `_setResultsName` (line 4995)"
            ],
            "lineno": 4945
        },
        {
            "type": "class",
            "name": "OneOrMore",
            "methods": [
                "Method `_generateDefaultName` (line 5050)"
            ],
            "lineno": 5022
        },
        {
            "type": "class",
            "name": "ZeroOrMore",
            "methods": [
                "Method `__init__` (line 5068)",
                "Method `parseImpl` (line 5078)",
                "Method `_generateDefaultName` (line 5084)"
            ],
            "lineno": 5054
        },
        {
            "type": "class",
            "name": "DelimitedList",
            "methods": [
                "Method `__init__` (line 5089)",
                "Method `_generateDefaultName` (line 5149)"
            ],
            "lineno": 5088
        },
        {
            "type": "class",
            "name": "_NullToken",
            "methods": [
                "Method `__bool__` (line 5154)",
                "Method `__str__` (line 5157)"
            ],
            "lineno": 5153
        },
        {
            "type": "class",
            "name": "Opt",
            "methods": [
                "Method `__init__` (line 5203)",
                "Method `parseImpl` (line 5211)",
                "Method `_generateDefaultName` (line 5227)"
            ],
            "lineno": 5161
        },
        {
            "type": "class",
            "name": "SkipTo",
            "methods": [
                "Method `__init__` (line 5300)",
                "Method `parseImpl` (line 5323)"
            ],
            "lineno": 5238
        },
        {
            "type": "class",
            "name": "Forward",
            "methods": [
                "Method `__init__` (line 5397)",
                "Method `__lshift__` (line 5402)",
                "Method `__ilshift__` (line 5424)",
                "Method `__or__` (line 5430)",
                "Method `__del__` (line 5445)",
                "Method `parseImpl` (line 5459)",
                "Method `leave_whitespace` (line 5554)",
                "Method `ignore_whitespace` (line 5558)",
                "Method `streamline` (line 5562)",
                "Method `validate` (line 5569)",
                "Method `_generateDefaultName` (line 5584)",
                "Method `copy` (line 5598)",
                "Method `_setResultsName` (line 5606)",
                "Method `leaveWhitespace` (line 5626)",
                "Method `ignoreWhitespace` (line 5629)"
            ],
            "lineno": 5368
        },
        {
            "type": "class",
            "name": "TokenConverter",
            "methods": [
                "Method `__init__` (line 5638)"
            ],
            "lineno": 5633
        },
        {
            "type": "class",
            "name": "Combine",
            "methods": [
                "Method `__init__` (line 5662)",
                "Method `ignore` (line 5680)",
                "Method `postParse` (line 5687)"
            ],
            "lineno": 5643
        },
        {
            "type": "class",
            "name": "Group",
            "methods": [
                "Method `__init__` (line 5721)",
                "Method `postParse` (line 5726)"
            ],
            "lineno": 5700
        },
        {
            "type": "class",
            "name": "Dict",
            "methods": [
                "Method `__init__` (line 5779)",
                "Method `postParse` (line 5784)"
            ],
            "lineno": 5737
        },
        {
            "type": "class",
            "name": "Suppress",
            "methods": [
                "Method `__init__` (line 5855)",
                "Method `__add__` (line 5860)",
                "Method `__sub__` (line 5866)",
                "Method `postParse` (line 5872)",
                "Method `suppress` (line 5875)"
            ],
            "lineno": 5824
        },
        {
            "type": "function",
            "name": "trace_parse_action",
            "args": [
                "f"
            ],
            "lineno": 5879
        },
        {
            "type": "function",
            "name": "srange",
            "args": [
                "s"
            ],
            "lineno": 5952
        },
        {
            "type": "function",
            "name": "token_map",
            "args": [
                "func",
                "*args"
            ],
            "lineno": 5989
        },
        {
            "type": "function",
            "name": "autoname_elements",
            "args": [],
            "lineno": 6035
        },
        {
            "type": "function",
            "name": "nullDebugAction",
            "args": [],
            "lineno": 6105
        },
        {
            "type": "function",
            "name": "traceParseAction",
            "args": [],
            "lineno": 6108
        },
        {
            "type": "function",
            "name": "conditionAsParseAction",
            "args": [],
            "lineno": 6111
        },
        {
            "type": "function",
            "name": "tokenMap",
            "args": [],
            "lineno": 6114
        },
        {
            "type": "class",
            "name": "cached_property",
            "methods": [
                "Method `__init__` (line 85)",
                "Method `__get__` (line 88)"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "enable_all_warnings",
            "args": [
                "cls"
            ],
            "lineno": 133
        },
        {
            "type": "function",
            "name": "wrapper",
            "args": [
                "*args"
            ],
            "lineno": 289
        },
        {
            "type": "function",
            "name": "pa",
            "args": [
                "s",
                "l",
                "t"
            ],
            "lineno": 347
        },
        {
            "type": "function",
            "name": "set_default_whitespace_chars",
            "args": [
                "chars"
            ],
            "lineno": 402
        },
        {
            "type": "function",
            "name": "inline_literals_using",
            "args": [
                "cls"
            ],
            "lineno": 423
        },
        {
            "type": "function",
            "name": "using_each",
            "args": [
                "cls",
                "seq",
                "**class_kwargs"
            ],
            "lineno": 445
        },
        {
            "type": "class",
            "name": "DebugActions",
            "methods": null,
            "lineno": 456
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "savelist"
            ],
            "lineno": 461
        },
        {
            "type": "function",
            "name": "suppress_warning",
            "args": [
                "self",
                "warning_type"
            ],
            "lineno": 489
        },
        {
            "type": "function",
            "name": "visit_all",
            "args": [
                "self"
            ],
            "lineno": 505
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 522
        },
        {
            "type": "function",
            "name": "set_results_name",
            "args": [
                "self",
                "name",
                "list_all_matches"
            ],
            "lineno": 551
        },
        {
            "type": "function",
            "name": "_setResultsName",
            "args": [
                "self",
                "name",
                "listAllMatches"
            ],
            "lineno": 584
        },
        {
            "type": "function",
            "name": "set_break",
            "args": [
                "self",
                "break_flag"
            ],
            "lineno": 595
        },
        {
            "type": "function",
            "name": "set_parse_action",
            "args": [
                "self",
                "*fns",
                "**kwargs"
            ],
            "lineno": 618
        },
        {
            "type": "function",
            "name": "add_parse_action",
            "args": [
                "self",
                "*fns",
                "**kwargs"
            ],
            "lineno": 704
        },
        {
            "type": "function",
            "name": "add_condition",
            "args": [
                "self",
                "*fns",
                "**kwargs"
            ],
            "lineno": 716
        },
        {
            "type": "function",
            "name": "set_fail_action",
            "args": [
                "self",
                "fn"
            ],
            "lineno": 753
        },
        {
            "type": "function",
            "name": "_skipIgnorables",
            "args": [
                "self",
                "instring",
                "loc"
            ],
            "lineno": 769
        },
        {
            "type": "function",
            "name": "preParse",
            "args": [
                "self",
                "instring",
                "loc"
            ],
            "lineno": 785
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 797
        },
        {
            "type": "function",
            "name": "postParse",
            "args": [
                "self",
                "instring",
                "loc",
                "tokenlist"
            ],
            "lineno": 800
        },
        {
            "type": "function",
            "name": "_parseNoCache",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions",
                "callPreParse"
            ],
            "lineno": 804
        },
        {
            "type": "function",
            "name": "try_parse",
            "args": [
                "self",
                "instring",
                "loc"
            ],
            "lineno": 906
        },
        {
            "type": "function",
            "name": "can_parse_next",
            "args": [
                "self",
                "instring",
                "loc",
                "do_actions"
            ],
            "lineno": 921
        },
        {
            "type": "class",
            "name": "_CacheType",
            "methods": [
                "Method `get` (line 942)",
                "Method `set` (line 945)"
            ],
            "lineno": 935
        },
        {
            "type": "function",
            "name": "_parseCache",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions",
                "callPreParse"
            ],
            "lineno": 957
        },
        {
            "type": "function",
            "name": "reset_cache",
            "args": [],
            "lineno": 1009
        },
        {
            "type": "function",
            "name": "disable_memoization",
            "args": [],
            "lineno": 1020
        },
        {
            "type": "function",
            "name": "enable_left_recursion",
            "args": [
                "cache_size_limit"
            ],
            "lineno": 1034
        },
        {
            "type": "function",
            "name": "enable_packrat",
            "args": [
                "cache_size_limit"
            ],
            "lineno": 1082
        },
        {
            "type": "function",
            "name": "parse_string",
            "args": [
                "self",
                "instring",
                "parse_all"
            ],
            "lineno": 1125
        },
        {
            "type": "function",
            "name": "scan_string",
            "args": [
                "self",
                "instring",
                "max_matches",
                "overlap"
            ],
            "lineno": 1194
        },
        {
            "type": "function",
            "name": "transform_string",
            "args": [
                "self",
                "instring"
            ],
            "lineno": 1285
        },
        {
            "type": "function",
            "name": "search_string",
            "args": [
                "self",
                "instring",
                "max_matches"
            ],
            "lineno": 1331
        },
        {
            "type": "function",
            "name": "split",
            "args": [
                "self",
                "instring",
                "maxsplit",
                "include_separators"
            ],
            "lineno": 1371
        },
        {
            "type": "function",
            "name": "__add__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1403
        },
        {
            "type": "function",
            "name": "__radd__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1439
        },
        {
            "type": "function",
            "name": "__sub__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1452
        },
        {
            "type": "function",
            "name": "__rsub__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1462
        },
        {
            "type": "function",
            "name": "__mul__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1472
        },
        {
            "type": "function",
            "name": "__rmul__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1551
        },
        {
            "type": "function",
            "name": "__or__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1554
        },
        {
            "type": "function",
            "name": "__ror__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1570
        },
        {
            "type": "function",
            "name": "__xor__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1580
        },
        {
            "type": "function",
            "name": "__rxor__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1590
        },
        {
            "type": "function",
            "name": "__and__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1600
        },
        {
            "type": "function",
            "name": "__rand__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1610
        },
        {
            "type": "function",
            "name": "__invert__",
            "args": [
                "self"
            ],
            "lineno": 1620
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 1630
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 1690
        },
        {
            "type": "function",
            "name": "suppress",
            "args": [
                "self"
            ],
            "lineno": 1710
        },
        {
            "type": "function",
            "name": "ignore_whitespace",
            "args": [
                "self",
                "recursive"
            ],
            "lineno": 1717
        },
        {
            "type": "function",
            "name": "leave_whitespace",
            "args": [
                "self",
                "recursive"
            ],
            "lineno": 1727
        },
        {
            "type": "function",
            "name": "set_whitespace_chars",
            "args": [
                "self",
                "chars",
                "copy_defaults"
            ],
            "lineno": 1738
        },
        {
            "type": "function",
            "name": "parse_with_tabs",
            "args": [
                "self"
            ],
            "lineno": 1749
        },
        {
            "type": "function",
            "name": "ignore",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1758
        },
        {
            "type": "function",
            "name": "set_debug_actions",
            "args": [
                "self",
                "start_action",
                "success_action",
                "exception_action"
            ],
            "lineno": 1786
        },
        {
            "type": "function",
            "name": "set_debug",
            "args": [
                "self",
                "flag",
                "recurse"
            ],
            "lineno": 1812
        },
        {
            "type": "function",
            "name": "default_name",
            "args": [
                "self"
            ],
            "lineno": 1866
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 1872
        },
        {
            "type": "function",
            "name": "set_name",
            "args": [
                "self",
                "name"
            ],
            "lineno": 1877
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 1893
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 1897
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 1900
        },
        {
            "type": "function",
            "name": "streamline",
            "args": [
                "self"
            ],
            "lineno": 1903
        },
        {
            "type": "function",
            "name": "recurse",
            "args": [
                "self"
            ],
            "lineno": 1908
        },
        {
            "type": "function",
            "name": "_checkRecursion",
            "args": [
                "self",
                "parseElementList"
            ],
            "lineno": 1911
        },
        {
            "type": "function",
            "name": "validate",
            "args": [
                "self",
                "validateTrace"
            ],
            "lineno": 1916
        },
        {
            "type": "function",
            "name": "parse_file",
            "args": [
                "self",
                "file_or_filename",
                "encoding",
                "parse_all"
            ],
            "lineno": 1927
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 1957
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 1966
        },
        {
            "type": "function",
            "name": "matches",
            "args": [
                "self",
                "test_string",
                "parse_all"
            ],
            "lineno": 1969
        },
        {
            "type": "function",
            "name": "run_tests",
            "args": [
                "self",
                "tests",
                "parse_all",
                "comment",
                "full_dump",
                "print_results",
                "failure_tests",
                "post_parse",
                "file",
                "with_line_numbers"
            ],
            "lineno": 1993
        },
        {
            "type": "function",
            "name": "create_diagram",
            "args": [
                "self",
                "output_html",
                "vertical",
                "show_results_names",
                "show_groups",
                "embed",
                "**kwargs"
            ],
            "lineno": 2192
        },
        {
            "type": "function",
            "name": "inlineLiteralsUsing",
            "args": [],
            "lineno": 2251
        },
        {
            "type": "function",
            "name": "setDefaultWhitespaceChars",
            "args": [],
            "lineno": 2255
        },
        {
            "type": "function",
            "name": "setResultsName",
            "args": [
                "self"
            ],
            "lineno": 2258
        },
        {
            "type": "function",
            "name": "setBreak",
            "args": [
                "self"
            ],
            "lineno": 2261
        },
        {
            "type": "function",
            "name": "setParseAction",
            "args": [
                "self"
            ],
            "lineno": 2264
        },
        {
            "type": "function",
            "name": "addParseAction",
            "args": [
                "self"
            ],
            "lineno": 2267
        },
        {
            "type": "function",
            "name": "addCondition",
            "args": [
                "self"
            ],
            "lineno": 2270
        },
        {
            "type": "function",
            "name": "setFailAction",
            "args": [
                "self"
            ],
            "lineno": 2273
        },
        {
            "type": "function",
            "name": "tryParse",
            "args": [
                "self"
            ],
            "lineno": 2276
        },
        {
            "type": "function",
            "name": "enableLeftRecursion",
            "args": [],
            "lineno": 2280
        },
        {
            "type": "function",
            "name": "enablePackrat",
            "args": [],
            "lineno": 2284
        },
        {
            "type": "function",
            "name": "parseString",
            "args": [
                "self"
            ],
            "lineno": 2287
        },
        {
            "type": "function",
            "name": "scanString",
            "args": [
                "self"
            ],
            "lineno": 2290
        },
        {
            "type": "function",
            "name": "transformString",
            "args": [
                "self"
            ],
            "lineno": 2293
        },
        {
            "type": "function",
            "name": "searchString",
            "args": [
                "self"
            ],
            "lineno": 2296
        },
        {
            "type": "function",
            "name": "ignoreWhitespace",
            "args": [
                "self"
            ],
            "lineno": 2299
        },
        {
            "type": "function",
            "name": "leaveWhitespace",
            "args": [
                "self"
            ],
            "lineno": 2302
        },
        {
            "type": "function",
            "name": "setWhitespaceChars",
            "args": [
                "self"
            ],
            "lineno": 2305
        },
        {
            "type": "function",
            "name": "parseWithTabs",
            "args": [
                "self"
            ],
            "lineno": 2308
        },
        {
            "type": "function",
            "name": "setDebugActions",
            "args": [
                "self"
            ],
            "lineno": 2311
        },
        {
            "type": "function",
            "name": "setDebug",
            "args": [
                "self"
            ],
            "lineno": 2314
        },
        {
            "type": "function",
            "name": "setName",
            "args": [
                "self"
            ],
            "lineno": 2317
        },
        {
            "type": "function",
            "name": "parseFile",
            "args": [
                "self"
            ],
            "lineno": 2320
        },
        {
            "type": "function",
            "name": "runTests",
            "args": [
                "self"
            ],
            "lineno": 2323
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr",
                "must_skip"
            ],
            "lineno": 2334
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 2339
        },
        {
            "type": "function",
            "name": "__add__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 2342
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 2363
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "*args"
            ],
            "lineno": 2366
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 2377
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 2380
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 2389
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 2395
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "match_string"
            ],
            "lineno": 2415
        },
        {
            "type": "function",
            "name": "__getnewargs__",
            "args": [
                "self"
            ],
            "lineno": 2428
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "match_string"
            ],
            "lineno": 2431
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 2441
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 2444
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "match_string"
            ],
            "lineno": 2457
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 2462
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 2465
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 2470
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "match_string",
                "ident_chars",
                "caseless"
            ],
            "lineno": 2508
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 2537
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 2540
        },
        {
            "type": "function",
            "name": "set_default_keyword_chars",
            "args": [
                "chars"
            ],
            "lineno": 2588
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "match_string"
            ],
            "lineno": 2611
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 2618
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "match_string",
                "ident_chars"
            ],
            "lineno": 2636
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "match_string",
                "max_mismatches"
            ],
            "lineno": 2684
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 2701
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 2704
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "init_chars",
                "body_chars",
                "min",
                "max",
                "exact",
                "as_keyword",
                "exclude_chars"
            ],
            "lineno": 2803
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 2923
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 2950
        },
        {
            "type": "function",
            "name": "parseImpl_regex",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 2982
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "charset",
                "as_keyword",
                "exclude_chars"
            ],
            "lineno": 2997
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "pattern",
                "flags",
                "as_group_list",
                "as_match"
            ],
            "lineno": 3038
        },
        {
            "type": "function",
            "name": "re",
            "args": [
                "self"
            ],
            "lineno": 3085
        },
        {
            "type": "function",
            "name": "re_match",
            "args": [
                "self"
            ],
            "lineno": 3095
        },
        {
            "type": "function",
            "name": "mayReturnEmpty",
            "args": [
                "self"
            ],
            "lineno": 3099
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 3102
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 3105
        },
        {
            "type": "function",
            "name": "parseImplAsGroupList",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 3118
        },
        {
            "type": "function",
            "name": "parseImplAsMatch",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 3127
        },
        {
            "type": "function",
            "name": "sub",
            "args": [
                "self",
                "repl"
            ],
            "lineno": 3136
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "quote_char",
                "esc_char",
                "esc_quote",
                "multiline",
                "unquote_results",
                "end_quote_char",
                "convert_whitespace_escapes"
            ],
            "lineno": 3209
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 3328
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 3334
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "not_chars",
                "min",
                "max",
                "exact"
            ],
            "lineno": 3394
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 3429
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 3436
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "ws",
                "min",
                "max",
                "exact"
            ],
            "lineno": 3489
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 3511
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 3514
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 3531
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "colno"
            ],
            "lineno": 3542
        },
        {
            "type": "function",
            "name": "preParse",
            "args": [
                "self",
                "instring",
                "loc"
            ],
            "lineno": 3546
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 3559
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 3591
        },
        {
            "type": "function",
            "name": "preParse",
            "args": [
                "self",
                "instring",
                "loc"
            ],
            "lineno": 3599
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 3609
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 3620
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 3626
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 3643
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 3647
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 3660
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 3664
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "word_chars"
            ],
            "lineno": 3685
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 3691
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "word_chars"
            ],
            "lineno": 3710
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 3717
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "exprs",
                "savelist"
            ],
            "lineno": 3733
        },
        {
            "type": "function",
            "name": "recurse",
            "args": [
                "self"
            ],
            "lineno": 3759
        },
        {
            "type": "function",
            "name": "append",
            "args": [
                "self",
                "other"
            ],
            "lineno": 3762
        },
        {
            "type": "function",
            "name": "leave_whitespace",
            "args": [
                "self",
                "recursive"
            ],
            "lineno": 3767
        },
        {
            "type": "function",
            "name": "ignore_whitespace",
            "args": [
                "self",
                "recursive"
            ],
            "lineno": 3780
        },
        {
            "type": "function",
            "name": "ignore",
            "args": [
                "self",
                "other"
            ],
            "lineno": 3792
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 3804
        },
        {
            "type": "function",
            "name": "streamline",
            "args": [
                "self"
            ],
            "lineno": 3807
        },
        {
            "type": "function",
            "name": "validate",
            "args": [
                "self",
                "validateTrace"
            ],
            "lineno": 3848
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 3859
        },
        {
            "type": "function",
            "name": "_setResultsName",
            "args": [
                "self",
                "name",
                "listAllMatches"
            ],
            "lineno": 3865
        },
        {
            "type": "function",
            "name": "leaveWhitespace",
            "args": [
                "self"
            ],
            "lineno": 3894
        },
        {
            "type": "function",
            "name": "ignoreWhitespace",
            "args": [
                "self"
            ],
            "lineno": 3897
        },
        {
            "type": "class",
            "name": "_ErrorStop",
            "methods": [
                "Method `__init__` (line 3920)",
                "Method `_generateDefaultName` (line 3924)"
            ],
            "lineno": 3919
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "exprs_arg",
                "savelist"
            ],
            "lineno": 3927
        },
        {
            "type": "function",
            "name": "streamline",
            "args": [
                "self"
            ],
            "lineno": 3962
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 4013
        },
        {
            "type": "function",
            "name": "__iadd__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 4042
        },
        {
            "type": "function",
            "name": "_checkRecursion",
            "args": [
                "self",
                "parseElementList"
            ],
            "lineno": 4049
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 4056
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "exprs",
                "savelist"
            ],
            "lineno": 4082
        },
        {
            "type": "function",
            "name": "streamline",
            "args": [
                "self"
            ],
            "lineno": 4090
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 4102
        },
        {
            "type": "function",
            "name": "__ixor__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 4187
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 4194
        },
        {
            "type": "function",
            "name": "_setResultsName",
            "args": [
                "self",
                "name",
                "listAllMatches"
            ],
            "lineno": 4197
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "exprs",
                "savelist"
            ],
            "lineno": 4242
        },
        {
            "type": "function",
            "name": "streamline",
            "args": [
                "self"
            ],
            "lineno": 4250
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 4266
        },
        {
            "type": "function",
            "name": "__ior__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 4303
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 4310
        },
        {
            "type": "function",
            "name": "_setResultsName",
            "args": [
                "self",
                "name",
                "listAllMatches"
            ],
            "lineno": 4313
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "exprs",
                "savelist"
            ],
            "lineno": 4398
        },
        {
            "type": "function",
            "name": "__iand__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 4408
        },
        {
            "type": "function",
            "name": "streamline",
            "args": [
                "self"
            ],
            "lineno": 4415
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 4423
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 4510
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr",
                "savelist"
            ],
            "lineno": 4519
        },
        {
            "type": "function",
            "name": "recurse",
            "args": [
                "self"
            ],
            "lineno": 4542
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 4545
        },
        {
            "type": "function",
            "name": "leave_whitespace",
            "args": [
                "self",
                "recursive"
            ],
            "lineno": 4555
        },
        {
            "type": "function",
            "name": "ignore_whitespace",
            "args": [
                "self",
                "recursive"
            ],
            "lineno": 4564
        },
        {
            "type": "function",
            "name": "ignore",
            "args": [
                "self",
                "other"
            ],
            "lineno": 4573
        },
        {
            "type": "function",
            "name": "streamline",
            "args": [
                "self"
            ],
            "lineno": 4585
        },
        {
            "type": "function",
            "name": "_checkRecursion",
            "args": [
                "self",
                "parseElementList"
            ],
            "lineno": 4591
        },
        {
            "type": "function",
            "name": "validate",
            "args": [
                "self",
                "validateTrace"
            ],
            "lineno": 4598
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 4611
        },
        {
            "type": "function",
            "name": "leaveWhitespace",
            "args": [
                "self"
            ],
            "lineno": 4617
        },
        {
            "type": "function",
            "name": "ignoreWhitespace",
            "args": [
                "self"
            ],
            "lineno": 4620
        },
        {
            "type": "class",
            "name": "_Indent",
            "methods": [
                "Method `__init__` (line 4631)"
            ],
            "lineno": 4630
        },
        {
            "type": "class",
            "name": "_IndentGreater",
            "methods": [
                "Method `__init__` (line 4637)"
            ],
            "lineno": 4636
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr"
            ],
            "lineno": 4642
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 4652
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr"
            ],
            "lineno": 4699
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 4703
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr"
            ],
            "lineno": 4732
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 4736
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr"
            ],
            "lineno": 4765
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 4769
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr",
                "retreat"
            ],
            "lineno": 4808
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 4834
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 4888
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr"
            ],
            "lineno": 4927
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 4936
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 4941
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr",
                "stop_on"
            ],
            "lineno": 4946
        },
        {
            "type": "function",
            "name": "stopOn",
            "args": [
                "self",
                "ender"
            ],
            "lineno": 4961
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 4967
        },
        {
            "type": "function",
            "name": "_setResultsName",
            "args": [
                "self",
                "name",
                "listAllMatches"
            ],
            "lineno": 4995
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 5050
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr",
                "stop_on"
            ],
            "lineno": 5068
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 5078
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 5084
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr",
                "delim",
                "combine",
                "min",
                "max"
            ],
            "lineno": 5089
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 5149
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 5154
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 5157
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr",
                "default"
            ],
            "lineno": 5203
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 5211
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 5227
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "other",
                "include",
                "ignore",
                "fail_on"
            ],
            "lineno": 5300
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 5323
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 5397
        },
        {
            "type": "function",
            "name": "__lshift__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 5402
        },
        {
            "type": "function",
            "name": "__ilshift__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 5424
        },
        {
            "type": "function",
            "name": "__or__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 5430
        },
        {
            "type": "function",
            "name": "__del__",
            "args": [
                "self"
            ],
            "lineno": 5445
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 5459
        },
        {
            "type": "function",
            "name": "leave_whitespace",
            "args": [
                "self",
                "recursive"
            ],
            "lineno": 5554
        },
        {
            "type": "function",
            "name": "ignore_whitespace",
            "args": [
                "self",
                "recursive"
            ],
            "lineno": 5558
        },
        {
            "type": "function",
            "name": "streamline",
            "args": [
                "self"
            ],
            "lineno": 5562
        },
        {
            "type": "function",
            "name": "validate",
            "args": [
                "self",
                "validateTrace"
            ],
            "lineno": 5569
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 5584
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 5598
        },
        {
            "type": "function",
            "name": "_setResultsName",
            "args": [
                "self",
                "name",
                "list_all_matches"
            ],
            "lineno": 5606
        },
        {
            "type": "function",
            "name": "leaveWhitespace",
            "args": [
                "self"
            ],
            "lineno": 5626
        },
        {
            "type": "function",
            "name": "ignoreWhitespace",
            "args": [
                "self"
            ],
            "lineno": 5629
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr",
                "savelist"
            ],
            "lineno": 5638
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr",
                "join_string",
                "adjacent"
            ],
            "lineno": 5662
        },
        {
            "type": "function",
            "name": "ignore",
            "args": [
                "self",
                "other"
            ],
            "lineno": 5680
        },
        {
            "type": "function",
            "name": "postParse",
            "args": [
                "self",
                "instring",
                "loc",
                "tokenlist"
            ],
            "lineno": 5687
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr",
                "aslist"
            ],
            "lineno": 5721
        },
        {
            "type": "function",
            "name": "postParse",
            "args": [
                "self",
                "instring",
                "loc",
                "tokenlist"
            ],
            "lineno": 5726
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr",
                "asdict"
            ],
            "lineno": 5779
        },
        {
            "type": "function",
            "name": "postParse",
            "args": [
                "self",
                "instring",
                "loc",
                "tokenlist"
            ],
            "lineno": 5784
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "expr",
                "savelist"
            ],
            "lineno": 5855
        },
        {
            "type": "function",
            "name": "__add__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 5860
        },
        {
            "type": "function",
            "name": "__sub__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 5866
        },
        {
            "type": "function",
            "name": "postParse",
            "args": [
                "self",
                "instring",
                "loc",
                "tokenlist"
            ],
            "lineno": 5872
        },
        {
            "type": "function",
            "name": "suppress",
            "args": [
                "self"
            ],
            "lineno": 5875
        },
        {
            "type": "function",
            "name": "z",
            "args": [
                "*paArgs"
            ],
            "lineno": 5906
        },
        {
            "type": "function",
            "name": "pa",
            "args": [
                "s",
                "l",
                "t"
            ],
            "lineno": 6026
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "func"
            ],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "__get__",
            "args": [
                "self",
                "instance",
                "owner"
            ],
            "lineno": 88
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "*args"
            ],
            "lineno": 942
        },
        {
            "type": "function",
            "name": "set",
            "args": [
                "self",
                "*args"
            ],
            "lineno": 945
        },
        {
            "type": "function",
            "name": "charsAsStr",
            "args": [
                "s"
            ],
            "lineno": 2924
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 3920
        },
        {
            "type": "function",
            "name": "_generateDefaultName",
            "args": [
                "self"
            ],
            "lineno": 3924
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "ref_col"
            ],
            "lineno": 4631
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "ref_col"
            ],
            "lineno": 4637
        },
        {
            "type": "function",
            "name": "breaker",
            "args": [
                "instring",
                "loc",
                "doActions",
                "callPreParse"
            ],
            "lineno": 604
        },
        {
            "type": "function",
            "name": "makeOptionalList",
            "args": [
                "n"
            ],
            "lineno": 1531
        },
        {
            "type": "function",
            "name": "must_skip",
            "args": [
                "t"
            ],
            "lineno": 2346
        },
        {
            "type": "function",
            "name": "show_skip",
            "args": [
                "t"
            ],
            "lineno": 2351
        },
        {
            "type": "function",
            "name": "pa",
            "args": [
                "tokens"
            ],
            "lineno": 3157
        },
        {
            "type": "function",
            "name": "pa",
            "args": [
                "tokens"
            ],
            "lineno": 3162
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyparsing/exceptions.py": [
        {
            "type": "class",
            "name": "ExceptionWordUnicode",
            "methods": null,
            "lineno": 17
        },
        {
            "type": "class",
            "name": "ParseBaseException",
            "methods": [
                "Method `__init__` (line 44)",
                "Method `explain_exception` (line 62)",
                "Method `_from_exception` (line 128)",
                "Method `line` (line 136)",
                "Method `lineno` (line 143)",
                "Method `col` (line 150)",
                "Method `column` (line 157)",
                "Method `parserElement` (line 165)",
                "Method `parserElement` (line 169)",
                "Method `__str__` (line 172)",
                "Method `__repr__` (line 188)",
                "Method `mark_input_line` (line 191)",
                "Method `explain` (line 207)",
                "Method `markInputline` (line 248)"
            ],
            "lineno": 25
        },
        {
            "type": "class",
            "name": "ParseException",
            "methods": null,
            "lineno": 252
        },
        {
            "type": "class",
            "name": "ParseFatalException",
            "methods": null,
            "lineno": 272
        },
        {
            "type": "class",
            "name": "ParseSyntaxException",
            "methods": null,
            "lineno": 279
        },
        {
            "type": "class",
            "name": "RecursiveGrammarException",
            "methods": [
                "Method `__init__` (line 295)",
                "Method `__str__` (line 298)"
            ],
            "lineno": 288
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "pstr",
                "loc",
                "msg",
                "elem"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "explain_exception",
            "args": [
                "exc",
                "depth"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "_from_exception",
            "args": [
                "cls",
                "pe"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "line",
            "args": [
                "self"
            ],
            "lineno": 136
        },
        {
            "type": "function",
            "name": "lineno",
            "args": [
                "self"
            ],
            "lineno": 143
        },
        {
            "type": "function",
            "name": "col",
            "args": [
                "self"
            ],
            "lineno": 150
        },
        {
            "type": "function",
            "name": "column",
            "args": [
                "self"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "parserElement",
            "args": [
                "self"
            ],
            "lineno": 165
        },
        {
            "type": "function",
            "name": "parserElement",
            "args": [
                "self",
                "elem"
            ],
            "lineno": 169
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 172
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 188
        },
        {
            "type": "function",
            "name": "mark_input_line",
            "args": [
                "self",
                "marker_string"
            ],
            "lineno": 191
        },
        {
            "type": "function",
            "name": "explain",
            "args": [
                "self",
                "depth"
            ],
            "lineno": 207
        },
        {
            "type": "function",
            "name": "markInputline",
            "args": [
                "self"
            ],
            "lineno": 248
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "parseElementList"
            ],
            "lineno": 295
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 298
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyparsing/helpers.py": [
        {
            "type": "function",
            "name": "counted_array",
            "args": [
                "expr",
                "int_expr"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "match_previous_literal",
            "args": [
                "expr"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "match_previous_expr",
            "args": [
                "expr"
            ],
            "lineno": 113
        },
        {
            "type": "function",
            "name": "one_of",
            "args": [
                "strs",
                "caseless",
                "use_regex",
                "as_keyword"
            ],
            "lineno": 149
        },
        {
            "type": "function",
            "name": "dict_of",
            "args": [
                "key",
                "value"
            ],
            "lineno": 275
        },
        {
            "type": "function",
            "name": "original_text_for",
            "args": [
                "expr",
                "as_string"
            ],
            "lineno": 315
        },
        {
            "type": "function",
            "name": "ungroup",
            "args": [
                "expr"
            ],
            "lineno": 368
        },
        {
            "type": "function",
            "name": "locatedExpr",
            "args": [
                "expr"
            ],
            "lineno": 375
        },
        {
            "type": "function",
            "name": "nested_expr",
            "args": [
                "opener",
                "closer",
                "content",
                "ignore_expr"
            ],
            "lineno": 410
        },
        {
            "type": "function",
            "name": "_makeTags",
            "args": [
                "tagStr",
                "xml",
                "suppress_LT",
                "suppress_GT"
            ],
            "lineno": 541
        },
        {
            "type": "function",
            "name": "make_html_tags",
            "args": [
                "tag_str"
            ],
            "lineno": 599
        },
        {
            "type": "function",
            "name": "make_xml_tags",
            "args": [
                "tag_str"
            ],
            "lineno": 626
        },
        {
            "type": "function",
            "name": "replace_html_entity",
            "args": [
                "s",
                "l",
                "t"
            ],
            "lineno": 649
        },
        {
            "type": "class",
            "name": "OpAssoc",
            "methods": null,
            "lineno": 654
        },
        {
            "type": "function",
            "name": "infix_notation",
            "args": [
                "base_expr",
                "op_list",
                "lpar",
                "rpar"
            ],
            "lineno": 680
        },
        {
            "type": "function",
            "name": "indentedBlock",
            "args": [
                "blockStatementExpr",
                "indentStack",
                "indent",
                "backup_stacks"
            ],
            "lineno": 857
        },
        {
            "type": "function",
            "name": "delimited_list",
            "args": [
                "expr",
                "delim",
                "combine",
                "min",
                "max"
            ],
            "lineno": 1033
        },
        {
            "type": "function",
            "name": "delimitedList",
            "args": [],
            "lineno": 1063
        },
        {
            "type": "function",
            "name": "delimited_list",
            "args": [],
            "lineno": 1066
        },
        {
            "type": "function",
            "name": "countedArray",
            "args": [],
            "lineno": 1069
        },
        {
            "type": "function",
            "name": "matchPreviousLiteral",
            "args": [],
            "lineno": 1072
        },
        {
            "type": "function",
            "name": "matchPreviousExpr",
            "args": [],
            "lineno": 1075
        },
        {
            "type": "function",
            "name": "oneOf",
            "args": [],
            "lineno": 1078
        },
        {
            "type": "function",
            "name": "dictOf",
            "args": [],
            "lineno": 1081
        },
        {
            "type": "function",
            "name": "originalTextFor",
            "args": [],
            "lineno": 1084
        },
        {
            "type": "function",
            "name": "nestedExpr",
            "args": [],
            "lineno": 1087
        },
        {
            "type": "function",
            "name": "makeHTMLTags",
            "args": [],
            "lineno": 1090
        },
        {
            "type": "function",
            "name": "makeXMLTags",
            "args": [],
            "lineno": 1093
        },
        {
            "type": "function",
            "name": "replaceHTMLEntity",
            "args": [],
            "lineno": 1096
        },
        {
            "type": "function",
            "name": "infixNotation",
            "args": [],
            "lineno": 1099
        },
        {
            "type": "function",
            "name": "count_field_parse_action",
            "args": [
                "s",
                "l",
                "t"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "copy_token_to_repeater",
            "args": [
                "s",
                "l",
                "t"
            ],
            "lineno": 97
        },
        {
            "type": "function",
            "name": "copy_token_to_repeater",
            "args": [
                "s",
                "l",
                "t"
            ],
            "lineno": 132
        },
        {
            "type": "class",
            "name": "_FB",
            "methods": [
                "Method `parseImpl` (line 767)"
            ],
            "lineno": 766
        },
        {
            "type": "function",
            "name": "reset_stack",
            "args": [],
            "lineno": 945
        },
        {
            "type": "function",
            "name": "checkPeerIndent",
            "args": [
                "s",
                "l",
                "t"
            ],
            "lineno": 948
        },
        {
            "type": "function",
            "name": "checkSubIndent",
            "args": [
                "s",
                "l",
                "t"
            ],
            "lineno": 957
        },
        {
            "type": "function",
            "name": "checkUnindent",
            "args": [
                "s",
                "l",
                "t"
            ],
            "lineno": 964
        },
        {
            "type": "function",
            "name": "must_match_these_tokens",
            "args": [
                "s",
                "l",
                "t"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "extractText",
            "args": [
                "s",
                "l",
                "t"
            ],
            "lineno": 359
        },
        {
            "type": "function",
            "name": "parseImpl",
            "args": [
                "self",
                "instring",
                "loc",
                "doActions"
            ],
            "lineno": 767
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyparsing/results.py": [
        {
            "type": "class",
            "name": "_ParseResultsWithOffset",
            "methods": [
                "Method `__init__` (line 21)",
                "Method `__getitem__` (line 24)",
                "Method `__getstate__` (line 27)",
                "Method `__setstate__` (line 30)"
            ],
            "lineno": 17
        },
        {
            "type": "class",
            "name": "ParseResults",
            "methods": [
                "Method `__new__` (line 148)",
                "Method `__init__` (line 171)",
                "Method `__getitem__` (line 204)",
                "Method `__setitem__` (line 213)",
                "Method `__delitem__` (line 228)",
                "Method `__contains__` (line 251)",
                "Method `__len__` (line 254)",
                "Method `__bool__` (line 257)",
                "Method `__iter__` (line 260)",
                "Method `__reversed__` (line 263)",
                "Method `keys` (line 266)",
                "Method `values` (line 269)",
                "Method `items` (line 272)",
                "Method `haskeys` (line 275)",
                "Method `pop` (line 281)",
                "Method `get` (line 337)",
                "Method `insert` (line 360)",
                "Method `append` (line 385)",
                "Method `extend` (line 402)",
                "Method `clear` (line 422)",
                "Method `__getattr__` (line 429)",
                "Method `__add__` (line 437)",
                "Method `__iadd__` (line 442)",
                "Method `__radd__` (line 464)",
                "Method `__repr__` (line 472)",
                "Method `__str__` (line 475)",
                "Method `_asStringList` (line 487)",
                "Method `as_list` (line 498)",
                "Method `as_dict` (line 518)",
                "Method `copy` (line 547)",
                "Method `deepcopy` (line 561)",
                "Method `get_name` (line 582)",
                "Method `dump` (line 630)",
                "Method `pprint` (line 710)",
                "Method `__getstate__` (line 738)",
                "Method `__setstate__` (line 749)",
                "Method `__getnewargs__` (line 754)",
                "Method `__dir__` (line 757)",
                "Method `from_dict` (line 761)"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "p1",
                "p2"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "i"
            ],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "__getstate__",
            "args": [
                "self"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "__setstate__",
            "args": [
                "self",
                "*args"
            ],
            "lineno": 30
        },
        {
            "type": "class",
            "name": "List",
            "methods": [
                "Method `__new__` (line 137)"
            ],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "toklist",
                "name",
                "**kwargs"
            ],
            "lineno": 148
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "toklist",
                "name",
                "asList",
                "modal",
                "isinstance"
            ],
            "lineno": 171
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "i"
            ],
            "lineno": 204
        },
        {
            "type": "function",
            "name": "__setitem__",
            "args": [
                "self",
                "k",
                "v",
                "isinstance"
            ],
            "lineno": 213
        },
        {
            "type": "function",
            "name": "__delitem__",
            "args": [
                "self",
                "i"
            ],
            "lineno": 228
        },
        {
            "type": "function",
            "name": "__contains__",
            "args": [
                "self",
                "k"
            ],
            "lineno": 251
        },
        {
            "type": "function",
            "name": "__len__",
            "args": [
                "self"
            ],
            "lineno": 254
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 257
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 260
        },
        {
            "type": "function",
            "name": "__reversed__",
            "args": [
                "self"
            ],
            "lineno": 263
        },
        {
            "type": "function",
            "name": "keys",
            "args": [
                "self"
            ],
            "lineno": 266
        },
        {
            "type": "function",
            "name": "values",
            "args": [
                "self"
            ],
            "lineno": 269
        },
        {
            "type": "function",
            "name": "items",
            "args": [
                "self"
            ],
            "lineno": 272
        },
        {
            "type": "function",
            "name": "haskeys",
            "args": [
                "self"
            ],
            "lineno": 275
        },
        {
            "type": "function",
            "name": "pop",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 281
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "key",
                "default_value"
            ],
            "lineno": 337
        },
        {
            "type": "function",
            "name": "insert",
            "args": [
                "self",
                "index",
                "ins_string"
            ],
            "lineno": 360
        },
        {
            "type": "function",
            "name": "append",
            "args": [
                "self",
                "item"
            ],
            "lineno": 385
        },
        {
            "type": "function",
            "name": "extend",
            "args": [
                "self",
                "itemseq"
            ],
            "lineno": 402
        },
        {
            "type": "function",
            "name": "clear",
            "args": [
                "self"
            ],
            "lineno": 422
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 429
        },
        {
            "type": "function",
            "name": "__add__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 437
        },
        {
            "type": "function",
            "name": "__iadd__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 442
        },
        {
            "type": "function",
            "name": "__radd__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 464
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 472
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 475
        },
        {
            "type": "function",
            "name": "_asStringList",
            "args": [
                "self",
                "sep"
            ],
            "lineno": 487
        },
        {
            "type": "function",
            "name": "as_list",
            "args": [
                "self"
            ],
            "lineno": 498
        },
        {
            "type": "function",
            "name": "as_dict",
            "args": [
                "self"
            ],
            "lineno": 518
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 547
        },
        {
            "type": "function",
            "name": "deepcopy",
            "args": [
                "self"
            ],
            "lineno": 561
        },
        {
            "type": "function",
            "name": "get_name",
            "args": [
                "self"
            ],
            "lineno": 582
        },
        {
            "type": "function",
            "name": "dump",
            "args": [
                "self",
                "indent",
                "full",
                "include_list",
                "_depth"
            ],
            "lineno": 630
        },
        {
            "type": "function",
            "name": "pprint",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 710
        },
        {
            "type": "function",
            "name": "__getstate__",
            "args": [
                "self"
            ],
            "lineno": 738
        },
        {
            "type": "function",
            "name": "__setstate__",
            "args": [
                "self",
                "state"
            ],
            "lineno": 749
        },
        {
            "type": "function",
            "name": "__getnewargs__",
            "args": [
                "self"
            ],
            "lineno": 754
        },
        {
            "type": "function",
            "name": "__dir__",
            "args": [
                "self"
            ],
            "lineno": 757
        },
        {
            "type": "function",
            "name": "from_dict",
            "args": [
                "cls",
                "other",
                "name"
            ],
            "lineno": 761
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "contained"
            ],
            "lineno": 137
        },
        {
            "type": "function",
            "name": "to_item",
            "args": [
                "obj"
            ],
            "lineno": 539
        },
        {
            "type": "function",
            "name": "is_iterable",
            "args": [
                "obj"
            ],
            "lineno": 768
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyparsing/testing.py": [
        {
            "type": "class",
            "name": "pyparsing_test",
            "methods": [
                "Method `with_line_numbers` (line 238)"
            ],
            "lineno": 15
        },
        {
            "type": "class",
            "name": "reset_pyparsing_context",
            "methods": [
                "Method `__init__` (line 45)",
                "Method `save` (line 48)",
                "Method `restore` (line 80)",
                "Method `copy` (line 113)",
                "Method `__enter__` (line 118)",
                "Method `__exit__` (line 121)"
            ],
            "lineno": 20
        },
        {
            "type": "class",
            "name": "TestParseResultsAsserts",
            "methods": [
                "Method `assertParseResultsEquals` (line 129)",
                "Method `assertParseAndCheckList` (line 141)",
                "Method `assertParseAndCheckDict` (line 155)",
                "Method `assertRunTestResults` (line 169)",
                "Method `assertRaisesParseException` (line 233)"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "with_line_numbers",
            "args": [
                "s",
                "start_line",
                "end_line",
                "expand_tabs",
                "eol_mark",
                "mark_spaces",
                "mark_control"
            ],
            "lineno": 238
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "save",
            "args": [
                "self"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "restore",
            "args": [
                "self"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 113
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 118
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "*args"
            ],
            "lineno": 121
        },
        {
            "type": "function",
            "name": "assertParseResultsEquals",
            "args": [
                "self",
                "result",
                "expected_list",
                "expected_dict",
                "msg"
            ],
            "lineno": 129
        },
        {
            "type": "function",
            "name": "assertParseAndCheckList",
            "args": [
                "self",
                "expr",
                "test_string",
                "expected_list",
                "msg",
                "verbose"
            ],
            "lineno": 141
        },
        {
            "type": "function",
            "name": "assertParseAndCheckDict",
            "args": [
                "self",
                "expr",
                "test_string",
                "expected_dict",
                "msg",
                "verbose"
            ],
            "lineno": 155
        },
        {
            "type": "function",
            "name": "assertRunTestResults",
            "args": [
                "self",
                "run_tests_report",
                "expected_parse_results",
                "msg"
            ],
            "lineno": 169
        },
        {
            "type": "function",
            "name": "assertRaisesParseException",
            "args": [
                "self",
                "exc_type",
                "msg"
            ],
            "lineno": 233
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyparsing/unicode.py": [
        {
            "type": "class",
            "name": "_lazyclassproperty",
            "methods": [
                "Method `__init__` (line 9)",
                "Method `__get__` (line 14)"
            ],
            "lineno": 8
        },
        {
            "type": "class",
            "name": "unicode_set",
            "methods": [
                "Method `_chars_for_ranges` (line 56)",
                "Method `printables` (line 66)",
                "Method `alphas` (line 71)",
                "Method `nums` (line 76)",
                "Method `alphanums` (line 81)",
                "Method `identchars` (line 86)",
                "Method `identbodychars` (line 100)",
                "Method `identifier` (line 118)"
            ],
            "lineno": 31
        },
        {
            "type": "class",
            "name": "pyparsing_unicode",
            "methods": null,
            "lineno": 128
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "fn"
            ],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "__get__",
            "args": [
                "self",
                "obj",
                "cls"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "_chars_for_ranges",
            "args": [
                "cls"
            ],
            "lineno": 56
        },
        {
            "type": "function",
            "name": "printables",
            "args": [
                "cls"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "alphas",
            "args": [
                "cls"
            ],
            "lineno": 71
        },
        {
            "type": "function",
            "name": "nums",
            "args": [
                "cls"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "alphanums",
            "args": [
                "cls"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "identchars",
            "args": [
                "cls"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "identbodychars",
            "args": [
                "cls"
            ],
            "lineno": 100
        },
        {
            "type": "function",
            "name": "identifier",
            "args": [
                "cls"
            ],
            "lineno": 118
        },
        {
            "type": "class",
            "name": "BasicMultilingualPlane",
            "methods": null,
            "lineno": 140
        },
        {
            "type": "class",
            "name": "Latin1",
            "methods": null,
            "lineno": 146
        },
        {
            "type": "class",
            "name": "LatinA",
            "methods": null,
            "lineno": 153
        },
        {
            "type": "class",
            "name": "LatinB",
            "methods": null,
            "lineno": 159
        },
        {
            "type": "class",
            "name": "Greek",
            "methods": null,
            "lineno": 165
        },
        {
            "type": "class",
            "name": "Cyrillic",
            "methods": null,
            "lineno": 205
        },
        {
            "type": "class",
            "name": "Chinese",
            "methods": null,
            "lineno": 218
        },
        {
            "type": "class",
            "name": "Japanese",
            "methods": null,
            "lineno": 241
        },
        {
            "type": "class",
            "name": "Hangul",
            "methods": null,
            "lineno": 287
        },
        {
            "type": "class",
            "name": "CJK",
            "methods": null,
            "lineno": 309
        },
        {
            "type": "class",
            "name": "Thai",
            "methods": null,
            "lineno": 312
        },
        {
            "type": "class",
            "name": "Arabic",
            "methods": null,
            "lineno": 319
        },
        {
            "type": "class",
            "name": "Hebrew",
            "methods": null,
            "lineno": 327
        },
        {
            "type": "class",
            "name": "Devanagari",
            "methods": null,
            "lineno": 341
        },
        {
            "type": "class",
            "name": "Kanji",
            "methods": null,
            "lineno": 244
        },
        {
            "type": "class",
            "name": "Hiragana",
            "methods": null,
            "lineno": 251
        },
        {
            "type": "class",
            "name": "Katakana",
            "methods": null,
            "lineno": 263
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyparsing/util.py": [
        {
            "type": "class",
            "name": "__config_flags",
            "methods": [
                "Method `_set` (line 22)"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "col",
            "args": [
                "loc",
                "strg"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "lineno",
            "args": [
                "loc",
                "strg"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "line",
            "args": [
                "loc",
                "strg"
            ],
            "lineno": 71
        },
        {
            "type": "class",
            "name": "_UnboundedCache",
            "methods": [
                "Method `__init__` (line 81)"
            ],
            "lineno": 80
        },
        {
            "type": "class",
            "name": "_FifoCache",
            "methods": [
                "Method `__init__` (line 102)"
            ],
            "lineno": 101
        },
        {
            "type": "class",
            "name": "LRUMemo",
            "methods": [
                "Method `__init__` (line 137)",
                "Method `__getitem__` (line 142)",
                "Method `__setitem__` (line 149)",
                "Method `__delitem__` (line 153)",
                "Method `clear` (line 163)"
            ],
            "lineno": 129
        },
        {
            "type": "class",
            "name": "UnboundedMemo",
            "methods": [
                "Method `__delitem__` (line 173)"
            ],
            "lineno": 168
        },
        {
            "type": "function",
            "name": "_escape_regex_range_chars",
            "args": [
                "s"
            ],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "_collapse_string_to_ranges",
            "args": [
                "s",
                "re_escape"
            ],
            "lineno": 186
        },
        {
            "type": "function",
            "name": "_flatten",
            "args": [
                "ll"
            ],
            "lineno": 230
        },
        {
            "type": "function",
            "name": "_make_synonym_function",
            "args": [
                "compat_name",
                "fn"
            ],
            "lineno": 240
        },
        {
            "type": "function",
            "name": "replaced_by_pep8",
            "args": [
                "fn"
            ],
            "lineno": 280
        },
        {
            "type": "function",
            "name": "_set",
            "args": [
                "cls",
                "dname",
                "value"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "size"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "capacity"
            ],
            "lineno": 137
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 142
        },
        {
            "type": "function",
            "name": "__setitem__",
            "args": [
                "self",
                "key",
                "value"
            ],
            "lineno": 149
        },
        {
            "type": "function",
            "name": "__delitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "clear",
            "args": [
                "self"
            ],
            "lineno": 163
        },
        {
            "type": "function",
            "name": "__delitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 173
        },
        {
            "type": "function",
            "name": "is_consecutive",
            "args": [
                "c"
            ],
            "lineno": 189
        },
        {
            "type": "function",
            "name": "escape_re_range_char",
            "args": [
                "c"
            ],
            "lineno": 200
        },
        {
            "type": "function",
            "name": "no_escape_re_range_char",
            "args": [
                "c"
            ],
            "lineno": 203
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "_",
                "key"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "set_",
            "args": [
                "_",
                "key",
                "value"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "clear",
            "args": [
                "_"
            ],
            "lineno": 92
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "_",
                "key"
            ],
            "lineno": 110
        },
        {
            "type": "function",
            "name": "set_",
            "args": [
                "_",
                "key",
                "value"
            ],
            "lineno": 113
        },
        {
            "type": "function",
            "name": "clear",
            "args": [
                "_"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "_inner",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 252
        },
        {
            "type": "function",
            "name": "_inner",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 261
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyparsing/__init__.py": [
        {
            "type": "class",
            "name": "version_info",
            "methods": [
                "Method `__version__` (line 107)",
                "Method `__str__` (line 116)",
                "Method `__repr__` (line 119)"
            ],
            "lineno": 99
        },
        {
            "type": "function",
            "name": "__version__",
            "args": [
                "self"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 119
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyproject_hooks/_compat.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyproject_hooks/_impl.py": [
        {
            "type": "function",
            "name": "write_json",
            "args": [
                "obj",
                "path",
                "**kwargs"
            ],
            "lineno": 13
        },
        {
            "type": "function",
            "name": "read_json",
            "args": [
                "path"
            ],
            "lineno": 18
        },
        {
            "type": "class",
            "name": "BackendUnavailable",
            "methods": [
                "Method `__init__` (line 25)"
            ],
            "lineno": 23
        },
        {
            "type": "class",
            "name": "BackendInvalid",
            "methods": [
                "Method `__init__` (line 31)"
            ],
            "lineno": 29
        },
        {
            "type": "class",
            "name": "HookMissing",
            "methods": [
                "Method `__init__` (line 39)"
            ],
            "lineno": 37
        },
        {
            "type": "class",
            "name": "UnsupportedOperation",
            "methods": [
                "Method `__init__` (line 46)"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "default_subprocess_runner",
            "args": [
                "cmd",
                "cwd",
                "extra_environ"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "quiet_subprocess_runner",
            "args": [
                "cmd",
                "cwd",
                "extra_environ"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "norm_and_check",
            "args": [
                "source_tree",
                "requested"
            ],
            "lineno": 74
        },
        {
            "type": "class",
            "name": "BuildBackendHookCaller",
            "methods": [
                "Method `__init__` (line 102)",
                "Method `subprocess_runner` (line 134)",
                "Method `_supported_features` (line 151)",
                "Method `get_requires_for_build_wheel` (line 155)",
                "Method `prepare_metadata_for_build_wheel` (line 170)",
                "Method `build_wheel` (line 192)",
                "Method `get_requires_for_build_editable` (line 215)",
                "Method `prepare_metadata_for_build_editable` (line 230)",
                "Method `build_editable` (line 252)",
                "Method `get_requires_for_build_sdist` (line 276)",
                "Method `build_sdist` (line 286)",
                "Method `_call_hook` (line 297)"
            ],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "traceback"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "backend_name",
                "backend_path",
                "message"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "hook_name"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "traceback"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "source_dir",
                "build_backend",
                "backend_path",
                "runner",
                "python_executable"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "subprocess_runner",
            "args": [
                "self",
                "runner"
            ],
            "lineno": 134
        },
        {
            "type": "function",
            "name": "_supported_features",
            "args": [
                "self"
            ],
            "lineno": 151
        },
        {
            "type": "function",
            "name": "get_requires_for_build_wheel",
            "args": [
                "self",
                "config_settings"
            ],
            "lineno": 155
        },
        {
            "type": "function",
            "name": "prepare_metadata_for_build_wheel",
            "args": [
                "self",
                "metadata_directory",
                "config_settings",
                "_allow_fallback"
            ],
            "lineno": 170
        },
        {
            "type": "function",
            "name": "build_wheel",
            "args": [
                "self",
                "wheel_directory",
                "config_settings",
                "metadata_directory"
            ],
            "lineno": 192
        },
        {
            "type": "function",
            "name": "get_requires_for_build_editable",
            "args": [
                "self",
                "config_settings"
            ],
            "lineno": 215
        },
        {
            "type": "function",
            "name": "prepare_metadata_for_build_editable",
            "args": [
                "self",
                "metadata_directory",
                "config_settings",
                "_allow_fallback"
            ],
            "lineno": 230
        },
        {
            "type": "function",
            "name": "build_editable",
            "args": [
                "self",
                "wheel_directory",
                "config_settings",
                "metadata_directory"
            ],
            "lineno": 252
        },
        {
            "type": "function",
            "name": "get_requires_for_build_sdist",
            "args": [
                "self",
                "config_settings"
            ],
            "lineno": 276
        },
        {
            "type": "function",
            "name": "build_sdist",
            "args": [
                "self",
                "sdist_directory",
                "config_settings"
            ],
            "lineno": 286
        },
        {
            "type": "function",
            "name": "_call_hook",
            "args": [
                "self",
                "hook_name",
                "kwargs"
            ],
            "lineno": 297
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyproject_hooks/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/adapters.py": [
        {
            "type": "class",
            "name": "BaseAdapter",
            "methods": [
                "Method `__init__` (line 73)",
                "Method `send` (line 76)",
                "Method `close` (line 95)"
            ],
            "lineno": 70
        },
        {
            "type": "class",
            "name": "HTTPAdapter",
            "methods": [
                "Method `__init__` (line 135)",
                "Method `__getstate__` (line 157)",
                "Method `__setstate__` (line 160)",
                "Method `init_poolmanager` (line 173)",
                "Method `proxy_manager_for` (line 199)",
                "Method `cert_verify` (line 237)",
                "Method `build_response` (line 294)",
                "Method `get_connection` (line 331)",
                "Method `close` (line 360)",
                "Method `request_url` (line 370)",
                "Method `add_headers` (line 399)",
                "Method `proxy_headers` (line 413)",
                "Method `send` (line 434)"
            ],
            "lineno": 100
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 73
        },
        {
            "type": "function",
            "name": "send",
            "args": [
                "self",
                "request",
                "stream",
                "timeout",
                "verify",
                "cert",
                "proxies"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 95
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "pool_connections",
                "pool_maxsize",
                "max_retries",
                "pool_block"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "__getstate__",
            "args": [
                "self"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "__setstate__",
            "args": [
                "self",
                "state"
            ],
            "lineno": 160
        },
        {
            "type": "function",
            "name": "init_poolmanager",
            "args": [
                "self",
                "connections",
                "maxsize",
                "block",
                "**pool_kwargs"
            ],
            "lineno": 173
        },
        {
            "type": "function",
            "name": "proxy_manager_for",
            "args": [
                "self",
                "proxy",
                "**proxy_kwargs"
            ],
            "lineno": 199
        },
        {
            "type": "function",
            "name": "cert_verify",
            "args": [
                "self",
                "conn",
                "url",
                "verify",
                "cert"
            ],
            "lineno": 237
        },
        {
            "type": "function",
            "name": "build_response",
            "args": [
                "self",
                "req",
                "resp"
            ],
            "lineno": 294
        },
        {
            "type": "function",
            "name": "get_connection",
            "args": [
                "self",
                "url",
                "proxies"
            ],
            "lineno": 331
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 360
        },
        {
            "type": "function",
            "name": "request_url",
            "args": [
                "self",
                "request",
                "proxies"
            ],
            "lineno": 370
        },
        {
            "type": "function",
            "name": "add_headers",
            "args": [
                "self",
                "request",
                "**kwargs"
            ],
            "lineno": 399
        },
        {
            "type": "function",
            "name": "proxy_headers",
            "args": [
                "self",
                "proxy"
            ],
            "lineno": 413
        },
        {
            "type": "function",
            "name": "send",
            "args": [
                "self",
                "request",
                "stream",
                "timeout",
                "verify",
                "cert",
                "proxies"
            ],
            "lineno": 434
        },
        {
            "type": "function",
            "name": "SOCKSProxyManager",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 60
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/api.py": [
        {
            "type": "function",
            "name": "request",
            "args": [
                "method",
                "url",
                "**kwargs"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "url",
                "params",
                "**kwargs"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "options",
            "args": [
                "url",
                "**kwargs"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "head",
            "args": [
                "url",
                "**kwargs"
            ],
            "lineno": 88
        },
        {
            "type": "function",
            "name": "post",
            "args": [
                "url",
                "data",
                "json",
                "**kwargs"
            ],
            "lineno": 103
        },
        {
            "type": "function",
            "name": "put",
            "args": [
                "url",
                "data",
                "**kwargs"
            ],
            "lineno": 118
        },
        {
            "type": "function",
            "name": "patch",
            "args": [
                "url",
                "data",
                "**kwargs"
            ],
            "lineno": 133
        },
        {
            "type": "function",
            "name": "delete",
            "args": [
                "url",
                "**kwargs"
            ],
            "lineno": 148
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/auth.py": [
        {
            "type": "function",
            "name": "_basic_auth_str",
            "args": [
                "username",
                "password"
            ],
            "lineno": 25
        },
        {
            "type": "class",
            "name": "AuthBase",
            "methods": [
                "Method `__call__` (line 72)"
            ],
            "lineno": 69
        },
        {
            "type": "class",
            "name": "HTTPBasicAuth",
            "methods": [
                "Method `__init__` (line 79)",
                "Method `__eq__` (line 83)",
                "Method `__ne__` (line 91)",
                "Method `__call__` (line 94)"
            ],
            "lineno": 76
        },
        {
            "type": "class",
            "name": "HTTPProxyAuth",
            "methods": [
                "Method `__call__` (line 102)"
            ],
            "lineno": 99
        },
        {
            "type": "class",
            "name": "HTTPDigestAuth",
            "methods": [
                "Method `__init__` (line 110)",
                "Method `init_per_thread_state` (line 116)",
                "Method `build_digest_header` (line 126)",
                "Method `handle_redirect` (line 236)",
                "Method `handle_401` (line 241)",
                "Method `__call__` (line 286)",
                "Method `__eq__` (line 306)",
                "Method `__ne__` (line 314)"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "r"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "username",
                "password"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "__ne__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "r"
            ],
            "lineno": 94
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "r"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "username",
                "password"
            ],
            "lineno": 110
        },
        {
            "type": "function",
            "name": "init_per_thread_state",
            "args": [
                "self"
            ],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "build_digest_header",
            "args": [
                "self",
                "method",
                "url"
            ],
            "lineno": 126
        },
        {
            "type": "function",
            "name": "handle_redirect",
            "args": [
                "self",
                "r",
                "**kwargs"
            ],
            "lineno": 236
        },
        {
            "type": "function",
            "name": "handle_401",
            "args": [
                "self",
                "r",
                "**kwargs"
            ],
            "lineno": 241
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "r"
            ],
            "lineno": 286
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 306
        },
        {
            "type": "function",
            "name": "__ne__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 314
        },
        {
            "type": "function",
            "name": "md5_utf8",
            "args": [
                "x"
            ],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "sha_utf8",
            "args": [
                "x"
            ],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "sha256_utf8",
            "args": [
                "x"
            ],
            "lineno": 161
        },
        {
            "type": "function",
            "name": "sha512_utf8",
            "args": [
                "x"
            ],
            "lineno": 169
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/certs.py": [
        {
            "type": "function",
            "name": "where",
            "args": [],
            "lineno": 20
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/compat.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/cookies.py": [
        {
            "type": "class",
            "name": "MockRequest",
            "methods": [
                "Method `__init__` (line 35)",
                "Method `get_type` (line 40)",
                "Method `get_host` (line 43)",
                "Method `get_origin_req_host` (line 46)",
                "Method `get_full_url` (line 49)",
                "Method `is_unverifiable` (line 69)",
                "Method `has_header` (line 72)",
                "Method `get_header` (line 75)",
                "Method `add_header` (line 78)",
                "Method `add_unredirected_header` (line 84)",
                "Method `get_new_headers` (line 87)",
                "Method `unverifiable` (line 91)",
                "Method `origin_req_host` (line 95)",
                "Method `host` (line 99)"
            ],
            "lineno": 23
        },
        {
            "type": "class",
            "name": "MockResponse",
            "methods": [
                "Method `__init__` (line 110)",
                "Method `info` (line 117)",
                "Method `getheaders` (line 120)"
            ],
            "lineno": 103
        },
        {
            "type": "function",
            "name": "extract_cookies_to_jar",
            "args": [
                "jar",
                "request",
                "response"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "get_cookie_header",
            "args": [
                "jar",
                "request"
            ],
            "lineno": 140
        },
        {
            "type": "function",
            "name": "remove_cookie_by_name",
            "args": [
                "cookiejar",
                "name",
                "domain",
                "path"
            ],
            "lineno": 151
        },
        {
            "type": "class",
            "name": "CookieConflictError",
            "methods": null,
            "lineno": 170
        },
        {
            "type": "class",
            "name": "RequestsCookieJar",
            "methods": [
                "Method `get` (line 194)",
                "Method `set` (line 206)",
                "Method `iterkeys` (line 225)",
                "Method `keys` (line 234)",
                "Method `itervalues` (line 242)",
                "Method `values` (line 251)",
                "Method `iteritems` (line 259)",
                "Method `items` (line 268)",
                "Method `list_domains` (line 277)",
                "Method `list_paths` (line 285)",
                "Method `multiple_domains` (line 293)",
                "Method `get_dict` (line 306)",
                "Method `__contains__` (line 321)",
                "Method `__getitem__` (line 327)",
                "Method `__setitem__` (line 336)",
                "Method `__delitem__` (line 343)",
                "Method `set_cookie` (line 349)",
                "Method `update` (line 358)",
                "Method `_find` (line 366)",
                "Method `_find_no_duplicates` (line 386)",
                "Method `__getstate__` (line 415)",
                "Method `__setstate__` (line 422)",
                "Method `copy` (line 428)",
                "Method `get_policy` (line 435)"
            ],
            "lineno": 176
        },
        {
            "type": "function",
            "name": "_copy_cookie_jar",
            "args": [
                "jar"
            ],
            "lineno": 440
        },
        {
            "type": "function",
            "name": "create_cookie",
            "args": [
                "name",
                "value",
                "**kwargs"
            ],
            "lineno": 455
        },
        {
            "type": "function",
            "name": "morsel_to_cookie",
            "args": [
                "morsel"
            ],
            "lineno": 492
        },
        {
            "type": "function",
            "name": "cookiejar_from_dict",
            "args": [
                "cookie_dict",
                "cookiejar",
                "overwrite"
            ],
            "lineno": 521
        },
        {
            "type": "function",
            "name": "merge_cookies",
            "args": [
                "cookiejar",
                "cookies"
            ],
            "lineno": 542
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "request"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "get_type",
            "args": [
                "self"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "get_host",
            "args": [
                "self"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "get_origin_req_host",
            "args": [
                "self"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "get_full_url",
            "args": [
                "self"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "is_unverifiable",
            "args": [
                "self"
            ],
            "lineno": 69
        },
        {
            "type": "function",
            "name": "has_header",
            "args": [
                "self",
                "name"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "get_header",
            "args": [
                "self",
                "name",
                "default"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "add_header",
            "args": [
                "self",
                "key",
                "val"
            ],
            "lineno": 78
        },
        {
            "type": "function",
            "name": "add_unredirected_header",
            "args": [
                "self",
                "name",
                "value"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "get_new_headers",
            "args": [
                "self"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "unverifiable",
            "args": [
                "self"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "origin_req_host",
            "args": [
                "self"
            ],
            "lineno": 95
        },
        {
            "type": "function",
            "name": "host",
            "args": [
                "self"
            ],
            "lineno": 99
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "headers"
            ],
            "lineno": 110
        },
        {
            "type": "function",
            "name": "info",
            "args": [
                "self"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "getheaders",
            "args": [
                "self",
                "name"
            ],
            "lineno": 120
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "name",
                "default",
                "domain",
                "path"
            ],
            "lineno": 194
        },
        {
            "type": "function",
            "name": "set",
            "args": [
                "self",
                "name",
                "value",
                "**kwargs"
            ],
            "lineno": 206
        },
        {
            "type": "function",
            "name": "iterkeys",
            "args": [
                "self"
            ],
            "lineno": 225
        },
        {
            "type": "function",
            "name": "keys",
            "args": [
                "self"
            ],
            "lineno": 234
        },
        {
            "type": "function",
            "name": "itervalues",
            "args": [
                "self"
            ],
            "lineno": 242
        },
        {
            "type": "function",
            "name": "values",
            "args": [
                "self"
            ],
            "lineno": 251
        },
        {
            "type": "function",
            "name": "iteritems",
            "args": [
                "self"
            ],
            "lineno": 259
        },
        {
            "type": "function",
            "name": "items",
            "args": [
                "self"
            ],
            "lineno": 268
        },
        {
            "type": "function",
            "name": "list_domains",
            "args": [
                "self"
            ],
            "lineno": 277
        },
        {
            "type": "function",
            "name": "list_paths",
            "args": [
                "self"
            ],
            "lineno": 285
        },
        {
            "type": "function",
            "name": "multiple_domains",
            "args": [
                "self"
            ],
            "lineno": 293
        },
        {
            "type": "function",
            "name": "get_dict",
            "args": [
                "self",
                "domain",
                "path"
            ],
            "lineno": 306
        },
        {
            "type": "function",
            "name": "__contains__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 321
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 327
        },
        {
            "type": "function",
            "name": "__setitem__",
            "args": [
                "self",
                "name",
                "value"
            ],
            "lineno": 336
        },
        {
            "type": "function",
            "name": "__delitem__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 343
        },
        {
            "type": "function",
            "name": "set_cookie",
            "args": [
                "self",
                "cookie",
                "*args",
                "**kwargs"
            ],
            "lineno": 349
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "other"
            ],
            "lineno": 358
        },
        {
            "type": "function",
            "name": "_find",
            "args": [
                "self",
                "name",
                "domain",
                "path"
            ],
            "lineno": 366
        },
        {
            "type": "function",
            "name": "_find_no_duplicates",
            "args": [
                "self",
                "name",
                "domain",
                "path"
            ],
            "lineno": 386
        },
        {
            "type": "function",
            "name": "__getstate__",
            "args": [
                "self"
            ],
            "lineno": 415
        },
        {
            "type": "function",
            "name": "__setstate__",
            "args": [
                "self",
                "state"
            ],
            "lineno": 422
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 428
        },
        {
            "type": "function",
            "name": "get_policy",
            "args": [
                "self"
            ],
            "lineno": 435
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/exceptions.py": [
        {
            "type": "class",
            "name": "RequestException",
            "methods": [
                "Method `__init__` (line 17)"
            ],
            "lineno": 12
        },
        {
            "type": "class",
            "name": "InvalidJSONError",
            "methods": null,
            "lineno": 27
        },
        {
            "type": "class",
            "name": "JSONDecodeError",
            "methods": [
                "Method `__init__` (line 34)"
            ],
            "lineno": 31
        },
        {
            "type": "class",
            "name": "HTTPError",
            "methods": null,
            "lineno": 45
        },
        {
            "type": "class",
            "name": "ConnectionError",
            "methods": null,
            "lineno": 49
        },
        {
            "type": "class",
            "name": "ProxyError",
            "methods": null,
            "lineno": 53
        },
        {
            "type": "class",
            "name": "SSLError",
            "methods": null,
            "lineno": 57
        },
        {
            "type": "class",
            "name": "Timeout",
            "methods": null,
            "lineno": 61
        },
        {
            "type": "class",
            "name": "ConnectTimeout",
            "methods": null,
            "lineno": 70
        },
        {
            "type": "class",
            "name": "ReadTimeout",
            "methods": null,
            "lineno": 77
        },
        {
            "type": "class",
            "name": "URLRequired",
            "methods": null,
            "lineno": 81
        },
        {
            "type": "class",
            "name": "TooManyRedirects",
            "methods": null,
            "lineno": 85
        },
        {
            "type": "class",
            "name": "MissingSchema",
            "methods": null,
            "lineno": 89
        },
        {
            "type": "class",
            "name": "InvalidSchema",
            "methods": null,
            "lineno": 93
        },
        {
            "type": "class",
            "name": "InvalidURL",
            "methods": null,
            "lineno": 97
        },
        {
            "type": "class",
            "name": "InvalidHeader",
            "methods": null,
            "lineno": 101
        },
        {
            "type": "class",
            "name": "InvalidProxyURL",
            "methods": null,
            "lineno": 105
        },
        {
            "type": "class",
            "name": "ChunkedEncodingError",
            "methods": null,
            "lineno": 109
        },
        {
            "type": "class",
            "name": "ContentDecodingError",
            "methods": null,
            "lineno": 113
        },
        {
            "type": "class",
            "name": "StreamConsumedError",
            "methods": null,
            "lineno": 117
        },
        {
            "type": "class",
            "name": "RetryError",
            "methods": null,
            "lineno": 121
        },
        {
            "type": "class",
            "name": "UnrewindableBodyError",
            "methods": null,
            "lineno": 125
        },
        {
            "type": "class",
            "name": "RequestsWarning",
            "methods": null,
            "lineno": 132
        },
        {
            "type": "class",
            "name": "FileModeWarning",
            "methods": null,
            "lineno": 136
        },
        {
            "type": "class",
            "name": "RequestsDependencyWarning",
            "methods": null,
            "lineno": 140
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 34
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/help.py": [
        {
            "type": "function",
            "name": "_implementation",
            "args": [],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "info",
            "args": [],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "main",
            "args": [],
            "lineno": 125
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/hooks.py": [
        {
            "type": "function",
            "name": "default_hooks",
            "args": [],
            "lineno": 15
        },
        {
            "type": "function",
            "name": "dispatch_hook",
            "args": [
                "key",
                "hooks",
                "hook_data",
                "**kwargs"
            ],
            "lineno": 22
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/models.py": [
        {
            "type": "class",
            "name": "RequestEncodingMixin",
            "methods": [
                "Method `path_url` (line 86)",
                "Method `_encode_params` (line 107)",
                "Method `_encode_files` (line 137)"
            ],
            "lineno": 84
        },
        {
            "type": "class",
            "name": "RequestHooksMixin",
            "methods": [
                "Method `register_hook` (line 207)",
                "Method `deregister_hook` (line 218)"
            ],
            "lineno": 206
        },
        {
            "type": "class",
            "name": "Request",
            "methods": [
                "Method `__init__` (line 258)",
                "Method `__repr__` (line 293)",
                "Method `prepare` (line 296)"
            ],
            "lineno": 230
        },
        {
            "type": "class",
            "name": "PreparedRequest",
            "methods": [
                "Method `__init__` (line 335)",
                "Method `prepare` (line 352)",
                "Method `__repr__` (line 380)",
                "Method `copy` (line 383)",
                "Method `prepare_method` (line 394)",
                "Method `_get_idna_encoded_host` (line 401)",
                "Method `prepare_url` (line 410)",
                "Method `prepare_headers` (line 484)",
                "Method `prepare_body` (line 495)",
                "Method `prepare_content_length` (line 573)",
                "Method `prepare_auth` (line 589)",
                "Method `prepare_cookies` (line 611)",
                "Method `prepare_hooks` (line 631)"
            ],
            "lineno": 314
        },
        {
            "type": "class",
            "name": "Response",
            "methods": [
                "Method `__init__` (line 659)",
                "Method `__enter__` (line 706)",
                "Method `__exit__` (line 709)",
                "Method `__getstate__` (line 712)",
                "Method `__setstate__` (line 720)",
                "Method `__repr__` (line 728)",
                "Method `__bool__` (line 731)",
                "Method `__nonzero__` (line 741)",
                "Method `__iter__` (line 751)",
                "Method `ok` (line 756)",
                "Method `is_redirect` (line 771)",
                "Method `is_permanent_redirect` (line 778)",
                "Method `next` (line 786)",
                "Method `apparent_encoding` (line 791)",
                "Method `iter_content` (line 795)",
                "Method `iter_lines` (line 853)",
                "Method `content` (line 888)",
                "Method `text` (line 907)",
                "Method `json` (line 944)",
                "Method `links` (line 978)",
                "Method `raise_for_status` (line 994)",
                "Method `close` (line 1023)"
            ],
            "lineno": 641
        },
        {
            "type": "function",
            "name": "path_url",
            "args": [
                "self"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "_encode_params",
            "args": [
                "data"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "_encode_files",
            "args": [
                "files",
                "data"
            ],
            "lineno": 137
        },
        {
            "type": "function",
            "name": "register_hook",
            "args": [
                "self",
                "event",
                "hook"
            ],
            "lineno": 207
        },
        {
            "type": "function",
            "name": "deregister_hook",
            "args": [
                "self",
                "event",
                "hook"
            ],
            "lineno": 218
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "method",
                "url",
                "headers",
                "files",
                "data",
                "params",
                "auth",
                "cookies",
                "hooks",
                "json"
            ],
            "lineno": 258
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 293
        },
        {
            "type": "function",
            "name": "prepare",
            "args": [
                "self"
            ],
            "lineno": 296
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 335
        },
        {
            "type": "function",
            "name": "prepare",
            "args": [
                "self",
                "method",
                "url",
                "headers",
                "files",
                "data",
                "params",
                "auth",
                "cookies",
                "hooks",
                "json"
            ],
            "lineno": 352
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 380
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 383
        },
        {
            "type": "function",
            "name": "prepare_method",
            "args": [
                "self",
                "method"
            ],
            "lineno": 394
        },
        {
            "type": "function",
            "name": "_get_idna_encoded_host",
            "args": [
                "host"
            ],
            "lineno": 401
        },
        {
            "type": "function",
            "name": "prepare_url",
            "args": [
                "self",
                "url",
                "params"
            ],
            "lineno": 410
        },
        {
            "type": "function",
            "name": "prepare_headers",
            "args": [
                "self",
                "headers"
            ],
            "lineno": 484
        },
        {
            "type": "function",
            "name": "prepare_body",
            "args": [
                "self",
                "data",
                "files",
                "json"
            ],
            "lineno": 495
        },
        {
            "type": "function",
            "name": "prepare_content_length",
            "args": [
                "self",
                "body"
            ],
            "lineno": 573
        },
        {
            "type": "function",
            "name": "prepare_auth",
            "args": [
                "self",
                "auth",
                "url"
            ],
            "lineno": 589
        },
        {
            "type": "function",
            "name": "prepare_cookies",
            "args": [
                "self",
                "cookies"
            ],
            "lineno": 611
        },
        {
            "type": "function",
            "name": "prepare_hooks",
            "args": [
                "self",
                "hooks"
            ],
            "lineno": 631
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 659
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 706
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "*args"
            ],
            "lineno": 709
        },
        {
            "type": "function",
            "name": "__getstate__",
            "args": [
                "self"
            ],
            "lineno": 712
        },
        {
            "type": "function",
            "name": "__setstate__",
            "args": [
                "self",
                "state"
            ],
            "lineno": 720
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 728
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 731
        },
        {
            "type": "function",
            "name": "__nonzero__",
            "args": [
                "self"
            ],
            "lineno": 741
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 751
        },
        {
            "type": "function",
            "name": "ok",
            "args": [
                "self"
            ],
            "lineno": 756
        },
        {
            "type": "function",
            "name": "is_redirect",
            "args": [
                "self"
            ],
            "lineno": 771
        },
        {
            "type": "function",
            "name": "is_permanent_redirect",
            "args": [
                "self"
            ],
            "lineno": 778
        },
        {
            "type": "function",
            "name": "next",
            "args": [
                "self"
            ],
            "lineno": 786
        },
        {
            "type": "function",
            "name": "apparent_encoding",
            "args": [
                "self"
            ],
            "lineno": 791
        },
        {
            "type": "function",
            "name": "iter_content",
            "args": [
                "self",
                "chunk_size",
                "decode_unicode"
            ],
            "lineno": 795
        },
        {
            "type": "function",
            "name": "iter_lines",
            "args": [
                "self",
                "chunk_size",
                "decode_unicode",
                "delimiter"
            ],
            "lineno": 853
        },
        {
            "type": "function",
            "name": "content",
            "args": [
                "self"
            ],
            "lineno": 888
        },
        {
            "type": "function",
            "name": "text",
            "args": [
                "self"
            ],
            "lineno": 907
        },
        {
            "type": "function",
            "name": "json",
            "args": [
                "self",
                "**kwargs"
            ],
            "lineno": 944
        },
        {
            "type": "function",
            "name": "links",
            "args": [
                "self"
            ],
            "lineno": 978
        },
        {
            "type": "function",
            "name": "raise_for_status",
            "args": [
                "self"
            ],
            "lineno": 994
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 1023
        },
        {
            "type": "function",
            "name": "generate",
            "args": [],
            "lineno": 812
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/packages.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/sessions.py": [
        {
            "type": "function",
            "name": "merge_setting",
            "args": [
                "request_setting",
                "session_setting",
                "dict_class"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "merge_hooks",
            "args": [
                "request_hooks",
                "session_hooks",
                "dict_class"
            ],
            "lineno": 91
        },
        {
            "type": "class",
            "name": "SessionRedirectMixin",
            "methods": [
                "Method `get_redirect_target` (line 107)",
                "Method `should_strip_auth` (line 127)",
                "Method `resolve_redirects` (line 159)",
                "Method `rebuild_auth` (line 283)",
                "Method `rebuild_proxies` (line 303)",
                "Method `rebuild_method` (line 334)"
            ],
            "lineno": 106
        },
        {
            "type": "class",
            "name": "Session",
            "methods": [
                "Method `__init__` (line 391)",
                "Method `__enter__` (line 453)",
                "Method `__exit__` (line 456)",
                "Method `prepare_request` (line 459)",
                "Method `request` (line 502)",
                "Method `get` (line 593)",
                "Method `options` (line 604)",
                "Method `head` (line 615)",
                "Method `post` (line 626)",
                "Method `put` (line 639)",
                "Method `patch` (line 651)",
                "Method `delete` (line 663)",
                "Method `send` (line 673)",
                "Method `merge_environment_settings` (line 751)",
                "Method `get_adapter` (line 782)",
                "Method `close` (line 796)",
                "Method `mount` (line 801)",
                "Method `__getstate__` (line 812)",
                "Method `__setstate__` (line 816)"
            ],
            "lineno": 357
        },
        {
            "type": "function",
            "name": "session",
            "args": [],
            "lineno": 821
        },
        {
            "type": "function",
            "name": "get_redirect_target",
            "args": [
                "self",
                "resp"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "should_strip_auth",
            "args": [
                "self",
                "old_url",
                "new_url"
            ],
            "lineno": 127
        },
        {
            "type": "function",
            "name": "resolve_redirects",
            "args": [
                "self",
                "resp",
                "req",
                "stream",
                "timeout",
                "verify",
                "cert",
                "proxies",
                "yield_requests",
                "**adapter_kwargs"
            ],
            "lineno": 159
        },
        {
            "type": "function",
            "name": "rebuild_auth",
            "args": [
                "self",
                "prepared_request",
                "response"
            ],
            "lineno": 283
        },
        {
            "type": "function",
            "name": "rebuild_proxies",
            "args": [
                "self",
                "prepared_request",
                "proxies"
            ],
            "lineno": 303
        },
        {
            "type": "function",
            "name": "rebuild_method",
            "args": [
                "self",
                "prepared_request",
                "response"
            ],
            "lineno": 334
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 391
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 453
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "*args"
            ],
            "lineno": 456
        },
        {
            "type": "function",
            "name": "prepare_request",
            "args": [
                "self",
                "request"
            ],
            "lineno": 459
        },
        {
            "type": "function",
            "name": "request",
            "args": [
                "self",
                "method",
                "url",
                "params",
                "data",
                "headers",
                "cookies",
                "files",
                "auth",
                "timeout",
                "allow_redirects",
                "proxies",
                "hooks",
                "stream",
                "verify",
                "cert",
                "json"
            ],
            "lineno": 502
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "url",
                "**kwargs"
            ],
            "lineno": 593
        },
        {
            "type": "function",
            "name": "options",
            "args": [
                "self",
                "url",
                "**kwargs"
            ],
            "lineno": 604
        },
        {
            "type": "function",
            "name": "head",
            "args": [
                "self",
                "url",
                "**kwargs"
            ],
            "lineno": 615
        },
        {
            "type": "function",
            "name": "post",
            "args": [
                "self",
                "url",
                "data",
                "json",
                "**kwargs"
            ],
            "lineno": 626
        },
        {
            "type": "function",
            "name": "put",
            "args": [
                "self",
                "url",
                "data",
                "**kwargs"
            ],
            "lineno": 639
        },
        {
            "type": "function",
            "name": "patch",
            "args": [
                "self",
                "url",
                "data",
                "**kwargs"
            ],
            "lineno": 651
        },
        {
            "type": "function",
            "name": "delete",
            "args": [
                "self",
                "url",
                "**kwargs"
            ],
            "lineno": 663
        },
        {
            "type": "function",
            "name": "send",
            "args": [
                "self",
                "request",
                "**kwargs"
            ],
            "lineno": 673
        },
        {
            "type": "function",
            "name": "merge_environment_settings",
            "args": [
                "self",
                "url",
                "proxies",
                "stream",
                "verify",
                "cert"
            ],
            "lineno": 751
        },
        {
            "type": "function",
            "name": "get_adapter",
            "args": [
                "self",
                "url"
            ],
            "lineno": 782
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 796
        },
        {
            "type": "function",
            "name": "mount",
            "args": [
                "self",
                "prefix",
                "adapter"
            ],
            "lineno": 801
        },
        {
            "type": "function",
            "name": "__getstate__",
            "args": [
                "self"
            ],
            "lineno": 812
        },
        {
            "type": "function",
            "name": "__setstate__",
            "args": [
                "self",
                "state"
            ],
            "lineno": 816
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/status_codes.py": [
        {
            "type": "function",
            "name": "_init",
            "args": [],
            "lineno": 109
        },
        {
            "type": "function",
            "name": "doc",
            "args": [
                "code"
            ],
            "lineno": 116
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/structures.py": [
        {
            "type": "class",
            "name": "CaseInsensitiveDict",
            "methods": [
                "Method `__init__` (line 40)",
                "Method `__setitem__` (line 46)",
                "Method `__getitem__` (line 51)",
                "Method `__delitem__` (line 54)",
                "Method `__iter__` (line 57)",
                "Method `__len__` (line 60)",
                "Method `lower_items` (line 63)",
                "Method `__eq__` (line 67)",
                "Method `copy` (line 76)",
                "Method `__repr__` (line 79)"
            ],
            "lineno": 13
        },
        {
            "type": "class",
            "name": "LookupDict",
            "methods": [
                "Method `__init__` (line 86)",
                "Method `__repr__` (line 90)",
                "Method `__getitem__` (line 93)",
                "Method `get` (line 98)"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "data",
                "**kwargs"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "__setitem__",
            "args": [
                "self",
                "key",
                "value"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "__delitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "__len__",
            "args": [
                "self"
            ],
            "lineno": 60
        },
        {
            "type": "function",
            "name": "lower_items",
            "args": [
                "self"
            ],
            "lineno": 63
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 90
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "key",
                "default"
            ],
            "lineno": 98
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/utils.py": [
        {
            "type": "function",
            "name": "dict_to_sequence",
            "args": [
                "d"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "super_len",
            "args": [
                "o"
            ],
            "lineno": 133
        },
        {
            "type": "function",
            "name": "get_netrc_auth",
            "args": [
                "url",
                "raise_errors"
            ],
            "lineno": 199
        },
        {
            "type": "function",
            "name": "guess_filename",
            "args": [
                "obj"
            ],
            "lineno": 256
        },
        {
            "type": "function",
            "name": "extract_zipped_paths",
            "args": [
                "path"
            ],
            "lineno": 263
        },
        {
            "type": "function",
            "name": "atomic_open",
            "args": [
                "filename"
            ],
            "lineno": 301
        },
        {
            "type": "function",
            "name": "from_key_val_list",
            "args": [
                "value"
            ],
            "lineno": 313
        },
        {
            "type": "function",
            "name": "to_key_val_list",
            "args": [
                "value"
            ],
            "lineno": 340
        },
        {
            "type": "function",
            "name": "parse_list_header",
            "args": [
                "value"
            ],
            "lineno": 370
        },
        {
            "type": "function",
            "name": "parse_dict_header",
            "args": [
                "value"
            ],
            "lineno": 402
        },
        {
            "type": "function",
            "name": "unquote_header_value",
            "args": [
                "value",
                "is_filename"
            ],
            "lineno": 437
        },
        {
            "type": "function",
            "name": "dict_from_cookiejar",
            "args": [
                "cj"
            ],
            "lineno": 462
        },
        {
            "type": "function",
            "name": "add_dict_to_cookiejar",
            "args": [
                "cj",
                "cookie_dict"
            ],
            "lineno": 477
        },
        {
            "type": "function",
            "name": "get_encodings_from_content",
            "args": [
                "content"
            ],
            "lineno": 488
        },
        {
            "type": "function",
            "name": "_parse_content_type_header",
            "args": [
                "header"
            ],
            "lineno": 513
        },
        {
            "type": "function",
            "name": "get_encoding_from_headers",
            "args": [
                "headers"
            ],
            "lineno": 538
        },
        {
            "type": "function",
            "name": "stream_decode_response_unicode",
            "args": [
                "iterator",
                "r"
            ],
            "lineno": 563
        },
        {
            "type": "function",
            "name": "iter_slices",
            "args": [
                "string",
                "slice_length"
            ],
            "lineno": 580
        },
        {
            "type": "function",
            "name": "get_unicode_from_response",
            "args": [
                "r"
            ],
            "lineno": 590
        },
        {
            "type": "function",
            "name": "unquote_unreserved",
            "args": [
                "uri"
            ],
            "lineno": 635
        },
        {
            "type": "function",
            "name": "requote_uri",
            "args": [
                "uri"
            ],
            "lineno": 659
        },
        {
            "type": "function",
            "name": "address_in_network",
            "args": [
                "ip",
                "net"
            ],
            "lineno": 681
        },
        {
            "type": "function",
            "name": "dotted_netmask",
            "args": [
                "mask"
            ],
            "lineno": 696
        },
        {
            "type": "function",
            "name": "is_ipv4_address",
            "args": [
                "string_ip"
            ],
            "lineno": 707
        },
        {
            "type": "function",
            "name": "is_valid_cidr",
            "args": [
                "string_network"
            ],
            "lineno": 718
        },
        {
            "type": "function",
            "name": "set_environ",
            "args": [
                "env_name",
                "value"
            ],
            "lineno": 743
        },
        {
            "type": "function",
            "name": "should_bypass_proxies",
            "args": [
                "url",
                "no_proxy"
            ],
            "lineno": 764
        },
        {
            "type": "function",
            "name": "get_environ_proxies",
            "args": [
                "url",
                "no_proxy"
            ],
            "lineno": 824
        },
        {
            "type": "function",
            "name": "select_proxy",
            "args": [
                "url",
                "proxies"
            ],
            "lineno": 836
        },
        {
            "type": "function",
            "name": "resolve_proxies",
            "args": [
                "request",
                "proxies",
                "trust_env"
            ],
            "lineno": 862
        },
        {
            "type": "function",
            "name": "default_user_agent",
            "args": [
                "name"
            ],
            "lineno": 889
        },
        {
            "type": "function",
            "name": "default_headers",
            "args": [],
            "lineno": 898
        },
        {
            "type": "function",
            "name": "parse_header_links",
            "args": [
                "value"
            ],
            "lineno": 912
        },
        {
            "type": "function",
            "name": "guess_json_utf",
            "args": [
                "data"
            ],
            "lineno": 955
        },
        {
            "type": "function",
            "name": "prepend_scheme_if_needed",
            "args": [
                "url",
                "new_scheme"
            ],
            "lineno": 987
        },
        {
            "type": "function",
            "name": "get_auth_from_url",
            "args": [
                "url"
            ],
            "lineno": 1016
        },
        {
            "type": "function",
            "name": "check_header_validity",
            "args": [
                "header"
            ],
            "lineno": 1032
        },
        {
            "type": "function",
            "name": "_validate_header_part",
            "args": [
                "header",
                "header_part",
                "header_validator_index"
            ],
            "lineno": 1043
        },
        {
            "type": "function",
            "name": "urldefragauth",
            "args": [
                "url"
            ],
            "lineno": 1062
        },
        {
            "type": "function",
            "name": "rewind_body",
            "args": [
                "prepared_request"
            ],
            "lineno": 1079
        },
        {
            "type": "function",
            "name": "proxy_bypass_registry",
            "args": [
                "host"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "proxy_bypass",
            "args": [
                "host"
            ],
            "lineno": 112
        },
        {
            "type": "function",
            "name": "get_proxy",
            "args": [
                "key"
            ],
            "lineno": 772
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/_internal_utils.py": [
        {
            "type": "function",
            "name": "to_native_string",
            "args": [
                "string",
                "encoding"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "unicode_is_ascii",
            "args": [
                "u_string"
            ],
            "lineno": 38
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/__init__.py": [
        {
            "type": "function",
            "name": "check_compatibility",
            "args": [
                "urllib3_version",
                "chardet_version",
                "charset_normalizer_version"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "_check_cryptography",
            "args": [
                "cryptography_version"
            ],
            "lineno": 86
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/requests/__version__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/resolvelib/providers.py": [
        {
            "type": "class",
            "name": "AbstractProvider",
            "methods": [
                "Method `identify` (line 4)",
                "Method `get_preference` (line 12)",
                "Method `find_matches` (line 63)",
                "Method `is_satisfied_by` (line 92)",
                "Method `get_dependencies` (line 103)"
            ],
            "lineno": 1
        },
        {
            "type": "class",
            "name": "AbstractResolver",
            "methods": [
                "Method `__init__` (line 117)",
                "Method `resolve` (line 121)"
            ],
            "lineno": 112
        },
        {
            "type": "function",
            "name": "identify",
            "args": [
                "self",
                "requirement_or_candidate"
            ],
            "lineno": 4
        },
        {
            "type": "function",
            "name": "get_preference",
            "args": [
                "self",
                "identifier",
                "resolutions",
                "candidates",
                "information",
                "backtrack_causes"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "find_matches",
            "args": [
                "self",
                "identifier",
                "requirements",
                "incompatibilities"
            ],
            "lineno": 63
        },
        {
            "type": "function",
            "name": "is_satisfied_by",
            "args": [
                "self",
                "requirement",
                "candidate"
            ],
            "lineno": 92
        },
        {
            "type": "function",
            "name": "get_dependencies",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 103
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "provider",
                "reporter"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "resolve",
            "args": [
                "self",
                "requirements",
                "**kwargs"
            ],
            "lineno": 121
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/resolvelib/reporters.py": [
        {
            "type": "class",
            "name": "BaseReporter",
            "methods": [
                "Method `starting` (line 4)",
                "Method `starting_round` (line 7)",
                "Method `ending_round` (line 13)",
                "Method `ending` (line 20)",
                "Method `adding_requirement` (line 23)",
                "Method `resolving_conflicts` (line 33)",
                "Method `rejecting_candidate` (line 39)",
                "Method `pinning` (line 42)"
            ],
            "lineno": 1
        },
        {
            "type": "function",
            "name": "starting",
            "args": [
                "self"
            ],
            "lineno": 4
        },
        {
            "type": "function",
            "name": "starting_round",
            "args": [
                "self",
                "index"
            ],
            "lineno": 7
        },
        {
            "type": "function",
            "name": "ending_round",
            "args": [
                "self",
                "index",
                "state"
            ],
            "lineno": 13
        },
        {
            "type": "function",
            "name": "ending",
            "args": [
                "self",
                "state"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "adding_requirement",
            "args": [
                "self",
                "requirement",
                "parent"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "resolving_conflicts",
            "args": [
                "self",
                "causes"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "rejecting_candidate",
            "args": [
                "self",
                "criterion",
                "candidate"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "pinning",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 42
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/resolvelib/resolvers.py": [
        {
            "type": "class",
            "name": "ResolverException",
            "methods": null,
            "lineno": 13
        },
        {
            "type": "class",
            "name": "RequirementsConflicted",
            "methods": [
                "Method `__init__` (line 22)",
                "Method `__str__` (line 26)"
            ],
            "lineno": 21
        },
        {
            "type": "class",
            "name": "InconsistentCandidate",
            "methods": [
                "Method `__init__` (line 33)",
                "Method `__str__` (line 38)"
            ],
            "lineno": 32
        },
        {
            "type": "class",
            "name": "Criterion",
            "methods": [
                "Method `__init__` (line 65)",
                "Method `__repr__` (line 70)",
                "Method `iter_requirement` (line 77)",
                "Method `iter_parent` (line 80)"
            ],
            "lineno": 45
        },
        {
            "type": "class",
            "name": "ResolutionError",
            "methods": null,
            "lineno": 84
        },
        {
            "type": "class",
            "name": "ResolutionImpossible",
            "methods": [
                "Method `__init__` (line 89)"
            ],
            "lineno": 88
        },
        {
            "type": "class",
            "name": "ResolutionTooDeep",
            "methods": [
                "Method `__init__` (line 96)"
            ],
            "lineno": 95
        },
        {
            "type": "class",
            "name": "Resolution",
            "methods": [
                "Method `__init__` (line 112)",
                "Method `state` (line 118)",
                "Method `_push_new_state` (line 124)",
                "Method `_add_to_criteria` (line 138)",
                "Method `_remove_information_from_criteria` (line 177)",
                "Method `_get_preference` (line 202)",
                "Method `_is_current_pin_satisfying` (line 217)",
                "Method `_get_updated_criteria` (line 227)",
                "Method `_attempt_to_pin_criterion` (line 233)",
                "Method `_backjump` (line 270)",
                "Method `resolve` (line 381)"
            ],
            "lineno": 105
        },
        {
            "type": "function",
            "name": "_has_route_to_root",
            "args": [
                "criteria",
                "key",
                "all_keys",
                "connected"
            ],
            "lineno": 460
        },
        {
            "type": "function",
            "name": "_build_result",
            "args": [
                "state"
            ],
            "lineno": 482
        },
        {
            "type": "class",
            "name": "Resolver",
            "methods": [
                "Method `resolve` (line 517)"
            ],
            "lineno": 512
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "criterion"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "candidate",
                "criterion"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "candidates",
                "information",
                "incompatibilities"
            ],
            "lineno": 65
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "iter_requirement",
            "args": [
                "self"
            ],
            "lineno": 77
        },
        {
            "type": "function",
            "name": "iter_parent",
            "args": [
                "self"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "causes"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "round_count"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "provider",
                "reporter"
            ],
            "lineno": 112
        },
        {
            "type": "function",
            "name": "state",
            "args": [
                "self"
            ],
            "lineno": 118
        },
        {
            "type": "function",
            "name": "_push_new_state",
            "args": [
                "self"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "_add_to_criteria",
            "args": [
                "self",
                "criteria",
                "requirement",
                "parent"
            ],
            "lineno": 138
        },
        {
            "type": "function",
            "name": "_remove_information_from_criteria",
            "args": [
                "self",
                "criteria",
                "parents"
            ],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "_get_preference",
            "args": [
                "self",
                "name"
            ],
            "lineno": 202
        },
        {
            "type": "function",
            "name": "_is_current_pin_satisfying",
            "args": [
                "self",
                "name",
                "criterion"
            ],
            "lineno": 217
        },
        {
            "type": "function",
            "name": "_get_updated_criteria",
            "args": [
                "self",
                "candidate"
            ],
            "lineno": 227
        },
        {
            "type": "function",
            "name": "_attempt_to_pin_criterion",
            "args": [
                "self",
                "name"
            ],
            "lineno": 233
        },
        {
            "type": "function",
            "name": "_backjump",
            "args": [
                "self",
                "causes"
            ],
            "lineno": 270
        },
        {
            "type": "function",
            "name": "resolve",
            "args": [
                "self",
                "requirements",
                "max_rounds"
            ],
            "lineno": 381
        },
        {
            "type": "function",
            "name": "resolve",
            "args": [
                "self",
                "requirements",
                "max_rounds"
            ],
            "lineno": 517
        },
        {
            "type": "function",
            "name": "_patch_criteria",
            "args": [],
            "lineno": 337
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/resolvelib/structs.py": [
        {
            "type": "class",
            "name": "DirectedGraph",
            "methods": [
                "Method `__init__` (line 9)",
                "Method `__iter__` (line 14)",
                "Method `__len__` (line 17)",
                "Method `__contains__` (line 20)",
                "Method `copy` (line 23)",
                "Method `add` (line 31)",
                "Method `remove` (line 39)",
                "Method `connected` (line 47)",
                "Method `connect` (line 50)",
                "Method `iter_edges` (line 60)",
                "Method `iter_children` (line 65)",
                "Method `iter_parents` (line 68)"
            ],
            "lineno": 6
        },
        {
            "type": "class",
            "name": "IteratorMapping",
            "methods": [
                "Method `__init__` (line 73)",
                "Method `__repr__` (line 78)",
                "Method `__bool__` (line 85)",
                "Method `__contains__` (line 90)",
                "Method `__getitem__` (line 93)",
                "Method `__iter__` (line 100)",
                "Method `__len__` (line 104)"
            ],
            "lineno": 72
        },
        {
            "type": "class",
            "name": "_FactoryIterableView",
            "methods": [
                "Method `__init__` (line 118)",
                "Method `__repr__` (line 122)",
                "Method `__bool__` (line 125)",
                "Method `__iter__` (line 134)"
            ],
            "lineno": 109
        },
        {
            "type": "class",
            "name": "_SequenceIterableView",
            "methods": [
                "Method `__init__` (line 149)",
                "Method `__repr__` (line 152)",
                "Method `__bool__` (line 155)",
                "Method `__iter__` (line 160)"
            ],
            "lineno": 142
        },
        {
            "type": "function",
            "name": "build_iter_view",
            "args": [
                "matches"
            ],
            "lineno": 164
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "__len__",
            "args": [
                "self"
            ],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "__contains__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "add",
            "args": [
                "self",
                "key"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "remove",
            "args": [
                "self",
                "key"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "connected",
            "args": [
                "self",
                "f",
                "t"
            ],
            "lineno": 47
        },
        {
            "type": "function",
            "name": "connect",
            "args": [
                "self",
                "f",
                "t"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "iter_edges",
            "args": [
                "self"
            ],
            "lineno": 60
        },
        {
            "type": "function",
            "name": "iter_children",
            "args": [
                "self",
                "key"
            ],
            "lineno": 65
        },
        {
            "type": "function",
            "name": "iter_parents",
            "args": [
                "self",
                "key"
            ],
            "lineno": 68
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "mapping",
                "accessor",
                "appends"
            ],
            "lineno": 73
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 78
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "__contains__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 90
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "k"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 100
        },
        {
            "type": "function",
            "name": "__len__",
            "args": [
                "self"
            ],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "factory"
            ],
            "lineno": 118
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 125
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 134
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "sequence"
            ],
            "lineno": 149
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 152
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 155
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 160
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/resolvelib/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/abc.py": [
        {
            "type": "class",
            "name": "RichRenderable",
            "methods": [
                "Method `__subclasshook__` (line 16)"
            ],
            "lineno": 4
        },
        {
            "type": "function",
            "name": "__subclasshook__",
            "args": [
                "cls",
                "other"
            ],
            "lineno": 16
        },
        {
            "type": "class",
            "name": "Foo",
            "methods": null,
            "lineno": 28
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/align.py": [
        {
            "type": "class",
            "name": "Align",
            "methods": [
                "Method `__init__` (line 39)",
                "Method `__repr__` (line 66)",
                "Method `left` (line 70)",
                "Method `center` (line 92)",
                "Method `right` (line 114)",
                "Method `__rich_console__` (line 135)",
                "Method `__rich_measure__` (line 227)"
            ],
            "lineno": 23
        },
        {
            "type": "class",
            "name": "VerticalCenter",
            "methods": [
                "Method `__init__` (line 245)",
                "Method `__repr__` (line 253)",
                "Method `__rich_console__` (line 256)",
                "Method `__rich_measure__` (line 283)"
            ],
            "lineno": 234
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "renderable",
                "align",
                "style"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "left",
            "args": [
                "cls",
                "renderable",
                "style"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "center",
            "args": [
                "cls",
                "renderable",
                "style"
            ],
            "lineno": 92
        },
        {
            "type": "function",
            "name": "right",
            "args": [
                "cls",
                "renderable",
                "style"
            ],
            "lineno": 114
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 227
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "renderable",
                "style"
            ],
            "lineno": 245
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 253
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 256
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 283
        },
        {
            "type": "function",
            "name": "generate_segments",
            "args": [],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "blank_lines",
            "args": [
                "count"
            ],
            "lineno": 198
        },
        {
            "type": "function",
            "name": "blank_lines",
            "args": [
                "count"
            ],
            "lineno": 270
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/ansi.py": [
        {
            "type": "class",
            "name": "_AnsiToken",
            "methods": null,
            "lineno": 19
        },
        {
            "type": "function",
            "name": "_ansi_tokenize",
            "args": [
                "ansi_text"
            ],
            "lineno": 27
        },
        {
            "type": "class",
            "name": "AnsiDecoder",
            "methods": [
                "Method `__init__` (line 122)",
                "Method `decode` (line 125)",
                "Method `decode_line` (line 137)"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "decode",
            "args": [
                "self",
                "terminal_text"
            ],
            "lineno": 125
        },
        {
            "type": "function",
            "name": "decode_line",
            "args": [
                "self",
                "line"
            ],
            "lineno": 137
        },
        {
            "type": "function",
            "name": "read",
            "args": [
                "fd"
            ],
            "lineno": 223
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/bar.py": [
        {
            "type": "class",
            "name": "Bar",
            "methods": [
                "Method `__init__` (line 29)",
                "Method `__repr__` (line 45)",
                "Method `__rich_console__` (line 48)",
                "Method `__rich_measure__` (line 87)"
            ],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "size",
                "begin",
                "end"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 87
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/box.py": [
        {
            "type": "class",
            "name": "Box",
            "methods": [
                "Method `__init__` (line 33)",
                "Method `__repr__` (line 67)",
                "Method `__str__` (line 70)",
                "Method `substitute` (line 73)",
                "Method `get_plain_headed_box` (line 91)",
                "Method `get_top` (line 101)",
                "Method `get_row` (line 121)",
                "Method `get_bottom` (line 170)"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "box"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "substitute",
            "args": [
                "self",
                "options",
                "safe"
            ],
            "lineno": 73
        },
        {
            "type": "function",
            "name": "get_plain_headed_box",
            "args": [
                "self"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "get_top",
            "args": [
                "self",
                "widths"
            ],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "get_row",
            "args": [
                "self",
                "widths",
                "level",
                "edge"
            ],
            "lineno": 121
        },
        {
            "type": "function",
            "name": "get_bottom",
            "args": [
                "self",
                "widths"
            ],
            "lineno": 170
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/cells.py": [
        {
            "type": "function",
            "name": "cached_cell_len",
            "args": [
                "text"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "cell_len",
            "args": [
                "text",
                "_cell_len"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "get_character_cell_size",
            "args": [
                "character"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "_get_codepoint_cell_size",
            "args": [
                "codepoint"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "set_cell_size",
            "args": [
                "text",
                "total"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "chop_cells",
            "args": [
                "text",
                "max_size",
                "position"
            ],
            "lineno": 124
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/color.py": [
        {
            "type": "class",
            "name": "ColorSystem",
            "methods": [
                "Method `__repr__` (line 29)",
                "Method `__str__` (line 32)"
            ],
            "lineno": 21
        },
        {
            "type": "class",
            "name": "ColorType",
            "methods": [
                "Method `__repr__` (line 45)"
            ],
            "lineno": 36
        },
        {
            "type": "class",
            "name": "ColorParseError",
            "methods": null,
            "lineno": 288
        },
        {
            "type": "class",
            "name": "Color",
            "methods": [
                "Method `__rich__` (line 315)",
                "Method `__rich_repr__` (line 326)",
                "Method `system` (line 333)",
                "Method `is_system_defined` (line 340)",
                "Method `is_default` (line 345)",
                "Method `get_truecolor` (line 349)",
                "Method `from_ansi` (line 381)",
                "Method `from_triplet` (line 397)",
                "Method `from_rgb` (line 409)",
                "Method `default` (line 423)",
                "Method `parse` (line 433)",
                "Method `get_ansi_codes` (line 485)",
                "Method `downgrade` (line 513)"
            ],
            "lineno": 303
        },
        {
            "type": "function",
            "name": "parse_rgb_hex",
            "args": [
                "hex_color"
            ],
            "lineno": 571
        },
        {
            "type": "function",
            "name": "blend_rgb",
            "args": [
                "color1",
                "color2",
                "cross_fade"
            ],
            "lineno": 580
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "__rich__",
            "args": [
                "self"
            ],
            "lineno": 315
        },
        {
            "type": "function",
            "name": "__rich_repr__",
            "args": [
                "self"
            ],
            "lineno": 326
        },
        {
            "type": "function",
            "name": "system",
            "args": [
                "self"
            ],
            "lineno": 333
        },
        {
            "type": "function",
            "name": "is_system_defined",
            "args": [
                "self"
            ],
            "lineno": 340
        },
        {
            "type": "function",
            "name": "is_default",
            "args": [
                "self"
            ],
            "lineno": 345
        },
        {
            "type": "function",
            "name": "get_truecolor",
            "args": [
                "self",
                "theme",
                "foreground"
            ],
            "lineno": 349
        },
        {
            "type": "function",
            "name": "from_ansi",
            "args": [
                "cls",
                "number"
            ],
            "lineno": 381
        },
        {
            "type": "function",
            "name": "from_triplet",
            "args": [
                "cls",
                "triplet"
            ],
            "lineno": 397
        },
        {
            "type": "function",
            "name": "from_rgb",
            "args": [
                "cls",
                "red",
                "green",
                "blue"
            ],
            "lineno": 409
        },
        {
            "type": "function",
            "name": "default",
            "args": [
                "cls"
            ],
            "lineno": 423
        },
        {
            "type": "function",
            "name": "parse",
            "args": [
                "cls",
                "color"
            ],
            "lineno": 433
        },
        {
            "type": "function",
            "name": "get_ansi_codes",
            "args": [
                "self",
                "foreground"
            ],
            "lineno": 485
        },
        {
            "type": "function",
            "name": "downgrade",
            "args": [
                "self",
                "system"
            ],
            "lineno": 513
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/color_triplet.py": [
        {
            "type": "class",
            "name": "ColorTriplet",
            "methods": [
                "Method `hex` (line 15)",
                "Method `rgb` (line 21)",
                "Method `normalized` (line 31)"
            ],
            "lineno": 4
        },
        {
            "type": "function",
            "name": "hex",
            "args": [
                "self"
            ],
            "lineno": 15
        },
        {
            "type": "function",
            "name": "rgb",
            "args": [
                "self"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "normalized",
            "args": [
                "self"
            ],
            "lineno": 31
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/columns.py": [
        {
            "type": "class",
            "name": "Columns",
            "methods": [
                "Method `__init__` (line 31)",
                "Method `add_renderable` (line 54)",
                "Method `__rich_console__` (line 62)"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "renderables",
                "padding"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "add_renderable",
            "args": [
                "self",
                "renderable"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "iter_renderables",
            "args": [
                "column_count"
            ],
            "lineno": 86
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/console.py": [
        {
            "type": "class",
            "name": "NoChange",
            "methods": null,
            "lineno": 86
        },
        {
            "type": "class",
            "name": "ConsoleDimensions",
            "methods": null,
            "lineno": 116
        },
        {
            "type": "class",
            "name": "ConsoleOptions",
            "methods": [
                "Method `ascii_only` (line 156)",
                "Method `copy` (line 160)",
                "Method `update` (line 170)",
                "Method `update_width` (line 207)",
                "Method `update_height` (line 220)",
                "Method `reset_height` (line 233)",
                "Method `update_dimensions` (line 243)"
            ],
            "lineno": 126
        },
        {
            "type": "class",
            "name": "RichCast",
            "methods": [
                "Method `__rich__` (line 263)"
            ],
            "lineno": 260
        },
        {
            "type": "class",
            "name": "ConsoleRenderable",
            "methods": [
                "Method `__rich_console__` (line 273)"
            ],
            "lineno": 270
        },
        {
            "type": "class",
            "name": "CaptureError",
            "methods": null,
            "lineno": 288
        },
        {
            "type": "class",
            "name": "NewLine",
            "methods": [
                "Method `__init__` (line 295)",
                "Method `__rich_console__` (line 298)"
            ],
            "lineno": 292
        },
        {
            "type": "class",
            "name": "ScreenUpdate",
            "methods": [
                "Method `__init__` (line 307)",
                "Method `__rich_console__` (line 312)"
            ],
            "lineno": 304
        },
        {
            "type": "class",
            "name": "Capture",
            "methods": [
                "Method `__init__` (line 330)",
                "Method `__enter__` (line 334)",
                "Method `__exit__` (line 338)",
                "Method `get` (line 346)"
            ],
            "lineno": 322
        },
        {
            "type": "class",
            "name": "ThemeContext",
            "methods": [
                "Method `__init__` (line 358)",
                "Method `__enter__` (line 363)",
                "Method `__exit__` (line 367)"
            ],
            "lineno": 355
        },
        {
            "type": "class",
            "name": "PagerContext",
            "methods": [
                "Method `__init__` (line 379)",
                "Method `__enter__` (line 391)",
                "Method `__exit__` (line 395)"
            ],
            "lineno": 376
        },
        {
            "type": "class",
            "name": "ScreenContext",
            "methods": [
                "Method `__init__` (line 418)",
                "Method `update` (line 426)",
                "Method `__enter__` (line 444)",
                "Method `__exit__` (line 450)"
            ],
            "lineno": 415
        },
        {
            "type": "class",
            "name": "Group",
            "methods": [
                "Method `__init__` (line 470)",
                "Method `renderables` (line 476)",
                "Method `__rich_measure__` (line 481)",
                "Method `__rich_console__` (line 489)"
            ],
            "lineno": 462
        },
        {
            "type": "function",
            "name": "group",
            "args": [
                "fit"
            ],
            "lineno": 495
        },
        {
            "type": "function",
            "name": "_is_jupyter",
            "args": [],
            "lineno": 517
        },
        {
            "type": "class",
            "name": "ConsoleThreadLocals",
            "methods": null,
            "lineno": 548
        },
        {
            "type": "class",
            "name": "RenderHook",
            "methods": [
                "Method `process_renderables` (line 560)"
            ],
            "lineno": 556
        },
        {
            "type": "function",
            "name": "get_windows_console_features",
            "args": [],
            "lineno": 578
        },
        {
            "type": "function",
            "name": "detect_legacy_windows",
            "args": [],
            "lineno": 588
        },
        {
            "type": "class",
            "name": "Console",
            "methods": [
                "Method `__init__` (line 631)",
                "Method `__repr__` (line 755)",
                "Method `file` (line 759)",
                "Method `file` (line 768)",
                "Method `_buffer` (line 773)",
                "Method `_buffer_index` (line 778)",
                "Method `_buffer_index` (line 783)",
                "Method `_theme_stack` (line 787)",
                "Method `_detect_color_system` (line 791)",
                "Method `_enter_buffer` (line 815)",
                "Method `_exit_buffer` (line 819)",
                "Method `set_live` (line 824)",
                "Method `clear_live` (line 838)",
                "Method `push_render_hook` (line 843)",
                "Method `pop_render_hook` (line 852)",
                "Method `__enter__` (line 857)",
                "Method `__exit__` (line 862)",
                "Method `begin_capture` (line 866)",
                "Method `end_capture` (line 870)",
                "Method `push_theme` (line 881)",
                "Method `pop_theme` (line 892)",
                "Method `use_theme` (line 896)",
                "Method `color_system` (line 909)",
                "Method `encoding` (line 922)",
                "Method `is_terminal` (line 931)",
                "Method `is_dumb_terminal` (line 967)",
                "Method `options` (line 979)",
                "Method `size` (line 992)",
                "Method `size` (line 1038)",
                "Method `width` (line 1049)",
                "Method `width` (line 1058)",
                "Method `height` (line 1067)",
                "Method `height` (line 1076)",
                "Method `bell` (line 1084)",
                "Method `capture` (line 1088)",
                "Method `pager` (line 1105)",
                "Method `line` (line 1128)",
                "Method `clear` (line 1138)",
                "Method `status` (line 1149)",
                "Method `show_cursor` (line 1182)",
                "Method `set_alt_screen` (line 1193)",
                "Method `is_alt_screen` (line 1215)",
                "Method `set_window_title` (line 1223)",
                "Method `screen` (line 1255)",
                "Method `measure` (line 1269)",
                "Method `render` (line 1286)",
                "Method `render_lines` (line 1337)",
                "Method `render_str` (line 1396)",
                "Method `get_style` (line 1455)",
                "Method `_collect_renderables` (line 1485)",
                "Method `rule` (line 1560)",
                "Method `control` (line 1581)",
                "Method `out` (line 1591)",
                "Method `print` (line 1623)",
                "Method `print_json` (line 1722)",
                "Method `update_screen` (line 1783)",
                "Method `update_screen_lines` (line 1817)",
                "Method `print_exception` (line 1837)",
                "Method `_caller_frame_info` (line 1873)",
                "Method `log` (line 1907)",
                "Method `_check_buffer` (line 1989)",
                "Method `_render_buffer` (line 2068)",
                "Method `input` (line 2092)",
                "Method `export_text` (line 2126)",
                "Method `save_text` (line 2158)",
                "Method `export_html` (line 2172)",
                "Method `save_html` (line 2247)",
                "Method `export_svg` (line 2278)",
                "Method `save_svg` (line 2529)"
            ],
            "lineno": 593
        },
        {
            "type": "function",
            "name": "_svg_hash",
            "args": [
                "svg_main_code"
            ],
            "lineno": 2568
        },
        {
            "type": "function",
            "name": "ascii_only",
            "args": [
                "self"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 160
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self"
            ],
            "lineno": 170
        },
        {
            "type": "function",
            "name": "update_width",
            "args": [
                "self",
                "width"
            ],
            "lineno": 207
        },
        {
            "type": "function",
            "name": "update_height",
            "args": [
                "self",
                "height"
            ],
            "lineno": 220
        },
        {
            "type": "function",
            "name": "reset_height",
            "args": [
                "self"
            ],
            "lineno": 233
        },
        {
            "type": "function",
            "name": "update_dimensions",
            "args": [
                "self",
                "width",
                "height"
            ],
            "lineno": 243
        },
        {
            "type": "function",
            "name": "__rich__",
            "args": [
                "self"
            ],
            "lineno": 263
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 273
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "count"
            ],
            "lineno": 295
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 298
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "lines",
                "x",
                "y"
            ],
            "lineno": 307
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 312
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "console"
            ],
            "lineno": 330
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 334
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 338
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self"
            ],
            "lineno": 346
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "console",
                "theme",
                "inherit"
            ],
            "lineno": 358
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 363
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 367
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "console",
                "pager",
                "styles",
                "links"
            ],
            "lineno": 379
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 391
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 395
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "console",
                "hide_cursor",
                "style"
            ],
            "lineno": 418
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "*renderables"
            ],
            "lineno": 426
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 444
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 450
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*renderables"
            ],
            "lineno": 470
        },
        {
            "type": "function",
            "name": "renderables",
            "args": [
                "self"
            ],
            "lineno": 476
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 481
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 489
        },
        {
            "type": "function",
            "name": "decorator",
            "args": [
                "method"
            ],
            "lineno": 502
        },
        {
            "type": "function",
            "name": "process_renderables",
            "args": [
                "self",
                "renderables"
            ],
            "lineno": 560
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 631
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 755
        },
        {
            "type": "function",
            "name": "file",
            "args": [
                "self"
            ],
            "lineno": 759
        },
        {
            "type": "function",
            "name": "file",
            "args": [
                "self",
                "new_file"
            ],
            "lineno": 768
        },
        {
            "type": "function",
            "name": "_buffer",
            "args": [
                "self"
            ],
            "lineno": 773
        },
        {
            "type": "function",
            "name": "_buffer_index",
            "args": [
                "self"
            ],
            "lineno": 778
        },
        {
            "type": "function",
            "name": "_buffer_index",
            "args": [
                "self",
                "value"
            ],
            "lineno": 783
        },
        {
            "type": "function",
            "name": "_theme_stack",
            "args": [
                "self"
            ],
            "lineno": 787
        },
        {
            "type": "function",
            "name": "_detect_color_system",
            "args": [
                "self"
            ],
            "lineno": 791
        },
        {
            "type": "function",
            "name": "_enter_buffer",
            "args": [
                "self"
            ],
            "lineno": 815
        },
        {
            "type": "function",
            "name": "_exit_buffer",
            "args": [
                "self"
            ],
            "lineno": 819
        },
        {
            "type": "function",
            "name": "set_live",
            "args": [
                "self",
                "live"
            ],
            "lineno": 824
        },
        {
            "type": "function",
            "name": "clear_live",
            "args": [
                "self"
            ],
            "lineno": 838
        },
        {
            "type": "function",
            "name": "push_render_hook",
            "args": [
                "self",
                "hook"
            ],
            "lineno": 843
        },
        {
            "type": "function",
            "name": "pop_render_hook",
            "args": [
                "self"
            ],
            "lineno": 852
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 857
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_value",
                "traceback"
            ],
            "lineno": 862
        },
        {
            "type": "function",
            "name": "begin_capture",
            "args": [
                "self"
            ],
            "lineno": 866
        },
        {
            "type": "function",
            "name": "end_capture",
            "args": [
                "self"
            ],
            "lineno": 870
        },
        {
            "type": "function",
            "name": "push_theme",
            "args": [
                "self",
                "theme"
            ],
            "lineno": 881
        },
        {
            "type": "function",
            "name": "pop_theme",
            "args": [
                "self"
            ],
            "lineno": 892
        },
        {
            "type": "function",
            "name": "use_theme",
            "args": [
                "self",
                "theme"
            ],
            "lineno": 896
        },
        {
            "type": "function",
            "name": "color_system",
            "args": [
                "self"
            ],
            "lineno": 909
        },
        {
            "type": "function",
            "name": "encoding",
            "args": [
                "self"
            ],
            "lineno": 922
        },
        {
            "type": "function",
            "name": "is_terminal",
            "args": [
                "self"
            ],
            "lineno": 931
        },
        {
            "type": "function",
            "name": "is_dumb_terminal",
            "args": [
                "self"
            ],
            "lineno": 967
        },
        {
            "type": "function",
            "name": "options",
            "args": [
                "self"
            ],
            "lineno": 979
        },
        {
            "type": "function",
            "name": "size",
            "args": [
                "self"
            ],
            "lineno": 992
        },
        {
            "type": "function",
            "name": "size",
            "args": [
                "self",
                "new_size"
            ],
            "lineno": 1038
        },
        {
            "type": "function",
            "name": "width",
            "args": [
                "self"
            ],
            "lineno": 1049
        },
        {
            "type": "function",
            "name": "width",
            "args": [
                "self",
                "width"
            ],
            "lineno": 1058
        },
        {
            "type": "function",
            "name": "height",
            "args": [
                "self"
            ],
            "lineno": 1067
        },
        {
            "type": "function",
            "name": "height",
            "args": [
                "self",
                "height"
            ],
            "lineno": 1076
        },
        {
            "type": "function",
            "name": "bell",
            "args": [
                "self"
            ],
            "lineno": 1084
        },
        {
            "type": "function",
            "name": "capture",
            "args": [
                "self"
            ],
            "lineno": 1088
        },
        {
            "type": "function",
            "name": "pager",
            "args": [
                "self",
                "pager",
                "styles",
                "links"
            ],
            "lineno": 1105
        },
        {
            "type": "function",
            "name": "line",
            "args": [
                "self",
                "count"
            ],
            "lineno": 1128
        },
        {
            "type": "function",
            "name": "clear",
            "args": [
                "self",
                "home"
            ],
            "lineno": 1138
        },
        {
            "type": "function",
            "name": "status",
            "args": [
                "self",
                "status"
            ],
            "lineno": 1149
        },
        {
            "type": "function",
            "name": "show_cursor",
            "args": [
                "self",
                "show"
            ],
            "lineno": 1182
        },
        {
            "type": "function",
            "name": "set_alt_screen",
            "args": [
                "self",
                "enable"
            ],
            "lineno": 1193
        },
        {
            "type": "function",
            "name": "is_alt_screen",
            "args": [
                "self"
            ],
            "lineno": 1215
        },
        {
            "type": "function",
            "name": "set_window_title",
            "args": [
                "self",
                "title"
            ],
            "lineno": 1223
        },
        {
            "type": "function",
            "name": "screen",
            "args": [
                "self",
                "hide_cursor",
                "style"
            ],
            "lineno": 1255
        },
        {
            "type": "function",
            "name": "measure",
            "args": [
                "self",
                "renderable"
            ],
            "lineno": 1269
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "renderable",
                "options"
            ],
            "lineno": 1286
        },
        {
            "type": "function",
            "name": "render_lines",
            "args": [
                "self",
                "renderable",
                "options"
            ],
            "lineno": 1337
        },
        {
            "type": "function",
            "name": "render_str",
            "args": [
                "self",
                "text"
            ],
            "lineno": 1396
        },
        {
            "type": "function",
            "name": "get_style",
            "args": [
                "self",
                "name"
            ],
            "lineno": 1455
        },
        {
            "type": "function",
            "name": "_collect_renderables",
            "args": [
                "self",
                "objects",
                "sep",
                "end"
            ],
            "lineno": 1485
        },
        {
            "type": "function",
            "name": "rule",
            "args": [
                "self",
                "title"
            ],
            "lineno": 1560
        },
        {
            "type": "function",
            "name": "control",
            "args": [
                "self",
                "*control"
            ],
            "lineno": 1581
        },
        {
            "type": "function",
            "name": "out",
            "args": [
                "self",
                "*objects"
            ],
            "lineno": 1591
        },
        {
            "type": "function",
            "name": "print",
            "args": [
                "self",
                "*objects"
            ],
            "lineno": 1623
        },
        {
            "type": "function",
            "name": "print_json",
            "args": [
                "self",
                "json"
            ],
            "lineno": 1722
        },
        {
            "type": "function",
            "name": "update_screen",
            "args": [
                "self",
                "renderable"
            ],
            "lineno": 1783
        },
        {
            "type": "function",
            "name": "update_screen_lines",
            "args": [
                "self",
                "lines",
                "x",
                "y"
            ],
            "lineno": 1817
        },
        {
            "type": "function",
            "name": "print_exception",
            "args": [
                "self"
            ],
            "lineno": 1837
        },
        {
            "type": "function",
            "name": "_caller_frame_info",
            "args": [
                "offset",
                "currentframe"
            ],
            "lineno": 1873
        },
        {
            "type": "function",
            "name": "log",
            "args": [
                "self",
                "*objects"
            ],
            "lineno": 1907
        },
        {
            "type": "function",
            "name": "_check_buffer",
            "args": [
                "self"
            ],
            "lineno": 1989
        },
        {
            "type": "function",
            "name": "_render_buffer",
            "args": [
                "self",
                "buffer"
            ],
            "lineno": 2068
        },
        {
            "type": "function",
            "name": "input",
            "args": [
                "self",
                "prompt"
            ],
            "lineno": 2092
        },
        {
            "type": "function",
            "name": "export_text",
            "args": [
                "self"
            ],
            "lineno": 2126
        },
        {
            "type": "function",
            "name": "save_text",
            "args": [
                "self",
                "path"
            ],
            "lineno": 2158
        },
        {
            "type": "function",
            "name": "export_html",
            "args": [
                "self"
            ],
            "lineno": 2172
        },
        {
            "type": "function",
            "name": "save_html",
            "args": [
                "self",
                "path"
            ],
            "lineno": 2247
        },
        {
            "type": "function",
            "name": "export_svg",
            "args": [
                "self"
            ],
            "lineno": 2278
        },
        {
            "type": "function",
            "name": "save_svg",
            "args": [
                "self",
                "path"
            ],
            "lineno": 2529
        },
        {
            "type": "function",
            "name": "_replace",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 508
        },
        {
            "type": "function",
            "name": "check_text",
            "args": [],
            "lineno": 1527
        },
        {
            "type": "function",
            "name": "get_svg_style",
            "args": [
                "style"
            ],
            "lineno": 2309
        },
        {
            "type": "function",
            "name": "escape_text",
            "args": [
                "text"
            ],
            "lineno": 2369
        },
        {
            "type": "function",
            "name": "make_tag",
            "args": [
                "name",
                "content",
                "**attribs"
            ],
            "lineno": 2373
        },
        {
            "type": "function",
            "name": "align_append",
            "args": [
                "renderable"
            ],
            "lineno": 1518
        },
        {
            "type": "function",
            "name": "stringify",
            "args": [
                "value"
            ],
            "lineno": 2378
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/constrain.py": [
        {
            "type": "class",
            "name": "Constrain",
            "methods": [
                "Method `__init__` (line 18)",
                "Method `__rich_console__` (line 22)",
                "Method `__rich_measure__` (line 31)"
            ],
            "lineno": 10
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "renderable",
                "width"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 31
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/containers.py": [
        {
            "type": "class",
            "name": "Renderables",
            "methods": [
                "Method `__init__` (line 33)",
                "Method `__rich_console__` (line 40)",
                "Method `__rich_measure__` (line 46)",
                "Method `append` (line 59)",
                "Method `__iter__` (line 62)"
            ],
            "lineno": 30
        },
        {
            "type": "class",
            "name": "Lines",
            "methods": [
                "Method `__init__` (line 69)",
                "Method `__repr__` (line 72)",
                "Method `__iter__` (line 75)",
                "Method `__getitem__` (line 79)",
                "Method `__getitem__` (line 83)",
                "Method `__getitem__` (line 86)",
                "Method `__setitem__` (line 89)",
                "Method `__len__` (line 93)",
                "Method `__rich_console__` (line 96)",
                "Method `append` (line 102)",
                "Method `extend` (line 105)",
                "Method `pop` (line 108)",
                "Method `justify` (line 111)"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "renderables"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "append",
            "args": [
                "self",
                "renderable"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "lines"
            ],
            "lineno": 69
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "index"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "index"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "index"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "__setitem__",
            "args": [
                "self",
                "index",
                "value"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "__len__",
            "args": [
                "self"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "append",
            "args": [
                "self",
                "line"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "extend",
            "args": [
                "self",
                "lines"
            ],
            "lineno": 105
        },
        {
            "type": "function",
            "name": "pop",
            "args": [
                "self",
                "index"
            ],
            "lineno": 108
        },
        {
            "type": "function",
            "name": "justify",
            "args": [
                "self",
                "console",
                "width",
                "justify",
                "overflow"
            ],
            "lineno": 111
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/control.py": [
        {
            "type": "class",
            "name": "Control",
            "methods": [
                "Method `__init__` (line 64)",
                "Method `bell` (line 75)",
                "Method `home` (line 80)",
                "Method `move` (line 85)",
                "Method `move_to_column` (line 114)",
                "Method `move_to` (line 138)",
                "Method `clear` (line 151)",
                "Method `show_cursor` (line 156)",
                "Method `alt_screen` (line 161)",
                "Method `title` (line 169)",
                "Method `__str__` (line 177)",
                "Method `__rich_console__` (line 180)"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "strip_control_codes",
            "args": [
                "text",
                "_translate_table"
            ],
            "lineno": 187
        },
        {
            "type": "function",
            "name": "escape_control_codes",
            "args": [
                "text",
                "_translate_table"
            ],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*codes"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "bell",
            "args": [
                "cls"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "home",
            "args": [
                "cls"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "move",
            "args": [
                "cls",
                "x",
                "y"
            ],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "move_to_column",
            "args": [
                "cls",
                "x",
                "y"
            ],
            "lineno": 114
        },
        {
            "type": "function",
            "name": "move_to",
            "args": [
                "cls",
                "x",
                "y"
            ],
            "lineno": 138
        },
        {
            "type": "function",
            "name": "clear",
            "args": [
                "cls"
            ],
            "lineno": 151
        },
        {
            "type": "function",
            "name": "show_cursor",
            "args": [
                "cls",
                "show"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "alt_screen",
            "args": [
                "cls",
                "enable"
            ],
            "lineno": 161
        },
        {
            "type": "function",
            "name": "title",
            "args": [
                "cls",
                "title"
            ],
            "lineno": 169
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 180
        },
        {
            "type": "function",
            "name": "get_codes",
            "args": [],
            "lineno": 97
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/default_styles.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/diagnose.py": [
        {
            "type": "function",
            "name": "report",
            "args": [],
            "lineno": 10
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/emoji.py": [
        {
            "type": "class",
            "name": "NoEmoji",
            "methods": null,
            "lineno": 23
        },
        {
            "type": "class",
            "name": "Emoji",
            "methods": [
                "Method `__init__` (line 32)",
                "Method `replace` (line 58)",
                "Method `__repr__` (line 69)",
                "Method `__str__` (line 72)",
                "Method `__rich_console__` (line 75)"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "style",
                "variant"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "replace",
            "args": [
                "cls",
                "text"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 69
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 75
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/errors.py": [
        {
            "type": "class",
            "name": "ConsoleError",
            "methods": null,
            "lineno": 1
        },
        {
            "type": "class",
            "name": "StyleError",
            "methods": null,
            "lineno": 5
        },
        {
            "type": "class",
            "name": "StyleSyntaxError",
            "methods": null,
            "lineno": 9
        },
        {
            "type": "class",
            "name": "MissingStyle",
            "methods": null,
            "lineno": 13
        },
        {
            "type": "class",
            "name": "StyleStackError",
            "methods": null,
            "lineno": 17
        },
        {
            "type": "class",
            "name": "NotRenderableError",
            "methods": null,
            "lineno": 21
        },
        {
            "type": "class",
            "name": "MarkupError",
            "methods": null,
            "lineno": 25
        },
        {
            "type": "class",
            "name": "LiveError",
            "methods": null,
            "lineno": 29
        },
        {
            "type": "class",
            "name": "NoAltScreen",
            "methods": null,
            "lineno": 33
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/filesize.py": [
        {
            "type": "function",
            "name": "_to_str",
            "args": [
                "size",
                "suffixes",
                "base"
            ],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "pick_unit_and_suffix",
            "args": [
                "size",
                "suffixes",
                "base"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "decimal",
            "args": [
                "size"
            ],
            "lineno": 53
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/file_proxy.py": [
        {
            "type": "class",
            "name": "FileProxy",
            "methods": [
                "Method `__init__` (line 14)",
                "Method `rich_proxied_file` (line 21)",
                "Method `__getattr__` (line 25)",
                "Method `write` (line 28)",
                "Method `flush` (line 50)",
                "Method `fileno` (line 56)"
            ],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "console",
                "file"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "rich_proxied_file",
            "args": [
                "self"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "write",
            "args": [
                "self",
                "text"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "flush",
            "args": [
                "self"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "fileno",
            "args": [
                "self"
            ],
            "lineno": 56
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/highlighter.py": [
        {
            "type": "function",
            "name": "_combine_regex",
            "args": [
                "*regexes"
            ],
            "lineno": 8
        },
        {
            "type": "class",
            "name": "Highlighter",
            "methods": [
                "Method `__call__` (line 20)",
                "Method `highlight` (line 42)"
            ],
            "lineno": 17
        },
        {
            "type": "class",
            "name": "NullHighlighter",
            "methods": [
                "Method `highlight` (line 57)"
            ],
            "lineno": 50
        },
        {
            "type": "class",
            "name": "RegexHighlighter",
            "methods": [
                "Method `highlight` (line 67)"
            ],
            "lineno": 61
        },
        {
            "type": "class",
            "name": "ReprHighlighter",
            "methods": null,
            "lineno": 80
        },
        {
            "type": "class",
            "name": "JSONHighlighter",
            "methods": [
                "Method `highlight` (line 123)"
            ],
            "lineno": 106
        },
        {
            "type": "class",
            "name": "ISO8601Highlighter",
            "methods": null,
            "lineno": 143
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "text"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "highlight",
            "args": [
                "self",
                "text"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "highlight",
            "args": [
                "self",
                "text"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "highlight",
            "args": [
                "self",
                "text"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "highlight",
            "args": [
                "self",
                "text"
            ],
            "lineno": 123
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/json.py": [
        {
            "type": "class",
            "name": "JSON",
            "methods": [
                "Method `__init__` (line 25)",
                "Method `from_data` (line 54)",
                "Method `__rich__` (line 101)"
            ],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "json",
                "indent",
                "highlight",
                "skip_keys",
                "ensure_ascii",
                "check_circular",
                "allow_nan",
                "default",
                "sort_keys"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "from_data",
            "args": [
                "cls",
                "data",
                "indent",
                "highlight",
                "skip_keys",
                "ensure_ascii",
                "check_circular",
                "allow_nan",
                "default",
                "sort_keys"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "__rich__",
            "args": [
                "self"
            ],
            "lineno": 101
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/jupyter.py": [
        {
            "type": "class",
            "name": "JupyterRenderable",
            "methods": [
                "Method `__init__` (line 21)",
                "Method `_repr_mimebundle_` (line 25)"
            ],
            "lineno": 18
        },
        {
            "type": "class",
            "name": "JupyterMixin",
            "methods": [
                "Method `_repr_mimebundle_` (line 41)"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "_render_segments",
            "args": [
                "segments"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "display",
            "args": [
                "segments",
                "text"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "print",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "html",
                "text"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "_repr_mimebundle_",
            "args": [
                "self",
                "include",
                "exclude",
                "**kwargs"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "_repr_mimebundle_",
            "args": [
                "self",
                "include",
                "exclude",
                "**kwargs"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "escape",
            "args": [
                "text"
            ],
            "lineno": 60
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/layout.py": [
        {
            "type": "class",
            "name": "LayoutRender",
            "methods": null,
            "lineno": 32
        },
        {
            "type": "class",
            "name": "LayoutError",
            "methods": null,
            "lineno": 43
        },
        {
            "type": "class",
            "name": "NoSplitter",
            "methods": null,
            "lineno": 47
        },
        {
            "type": "class",
            "name": "_Placeholder",
            "methods": [
                "Method `__init__` (line 56)",
                "Method `__rich_console__` (line 60)"
            ],
            "lineno": 51
        },
        {
            "type": "class",
            "name": "Splitter",
            "methods": [
                "Method `get_tree_icon` (line 86)",
                "Method `divide` (line 90)"
            ],
            "lineno": 80
        },
        {
            "type": "class",
            "name": "RowSplitter",
            "methods": [
                "Method `get_tree_icon` (line 106)",
                "Method `divide` (line 109)"
            ],
            "lineno": 101
        },
        {
            "type": "class",
            "name": "ColumnSplitter",
            "methods": [
                "Method `get_tree_icon` (line 126)",
                "Method `divide` (line 129)"
            ],
            "lineno": 121
        },
        {
            "type": "class",
            "name": "Layout",
            "methods": [
                "Method `__init__` (line 156)",
                "Method `__rich_repr__` (line 177)",
                "Method `renderable` (line 184)",
                "Method `children` (line 189)",
                "Method `map` (line 194)",
                "Method `get` (line 198)",
                "Method `__getitem__` (line 216)",
                "Method `tree` (line 223)",
                "Method `split` (line 262)",
                "Method `add_split` (line 287)",
                "Method `split_row` (line 300)",
                "Method `split_column` (line 308)",
                "Method `unsplit` (line 316)",
                "Method `update` (line 320)",
                "Method `refresh_screen` (line 329)",
                "Method `_make_region_map` (line 346)",
                "Method `render` (line 367)",
                "Method `__rich_console__` (line 396)"
            ],
            "lineno": 142
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "layout",
                "style"
            ],
            "lineno": 56
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 60
        },
        {
            "type": "function",
            "name": "get_tree_icon",
            "args": [
                "self"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "divide",
            "args": [
                "self",
                "children",
                "region"
            ],
            "lineno": 90
        },
        {
            "type": "function",
            "name": "get_tree_icon",
            "args": [
                "self"
            ],
            "lineno": 106
        },
        {
            "type": "function",
            "name": "divide",
            "args": [
                "self",
                "children",
                "region"
            ],
            "lineno": 109
        },
        {
            "type": "function",
            "name": "get_tree_icon",
            "args": [
                "self"
            ],
            "lineno": 126
        },
        {
            "type": "function",
            "name": "divide",
            "args": [
                "self",
                "children",
                "region"
            ],
            "lineno": 129
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "renderable"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "__rich_repr__",
            "args": [
                "self"
            ],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "renderable",
            "args": [
                "self"
            ],
            "lineno": 184
        },
        {
            "type": "function",
            "name": "children",
            "args": [
                "self"
            ],
            "lineno": 189
        },
        {
            "type": "function",
            "name": "map",
            "args": [
                "self"
            ],
            "lineno": 194
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "name"
            ],
            "lineno": 198
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 216
        },
        {
            "type": "function",
            "name": "tree",
            "args": [
                "self"
            ],
            "lineno": 223
        },
        {
            "type": "function",
            "name": "split",
            "args": [
                "self",
                "*layouts"
            ],
            "lineno": 262
        },
        {
            "type": "function",
            "name": "add_split",
            "args": [
                "self",
                "*layouts"
            ],
            "lineno": 287
        },
        {
            "type": "function",
            "name": "split_row",
            "args": [
                "self",
                "*layouts"
            ],
            "lineno": 300
        },
        {
            "type": "function",
            "name": "split_column",
            "args": [
                "self",
                "*layouts"
            ],
            "lineno": 308
        },
        {
            "type": "function",
            "name": "unsplit",
            "args": [
                "self"
            ],
            "lineno": 316
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "renderable"
            ],
            "lineno": 320
        },
        {
            "type": "function",
            "name": "refresh_screen",
            "args": [
                "self",
                "console",
                "layout_name"
            ],
            "lineno": 329
        },
        {
            "type": "function",
            "name": "_make_region_map",
            "args": [
                "self",
                "width",
                "height"
            ],
            "lineno": 346
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 367
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 396
        },
        {
            "type": "function",
            "name": "summary",
            "args": [
                "layout"
            ],
            "lineno": 229
        },
        {
            "type": "function",
            "name": "recurse",
            "args": [
                "tree",
                "layout"
            ],
            "lineno": 249
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/live.py": [
        {
            "type": "class",
            "name": "_RefreshThread",
            "methods": [
                "Method `__init__` (line 19)",
                "Method `stop` (line 25)",
                "Method `run` (line 28)"
            ],
            "lineno": 16
        },
        {
            "type": "class",
            "name": "Live",
            "methods": [
                "Method `__init__` (line 51)",
                "Method `is_started` (line 92)",
                "Method `get_renderable` (line 96)",
                "Method `start` (line 104)",
                "Method `stop` (line 134)",
                "Method `__enter__` (line 165)",
                "Method `__exit__` (line 169)",
                "Method `_enable_redirect_io` (line 177)",
                "Method `_disable_redirect_io` (line 187)",
                "Method `renderable` (line 197)",
                "Method `update` (line 206)",
                "Method `refresh` (line 220)",
                "Method `process_renderables` (line 249)"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "live",
                "refresh_per_second"
            ],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "stop",
            "args": [
                "self"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "renderable"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "is_started",
            "args": [
                "self"
            ],
            "lineno": 92
        },
        {
            "type": "function",
            "name": "get_renderable",
            "args": [
                "self"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "start",
            "args": [
                "self",
                "refresh"
            ],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "stop",
            "args": [
                "self"
            ],
            "lineno": 134
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 165
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 169
        },
        {
            "type": "function",
            "name": "_enable_redirect_io",
            "args": [
                "self"
            ],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "_disable_redirect_io",
            "args": [
                "self"
            ],
            "lineno": 187
        },
        {
            "type": "function",
            "name": "renderable",
            "args": [
                "self"
            ],
            "lineno": 197
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "renderable"
            ],
            "lineno": 206
        },
        {
            "type": "function",
            "name": "refresh",
            "args": [
                "self"
            ],
            "lineno": 220
        },
        {
            "type": "function",
            "name": "process_renderables",
            "args": [
                "self",
                "renderables"
            ],
            "lineno": 249
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/live_render.py": [
        {
            "type": "class",
            "name": "LiveRender",
            "methods": [
                "Method `__init__` (line 28)",
                "Method `set_renderable` (line 39)",
                "Method `position_cursor` (line 47)",
                "Method `restore_cursor` (line 68)",
                "Method `__rich_console__` (line 82)"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "renderable",
                "style",
                "vertical_overflow"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "set_renderable",
            "args": [
                "self",
                "renderable"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "position_cursor",
            "args": [
                "self"
            ],
            "lineno": 47
        },
        {
            "type": "function",
            "name": "restore_cursor",
            "args": [
                "self"
            ],
            "lineno": 68
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 82
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/logging.py": [
        {
            "type": "class",
            "name": "RichHandler",
            "methods": [
                "Method `__init__` (line 63)",
                "Method `get_level_text` (line 111)",
                "Method `emit` (line 126)",
                "Method `render_message` (line 174)",
                "Method `render` (line 199)"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "level",
                "console"
            ],
            "lineno": 63
        },
        {
            "type": "function",
            "name": "get_level_text",
            "args": [
                "self",
                "record"
            ],
            "lineno": 111
        },
        {
            "type": "function",
            "name": "emit",
            "args": [
                "self",
                "record"
            ],
            "lineno": 126
        },
        {
            "type": "function",
            "name": "render_message",
            "args": [
                "self",
                "record",
                "message"
            ],
            "lineno": 174
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self"
            ],
            "lineno": 199
        },
        {
            "type": "function",
            "name": "divide",
            "args": [],
            "lineno": 275
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/markup.py": [
        {
            "type": "class",
            "name": "Tag",
            "methods": [
                "Method `__str__` (line 28)",
                "Method `markup` (line 34)"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "escape",
            "args": [
                "markup",
                "_escape"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "_parse",
            "args": [
                "markup"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "markup",
                "style",
                "emoji",
                "emoji_variant"
            ],
            "lineno": 103
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "markup",
            "args": [
                "self"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "escape_backslashes",
            "args": [
                "match"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "pop_style",
            "args": [
                "style_name"
            ],
            "lineno": 140
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/measure.py": [
        {
            "type": "class",
            "name": "Measurement",
            "methods": [
                "Method `span` (line 20)",
                "Method `normalize` (line 24)",
                "Method `with_maximum` (line 34)",
                "Method `with_minimum` (line 46)",
                "Method `clamp` (line 59)",
                "Method `get` (line 79)"
            ],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "measure_renderables",
            "args": [
                "console",
                "options",
                "renderables"
            ],
            "lineno": 125
        },
        {
            "type": "function",
            "name": "span",
            "args": [
                "self"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "normalize",
            "args": [
                "self"
            ],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "with_maximum",
            "args": [
                "self",
                "width"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "with_minimum",
            "args": [
                "self",
                "width"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "clamp",
            "args": [
                "self",
                "min_width",
                "max_width"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "cls",
                "console",
                "options",
                "renderable"
            ],
            "lineno": 79
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/padding.py": [
        {
            "type": "class",
            "name": "Padding",
            "methods": [
                "Method `__init__` (line 33)",
                "Method `indent` (line 47)",
                "Method `unpack` (line 61)",
                "Method `__repr__` (line 76)",
                "Method `__rich_console__` (line 79)",
                "Method `__rich_measure__` (line 125)"
            ],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "renderable",
                "pad"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "indent",
            "args": [
                "cls",
                "renderable",
                "level"
            ],
            "lineno": 47
        },
        {
            "type": "function",
            "name": "unpack",
            "args": [
                "pad"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 125
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/pager.py": [
        {
            "type": "class",
            "name": "Pager",
            "methods": [
                "Method `show` (line 9)"
            ],
            "lineno": 5
        },
        {
            "type": "class",
            "name": "SystemPager",
            "methods": [
                "Method `_pager` (line 20)",
                "Method `show` (line 23)"
            ],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "show",
            "args": [
                "self",
                "content"
            ],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "_pager",
            "args": [
                "self",
                "content"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "show",
            "args": [
                "self",
                "content"
            ],
            "lineno": 23
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/palette.py": [
        {
            "type": "class",
            "name": "Palette",
            "methods": [
                "Method `__init__` (line 14)",
                "Method `__getitem__` (line 17)",
                "Method `__rich__` (line 20)",
                "Method `match` (line 45)"
            ],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "colors"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "number"
            ],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "__rich__",
            "args": [
                "self"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "match",
            "args": [
                "self",
                "color"
            ],
            "lineno": 45
        },
        {
            "type": "class",
            "name": "ColorBox",
            "methods": [
                "Method `__rich_console__` (line 84)"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "get_color_distance",
            "args": [
                "index"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 84
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/panel.py": [
        {
            "type": "class",
            "name": "Panel",
            "methods": [
                "Method `__init__` (line 38)",
                "Method `fit` (line 72)",
                "Method `_title` (line 104)",
                "Method `_subtitle` (line 120)",
                "Method `__rich_console__` (line 135)",
                "Method `__rich_measure__` (line 268)"
            ],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "renderable",
                "box"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "fit",
            "args": [
                "cls",
                "renderable",
                "box"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "_title",
            "args": [
                "self"
            ],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "_subtitle",
            "args": [
                "self"
            ],
            "lineno": 120
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 268
        },
        {
            "type": "function",
            "name": "align_text",
            "args": [
                "text",
                "width",
                "align",
                "character",
                "style"
            ],
            "lineno": 153
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/pretty.py": [
        {
            "type": "function",
            "name": "_is_attr_object",
            "args": [
                "obj"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "_get_attr_fields",
            "args": [
                "obj"
            ],
            "lineno": 63
        },
        {
            "type": "function",
            "name": "_is_dataclass_repr",
            "args": [
                "obj"
            ],
            "lineno": 68
        },
        {
            "type": "function",
            "name": "_has_default_namedtuple_repr",
            "args": [
                "obj"
            ],
            "lineno": 88
        },
        {
            "type": "function",
            "name": "_ipy_display_hook",
            "args": [
                "value",
                "console",
                "overflow",
                "crop",
                "indent_guides",
                "max_length",
                "max_string",
                "max_depth",
                "expand_all"
            ],
            "lineno": 108
        },
        {
            "type": "function",
            "name": "_safe_isinstance",
            "args": [
                "obj",
                "class_or_tuple"
            ],
            "lineno": 154
        },
        {
            "type": "function",
            "name": "install",
            "args": [
                "console",
                "overflow",
                "crop",
                "indent_guides",
                "max_length",
                "max_string",
                "max_depth",
                "expand_all"
            ],
            "lineno": 164
        },
        {
            "type": "class",
            "name": "Pretty",
            "methods": [
                "Method `__init__` (line 263)",
                "Method `__rich_console__` (line 294)",
                "Method `__rich_measure__` (line 329)"
            ],
            "lineno": 243
        },
        {
            "type": "function",
            "name": "_get_braces_for_defaultdict",
            "args": [
                "_object"
            ],
            "lineno": 347
        },
        {
            "type": "function",
            "name": "_get_braces_for_array",
            "args": [
                "_object"
            ],
            "lineno": 355
        },
        {
            "type": "function",
            "name": "is_expandable",
            "args": [
                "obj"
            ],
            "lineno": 378
        },
        {
            "type": "class",
            "name": "Node",
            "methods": [
                "Method `iter_tokens` (line 404)",
                "Method `check_length` (line 426)",
                "Method `__str__` (line 443)",
                "Method `render` (line 447)"
            ],
            "lineno": 389
        },
        {
            "type": "class",
            "name": "_Line",
            "methods": [
                "Method `expandable` (line 487)",
                "Method `check_length` (line 491)",
                "Method `expand` (line 499)",
                "Method `__str__` (line 532)"
            ],
            "lineno": 474
        },
        {
            "type": "function",
            "name": "_is_namedtuple",
            "args": [
                "obj"
            ],
            "lineno": 541
        },
        {
            "type": "function",
            "name": "traverse",
            "args": [
                "_object",
                "max_length",
                "max_string",
                "max_depth"
            ],
            "lineno": 560
        },
        {
            "type": "function",
            "name": "pretty_repr",
            "args": [
                "_object"
            ],
            "lineno": 856
        },
        {
            "type": "function",
            "name": "pprint",
            "args": [
                "_object"
            ],
            "lineno": 896
        },
        {
            "type": "function",
            "name": "display_hook",
            "args": [
                "value"
            ],
            "lineno": 193
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "_object",
                "highlighter"
            ],
            "lineno": 263
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 294
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 329
        },
        {
            "type": "function",
            "name": "iter_tokens",
            "args": [
                "self"
            ],
            "lineno": 404
        },
        {
            "type": "function",
            "name": "check_length",
            "args": [
                "self",
                "start_length",
                "max_length"
            ],
            "lineno": 426
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 443
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "max_width",
                "indent_size",
                "expand_all"
            ],
            "lineno": 447
        },
        {
            "type": "function",
            "name": "expandable",
            "args": [
                "self"
            ],
            "lineno": 487
        },
        {
            "type": "function",
            "name": "check_length",
            "args": [
                "self",
                "max_length"
            ],
            "lineno": 491
        },
        {
            "type": "function",
            "name": "expand",
            "args": [
                "self",
                "indent_size"
            ],
            "lineno": 499
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 532
        },
        {
            "type": "function",
            "name": "to_repr",
            "args": [
                "obj"
            ],
            "lineno": 581
        },
        {
            "type": "function",
            "name": "_traverse",
            "args": [
                "obj",
                "root",
                "depth"
            ],
            "lineno": 601
        },
        {
            "type": "class",
            "name": "BrokenRepr",
            "methods": [
                "Method `__repr__` (line 936)"
            ],
            "lineno": 935
        },
        {
            "type": "class",
            "name": "StockKeepingUnit",
            "methods": null,
            "lineno": 942
        },
        {
            "type": "class",
            "name": "Thing",
            "methods": [
                "Method `__repr__` (line 991)"
            ],
            "lineno": 990
        },
        {
            "type": "class",
            "name": "RichFormatter",
            "methods": [
                "Method `__call__` (line 221)"
            ],
            "lineno": 218
        },
        {
            "type": "function",
            "name": "iter_rich_args",
            "args": [
                "rich_args"
            ],
            "lineno": 613
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 936
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 991
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "value"
            ],
            "lineno": 221
        },
        {
            "type": "function",
            "name": "iter_attrs",
            "args": [],
            "lineno": 711
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/progress.py": [
        {
            "type": "class",
            "name": "_TrackThread",
            "methods": [
                "Method `__init__` (line 66)",
                "Method `run` (line 75)",
                "Method `__enter__` (line 89)",
                "Method `__exit__` (line 93)"
            ],
            "lineno": 63
        },
        {
            "type": "function",
            "name": "track",
            "args": [
                "sequence",
                "description",
                "total",
                "auto_refresh",
                "console",
                "transient",
                "get_time",
                "refresh_per_second",
                "style",
                "complete_style",
                "finished_style",
                "pulse_style",
                "update_period",
                "disable",
                "show_speed"
            ],
            "lineno": 103
        },
        {
            "type": "class",
            "name": "_Reader",
            "methods": [
                "Method `__init__` (line 176)",
                "Method `__enter__` (line 189)",
                "Method `__exit__` (line 193)",
                "Method `__iter__` (line 201)",
                "Method `__next__` (line 204)",
                "Method `closed` (line 210)",
                "Method `fileno` (line 213)",
                "Method `isatty` (line 216)",
                "Method `mode` (line 220)",
                "Method `name` (line 224)",
                "Method `readable` (line 227)",
                "Method `seekable` (line 230)",
                "Method `writable` (line 233)",
                "Method `read` (line 236)",
                "Method `readinto` (line 241)",
                "Method `readline` (line 246)",
                "Method `readlines` (line 251)",
                "Method `close` (line 256)",
                "Method `seek` (line 261)",
                "Method `tell` (line 266)",
                "Method `write` (line 269)"
            ],
            "lineno": 173
        },
        {
            "type": "class",
            "name": "_ReadContext",
            "methods": [
                "Method `__init__` (line 276)",
                "Method `__enter__` (line 280)",
                "Method `__exit__` (line 284)"
            ],
            "lineno": 273
        },
        {
            "type": "function",
            "name": "wrap_file",
            "args": [
                "file",
                "total"
            ],
            "lineno": 294
        },
        {
            "type": "function",
            "name": "open",
            "args": [
                "file",
                "mode",
                "buffering",
                "encoding",
                "errors",
                "newline"
            ],
            "lineno": 360
        },
        {
            "type": "function",
            "name": "open",
            "args": [
                "file",
                "mode",
                "buffering",
                "encoding",
                "errors",
                "newline"
            ],
            "lineno": 385
        },
        {
            "type": "function",
            "name": "open",
            "args": [
                "file",
                "mode",
                "buffering",
                "encoding",
                "errors",
                "newline"
            ],
            "lineno": 409
        },
        {
            "type": "class",
            "name": "ProgressColumn",
            "methods": [
                "Method `__init__` (line 500)",
                "Method `get_table_column` (line 505)",
                "Method `__call__` (line 509)",
                "Method `render` (line 533)"
            ],
            "lineno": 495
        },
        {
            "type": "class",
            "name": "RenderableColumn",
            "methods": [
                "Method `__init__` (line 544)",
                "Method `render` (line 550)"
            ],
            "lineno": 537
        },
        {
            "type": "class",
            "name": "SpinnerColumn",
            "methods": [
                "Method `__init__` (line 564)",
                "Method `set_spinner` (line 580)",
                "Method `render` (line 595)"
            ],
            "lineno": 554
        },
        {
            "type": "class",
            "name": "TextColumn",
            "methods": [
                "Method `__init__` (line 607)",
                "Method `render` (line 623)"
            ],
            "lineno": 604
        },
        {
            "type": "class",
            "name": "BarColumn",
            "methods": [
                "Method `__init__` (line 645)",
                "Method `render` (line 661)"
            ],
            "lineno": 634
        },
        {
            "type": "class",
            "name": "TimeElapsedColumn",
            "methods": [
                "Method `render` (line 679)"
            ],
            "lineno": 676
        },
        {
            "type": "class",
            "name": "TaskProgressColumn",
            "methods": [
                "Method `__init__` (line 702)",
                "Method `render_speed` (line 726)",
                "Method `render` (line 745)"
            ],
            "lineno": 688
        },
        {
            "type": "class",
            "name": "TimeRemainingColumn",
            "methods": [
                "Method `__init__` (line 772)",
                "Method `render` (line 782)"
            ],
            "lineno": 761
        },
        {
            "type": "class",
            "name": "FileSizeColumn",
            "methods": [
                "Method `render` (line 812)"
            ],
            "lineno": 809
        },
        {
            "type": "class",
            "name": "TotalFileSizeColumn",
            "methods": [
                "Method `render` (line 821)"
            ],
            "lineno": 818
        },
        {
            "type": "class",
            "name": "MofNCompleteColumn",
            "methods": [
                "Method `__init__` (line 839)",
                "Method `render` (line 843)"
            ],
            "lineno": 827
        },
        {
            "type": "class",
            "name": "DownloadColumn",
            "methods": [
                "Method `__init__` (line 861)",
                "Method `render` (line 867)"
            ],
            "lineno": 854
        },
        {
            "type": "class",
            "name": "TransferSpeedColumn",
            "methods": [
                "Method `render` (line 906)"
            ],
            "lineno": 903
        },
        {
            "type": "class",
            "name": "ProgressSample",
            "methods": null,
            "lineno": 915
        },
        {
            "type": "class",
            "name": "Task",
            "methods": [
                "Method `get_time` (line 972)",
                "Method `started` (line 977)",
                "Method `remaining` (line 982)",
                "Method `elapsed` (line 989)",
                "Method `finished` (line 998)",
                "Method `percentage` (line 1003)",
                "Method `speed` (line 1012)",
                "Method `time_remaining` (line 1030)",
                "Method `_reset` (line 1043)"
            ],
            "lineno": 925
        },
        {
            "type": "class",
            "name": "Progress",
            "methods": [
                "Method `__init__` (line 1066)",
                "Method `get_default_columns` (line 1103)",
                "Method `console` (line 1134)",
                "Method `tasks` (line 1138)",
                "Method `task_ids` (line 1144)",
                "Method `finished` (line 1150)",
                "Method `start` (line 1157)",
                "Method `stop` (line 1162)",
                "Method `__enter__` (line 1168)",
                "Method `__exit__` (line 1172)",
                "Method `track` (line 1180)",
                "Method `wrap_file` (line 1221)",
                "Method `open` (line 1264)",
                "Method `open` (line 1280)",
                "Method `open` (line 1295)",
                "Method `start_task` (line 1372)",
                "Method `stop_task` (line 1386)",
                "Method `update` (line 1401)",
                "Method `reset` (line 1462)",
                "Method `advance` (line 1501)",
                "Method `refresh` (line 1531)",
                "Method `get_renderable` (line 1536)",
                "Method `get_renderables` (line 1541)",
                "Method `make_tasks_table` (line 1546)",
                "Method `__rich__` (line 1579)",
                "Method `add_task` (line 1584)",
                "Method `remove_task` (line 1627)"
            ],
            "lineno": 1050
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "progress",
                "task_id",
                "update_period"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "run",
            "args": [
                "self"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "handle",
                "progress",
                "task",
                "close_handle"
            ],
            "lineno": 176
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 189
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 193
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "__next__",
            "args": [
                "self"
            ],
            "lineno": 204
        },
        {
            "type": "function",
            "name": "closed",
            "args": [
                "self"
            ],
            "lineno": 210
        },
        {
            "type": "function",
            "name": "fileno",
            "args": [
                "self"
            ],
            "lineno": 213
        },
        {
            "type": "function",
            "name": "isatty",
            "args": [
                "self"
            ],
            "lineno": 216
        },
        {
            "type": "function",
            "name": "mode",
            "args": [
                "self"
            ],
            "lineno": 220
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 224
        },
        {
            "type": "function",
            "name": "readable",
            "args": [
                "self"
            ],
            "lineno": 227
        },
        {
            "type": "function",
            "name": "seekable",
            "args": [
                "self"
            ],
            "lineno": 230
        },
        {
            "type": "function",
            "name": "writable",
            "args": [
                "self"
            ],
            "lineno": 233
        },
        {
            "type": "function",
            "name": "read",
            "args": [
                "self",
                "size"
            ],
            "lineno": 236
        },
        {
            "type": "function",
            "name": "readinto",
            "args": [
                "self",
                "b"
            ],
            "lineno": 241
        },
        {
            "type": "function",
            "name": "readline",
            "args": [
                "self",
                "size"
            ],
            "lineno": 246
        },
        {
            "type": "function",
            "name": "readlines",
            "args": [
                "self",
                "hint"
            ],
            "lineno": 251
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 256
        },
        {
            "type": "function",
            "name": "seek",
            "args": [
                "self",
                "offset",
                "whence"
            ],
            "lineno": 261
        },
        {
            "type": "function",
            "name": "tell",
            "args": [
                "self"
            ],
            "lineno": 266
        },
        {
            "type": "function",
            "name": "write",
            "args": [
                "self",
                "s"
            ],
            "lineno": 269
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "progress",
                "reader"
            ],
            "lineno": 276
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 280
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 284
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "table_column"
            ],
            "lineno": 500
        },
        {
            "type": "function",
            "name": "get_table_column",
            "args": [
                "self"
            ],
            "lineno": 505
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "task"
            ],
            "lineno": 509
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "task"
            ],
            "lineno": 533
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "renderable"
            ],
            "lineno": 544
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "task"
            ],
            "lineno": 550
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "spinner_name",
                "style",
                "speed",
                "finished_text",
                "table_column"
            ],
            "lineno": 564
        },
        {
            "type": "function",
            "name": "set_spinner",
            "args": [
                "self",
                "spinner_name",
                "spinner_style",
                "speed"
            ],
            "lineno": 580
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "task"
            ],
            "lineno": 595
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "text_format",
                "style",
                "justify",
                "markup",
                "highlighter",
                "table_column"
            ],
            "lineno": 607
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "task"
            ],
            "lineno": 623
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "bar_width",
                "style",
                "complete_style",
                "finished_style",
                "pulse_style",
                "table_column"
            ],
            "lineno": 645
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "task"
            ],
            "lineno": 661
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "task"
            ],
            "lineno": 679
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "text_format",
                "text_format_no_percentage",
                "style",
                "justify",
                "markup",
                "highlighter",
                "table_column",
                "show_speed"
            ],
            "lineno": 702
        },
        {
            "type": "function",
            "name": "render_speed",
            "args": [
                "cls",
                "speed"
            ],
            "lineno": 726
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "task"
            ],
            "lineno": 745
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "compact",
                "elapsed_when_finished",
                "table_column"
            ],
            "lineno": 772
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "task"
            ],
            "lineno": 782
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "task"
            ],
            "lineno": 812
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "task"
            ],
            "lineno": 821
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "separator",
                "table_column"
            ],
            "lineno": 839
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "task"
            ],
            "lineno": 843
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "binary_units",
                "table_column"
            ],
            "lineno": 861
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "task"
            ],
            "lineno": 867
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "task"
            ],
            "lineno": 906
        },
        {
            "type": "function",
            "name": "get_time",
            "args": [
                "self"
            ],
            "lineno": 972
        },
        {
            "type": "function",
            "name": "started",
            "args": [
                "self"
            ],
            "lineno": 977
        },
        {
            "type": "function",
            "name": "remaining",
            "args": [
                "self"
            ],
            "lineno": 982
        },
        {
            "type": "function",
            "name": "elapsed",
            "args": [
                "self"
            ],
            "lineno": 989
        },
        {
            "type": "function",
            "name": "finished",
            "args": [
                "self"
            ],
            "lineno": 998
        },
        {
            "type": "function",
            "name": "percentage",
            "args": [
                "self"
            ],
            "lineno": 1003
        },
        {
            "type": "function",
            "name": "speed",
            "args": [
                "self"
            ],
            "lineno": 1012
        },
        {
            "type": "function",
            "name": "time_remaining",
            "args": [
                "self"
            ],
            "lineno": 1030
        },
        {
            "type": "function",
            "name": "_reset",
            "args": [
                "self"
            ],
            "lineno": 1043
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*columns"
            ],
            "lineno": 1066
        },
        {
            "type": "function",
            "name": "get_default_columns",
            "args": [
                "cls"
            ],
            "lineno": 1103
        },
        {
            "type": "function",
            "name": "console",
            "args": [
                "self"
            ],
            "lineno": 1134
        },
        {
            "type": "function",
            "name": "tasks",
            "args": [
                "self"
            ],
            "lineno": 1138
        },
        {
            "type": "function",
            "name": "task_ids",
            "args": [
                "self"
            ],
            "lineno": 1144
        },
        {
            "type": "function",
            "name": "finished",
            "args": [
                "self"
            ],
            "lineno": 1150
        },
        {
            "type": "function",
            "name": "start",
            "args": [
                "self"
            ],
            "lineno": 1157
        },
        {
            "type": "function",
            "name": "stop",
            "args": [
                "self"
            ],
            "lineno": 1162
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 1168
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 1172
        },
        {
            "type": "function",
            "name": "track",
            "args": [
                "self",
                "sequence",
                "total",
                "task_id",
                "description",
                "update_period"
            ],
            "lineno": 1180
        },
        {
            "type": "function",
            "name": "wrap_file",
            "args": [
                "self",
                "file",
                "total"
            ],
            "lineno": 1221
        },
        {
            "type": "function",
            "name": "open",
            "args": [
                "self",
                "file",
                "mode",
                "buffering",
                "encoding",
                "errors",
                "newline"
            ],
            "lineno": 1264
        },
        {
            "type": "function",
            "name": "open",
            "args": [
                "self",
                "file",
                "mode",
                "buffering",
                "encoding",
                "errors",
                "newline"
            ],
            "lineno": 1280
        },
        {
            "type": "function",
            "name": "open",
            "args": [
                "self",
                "file",
                "mode",
                "buffering",
                "encoding",
                "errors",
                "newline"
            ],
            "lineno": 1295
        },
        {
            "type": "function",
            "name": "start_task",
            "args": [
                "self",
                "task_id"
            ],
            "lineno": 1372
        },
        {
            "type": "function",
            "name": "stop_task",
            "args": [
                "self",
                "task_id"
            ],
            "lineno": 1386
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "task_id",
                "**fields"
            ],
            "lineno": 1401
        },
        {
            "type": "function",
            "name": "reset",
            "args": [
                "self",
                "task_id",
                "**fields"
            ],
            "lineno": 1462
        },
        {
            "type": "function",
            "name": "advance",
            "args": [
                "self",
                "task_id",
                "advance"
            ],
            "lineno": 1501
        },
        {
            "type": "function",
            "name": "refresh",
            "args": [
                "self"
            ],
            "lineno": 1531
        },
        {
            "type": "function",
            "name": "get_renderable",
            "args": [
                "self"
            ],
            "lineno": 1536
        },
        {
            "type": "function",
            "name": "get_renderables",
            "args": [
                "self"
            ],
            "lineno": 1541
        },
        {
            "type": "function",
            "name": "make_tasks_table",
            "args": [
                "self",
                "tasks"
            ],
            "lineno": 1546
        },
        {
            "type": "function",
            "name": "__rich__",
            "args": [
                "self"
            ],
            "lineno": 1579
        },
        {
            "type": "function",
            "name": "add_task",
            "args": [
                "self",
                "description",
                "start",
                "total",
                "completed",
                "visible",
                "**fields"
            ],
            "lineno": 1584
        },
        {
            "type": "function",
            "name": "remove_task",
            "args": [
                "self",
                "task_id"
            ],
            "lineno": 1627
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/progress_bar.py": [
        {
            "type": "class",
            "name": "ProgressBar",
            "methods": [
                "Method `__init__` (line 33)",
                "Method `__repr__` (line 57)",
                "Method `percentage_completed` (line 61)",
                "Method `_get_pulse_segments` (line 70)",
                "Method `update` (line 116)",
                "Method `_render_pulse` (line 126)",
                "Method `__rich_console__` (line 156)",
                "Method `__rich_measure__` (line 201)"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "total",
                "completed",
                "width",
                "pulse",
                "style",
                "complete_style",
                "finished_style",
                "pulse_style",
                "animation_time"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "percentage_completed",
            "args": [
                "self"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "_get_pulse_segments",
            "args": [
                "self",
                "fore_style",
                "back_style",
                "color_system",
                "no_color",
                "ascii"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "completed",
                "total"
            ],
            "lineno": 116
        },
        {
            "type": "function",
            "name": "_render_pulse",
            "args": [
                "self",
                "console",
                "width",
                "ascii"
            ],
            "lineno": 126
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 201
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/prompt.py": [
        {
            "type": "class",
            "name": "PromptError",
            "methods": null,
            "lineno": 11
        },
        {
            "type": "class",
            "name": "InvalidResponse",
            "methods": [
                "Method `__init__` (line 23)",
                "Method `__rich__` (line 26)"
            ],
            "lineno": 15
        },
        {
            "type": "class",
            "name": "PromptBase",
            "methods": [
                "Method `__init__` (line 53)",
                "Method `ask` (line 77)",
                "Method `ask` (line 93)",
                "Method `ask` (line 107)",
                "Method `render_default` (line 143)",
                "Method `make_prompt` (line 154)",
                "Method `get_input` (line 186)",
                "Method `check_choice` (line 205)",
                "Method `process_response` (line 217)",
                "Method `on_validate_error` (line 240)",
                "Method `pre_prompt` (line 249)",
                "Method `__call__` (line 253)",
                "Method `__call__` (line 257)",
                "Method `__call__` (line 262)"
            ],
            "lineno": 30
        },
        {
            "type": "class",
            "name": "Prompt",
            "methods": null,
            "lineno": 286
        },
        {
            "type": "class",
            "name": "IntPrompt",
            "methods": null,
            "lineno": 298
        },
        {
            "type": "class",
            "name": "FloatPrompt",
            "methods": null,
            "lineno": 310
        },
        {
            "type": "class",
            "name": "Confirm",
            "methods": [
                "Method `render_default` (line 335)",
                "Method `process_response` (line 340)"
            ],
            "lineno": 322
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "message"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "__rich__",
            "args": [
                "self"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "prompt"
            ],
            "lineno": 53
        },
        {
            "type": "function",
            "name": "ask",
            "args": [
                "cls",
                "prompt"
            ],
            "lineno": 77
        },
        {
            "type": "function",
            "name": "ask",
            "args": [
                "cls",
                "prompt"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "ask",
            "args": [
                "cls",
                "prompt"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "render_default",
            "args": [
                "self",
                "default"
            ],
            "lineno": 143
        },
        {
            "type": "function",
            "name": "make_prompt",
            "args": [
                "self",
                "default"
            ],
            "lineno": 154
        },
        {
            "type": "function",
            "name": "get_input",
            "args": [
                "cls",
                "console",
                "prompt",
                "password",
                "stream"
            ],
            "lineno": 186
        },
        {
            "type": "function",
            "name": "check_choice",
            "args": [
                "self",
                "value"
            ],
            "lineno": 205
        },
        {
            "type": "function",
            "name": "process_response",
            "args": [
                "self",
                "value"
            ],
            "lineno": 217
        },
        {
            "type": "function",
            "name": "on_validate_error",
            "args": [
                "self",
                "value",
                "error"
            ],
            "lineno": 240
        },
        {
            "type": "function",
            "name": "pre_prompt",
            "args": [
                "self"
            ],
            "lineno": 249
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self"
            ],
            "lineno": 253
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self"
            ],
            "lineno": 257
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self"
            ],
            "lineno": 262
        },
        {
            "type": "function",
            "name": "render_default",
            "args": [
                "self",
                "default"
            ],
            "lineno": 335
        },
        {
            "type": "function",
            "name": "process_response",
            "args": [
                "self",
                "value"
            ],
            "lineno": 340
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/protocol.py": [
        {
            "type": "function",
            "name": "is_renderable",
            "args": [
                "check_object"
            ],
            "lineno": 10
        },
        {
            "type": "function",
            "name": "rich_cast",
            "args": [
                "renderable"
            ],
            "lineno": 19
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/region.py": [
        {
            "type": "class",
            "name": "Region",
            "methods": null,
            "lineno": 4
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/repr.py": [
        {
            "type": "class",
            "name": "ReprError",
            "methods": null,
            "lineno": 23
        },
        {
            "type": "function",
            "name": "auto",
            "args": [
                "cls"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "auto",
            "args": [],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "auto",
            "args": [
                "cls"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "rich_repr",
            "args": [
                "cls"
            ],
            "lineno": 105
        },
        {
            "type": "function",
            "name": "rich_repr",
            "args": [],
            "lineno": 110
        },
        {
            "type": "function",
            "name": "rich_repr",
            "args": [
                "cls"
            ],
            "lineno": 114
        },
        {
            "type": "function",
            "name": "do_replace",
            "args": [
                "cls",
                "angular"
            ],
            "lineno": 42
        },
        {
            "type": "class",
            "name": "Foo",
            "methods": [
                "Method `__rich_repr__` (line 127)"
            ],
            "lineno": 126
        },
        {
            "type": "function",
            "name": "auto_repr",
            "args": [
                "self"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "auto_rich_repr",
            "args": [
                "self"
            ],
            "lineno": 68
        },
        {
            "type": "function",
            "name": "__rich_repr__",
            "args": [
                "self"
            ],
            "lineno": 127
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/rule.py": [
        {
            "type": "class",
            "name": "Rule",
            "methods": [
                "Method `__init__` (line 23)",
                "Method `__repr__` (line 46)",
                "Method `__rich_console__` (line 49)",
                "Method `_rule_line` (line 105)",
                "Method `__rich_measure__` (line 111)"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "title"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "_rule_line",
            "args": [
                "self",
                "chars_len",
                "width"
            ],
            "lineno": 105
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 111
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/scope.py": [
        {
            "type": "function",
            "name": "render_scope",
            "args": [
                "scope"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "sort_items",
            "args": [
                "item"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "test",
            "args": [
                "foo",
                "bar"
            ],
            "lineno": 75
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/screen.py": [
        {
            "type": "class",
            "name": "Screen",
            "methods": [
                "Method `__init__` (line 28)",
                "Method `__rich_console__` (line 40)"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*renderables"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 40
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/segment.py": [
        {
            "type": "class",
            "name": "ControlType",
            "methods": null,
            "lineno": 35
        },
        {
            "type": "class",
            "name": "Segment",
            "methods": [
                "Method `cell_length` (line 82)",
                "Method `__rich_repr__` (line 91)",
                "Method `__bool__` (line 100)",
                "Method `is_control` (line 105)",
                "Method `_split_cells` (line 111)",
                "Method `split_cells` (line 149)",
                "Method `line` (line 172)",
                "Method `apply_style` (line 177)",
                "Method `filter_control` (line 218)",
                "Method `split_lines` (line 237)",
                "Method `split_and_crop_lines` (line 266)",
                "Method `adjust_line_length` (line 313)",
                "Method `get_line_length` (line 358)",
                "Method `get_shape` (line 371)",
                "Method `set_shape` (line 385)",
                "Method `align_top` (line 421)",
                "Method `align_bottom` (line 450)",
                "Method `align_middle` (line 479)",
                "Method `simplify` (line 510)",
                "Method `strip_links` (line 537)",
                "Method `strip_styles` (line 554)",
                "Method `remove_color` (line 567)",
                "Method `divide` (line 589)"
            ],
            "lineno": 64
        },
        {
            "type": "class",
            "name": "Segments",
            "methods": [
                "Method `__init__` (line 667)",
                "Method `__rich_console__` (line 671)"
            ],
            "lineno": 658
        },
        {
            "type": "class",
            "name": "SegmentLines",
            "methods": [
                "Method `__init__` (line 684)",
                "Method `__rich_console__` (line 695)"
            ],
            "lineno": 683
        },
        {
            "type": "function",
            "name": "cell_length",
            "args": [
                "self"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "__rich_repr__",
            "args": [
                "self"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 100
        },
        {
            "type": "function",
            "name": "is_control",
            "args": [
                "self"
            ],
            "lineno": 105
        },
        {
            "type": "function",
            "name": "_split_cells",
            "args": [
                "cls",
                "segment",
                "cut"
            ],
            "lineno": 111
        },
        {
            "type": "function",
            "name": "split_cells",
            "args": [
                "self",
                "cut"
            ],
            "lineno": 149
        },
        {
            "type": "function",
            "name": "line",
            "args": [
                "cls"
            ],
            "lineno": 172
        },
        {
            "type": "function",
            "name": "apply_style",
            "args": [
                "cls",
                "segments",
                "style",
                "post_style"
            ],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "filter_control",
            "args": [
                "cls",
                "segments",
                "is_control"
            ],
            "lineno": 218
        },
        {
            "type": "function",
            "name": "split_lines",
            "args": [
                "cls",
                "segments"
            ],
            "lineno": 237
        },
        {
            "type": "function",
            "name": "split_and_crop_lines",
            "args": [
                "cls",
                "segments",
                "length",
                "style",
                "pad",
                "include_new_lines"
            ],
            "lineno": 266
        },
        {
            "type": "function",
            "name": "adjust_line_length",
            "args": [
                "cls",
                "line",
                "length",
                "style",
                "pad"
            ],
            "lineno": 313
        },
        {
            "type": "function",
            "name": "get_line_length",
            "args": [
                "cls",
                "line"
            ],
            "lineno": 358
        },
        {
            "type": "function",
            "name": "get_shape",
            "args": [
                "cls",
                "lines"
            ],
            "lineno": 371
        },
        {
            "type": "function",
            "name": "set_shape",
            "args": [
                "cls",
                "lines",
                "width",
                "height",
                "style",
                "new_lines"
            ],
            "lineno": 385
        },
        {
            "type": "function",
            "name": "align_top",
            "args": [
                "cls",
                "lines",
                "width",
                "height",
                "style",
                "new_lines"
            ],
            "lineno": 421
        },
        {
            "type": "function",
            "name": "align_bottom",
            "args": [
                "cls",
                "lines",
                "width",
                "height",
                "style",
                "new_lines"
            ],
            "lineno": 450
        },
        {
            "type": "function",
            "name": "align_middle",
            "args": [
                "cls",
                "lines",
                "width",
                "height",
                "style",
                "new_lines"
            ],
            "lineno": 479
        },
        {
            "type": "function",
            "name": "simplify",
            "args": [
                "cls",
                "segments"
            ],
            "lineno": 510
        },
        {
            "type": "function",
            "name": "strip_links",
            "args": [
                "cls",
                "segments"
            ],
            "lineno": 537
        },
        {
            "type": "function",
            "name": "strip_styles",
            "args": [
                "cls",
                "segments"
            ],
            "lineno": 554
        },
        {
            "type": "function",
            "name": "remove_color",
            "args": [
                "cls",
                "segments"
            ],
            "lineno": 567
        },
        {
            "type": "function",
            "name": "divide",
            "args": [
                "cls",
                "segments",
                "cuts"
            ],
            "lineno": 589
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "segments",
                "new_lines"
            ],
            "lineno": 667
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 671
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "lines",
                "new_lines"
            ],
            "lineno": 684
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 695
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/spinner.py": [
        {
            "type": "class",
            "name": "Spinner",
            "methods": [
                "Method `__init__` (line 26)",
                "Method `__rich_console__` (line 49)",
                "Method `__rich_measure__` (line 54)",
                "Method `render` (line 60)",
                "Method `update` (line 94)"
            ],
            "lineno": 13
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "text"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "time"
            ],
            "lineno": 60
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self"
            ],
            "lineno": 94
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/status.py": [
        {
            "type": "class",
            "name": "Status",
            "methods": [
                "Method `__init__` (line 23)",
                "Method `renderable` (line 45)",
                "Method `console` (line 49)",
                "Method `update` (line 53)",
                "Method `start` (line 85)",
                "Method `stop` (line 89)",
                "Method `__rich__` (line 93)",
                "Method `__enter__` (line 96)",
                "Method `__exit__` (line 100)"
            ],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "status"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "renderable",
            "args": [
                "self"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "console",
            "args": [
                "self"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "update",
            "args": [
                "self",
                "status"
            ],
            "lineno": 53
        },
        {
            "type": "function",
            "name": "start",
            "args": [
                "self"
            ],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "stop",
            "args": [
                "self"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "__rich__",
            "args": [
                "self"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 100
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/style.py": [
        {
            "type": "class",
            "name": "_Bit",
            "methods": [
                "Method `__init__` (line 21)",
                "Method `__get__` (line 24)"
            ],
            "lineno": 16
        },
        {
            "type": "class",
            "name": "Style",
            "methods": [
                "Method `__init__` (line 122)",
                "Method `null` (line 199)",
                "Method `from_color` (line 204)",
                "Method `from_meta` (line 228)",
                "Method `on` (line 249)",
                "Method `link_id` (line 281)",
                "Method `__str__` (line 285)",
                "Method `__bool__` (line 331)",
                "Method `_make_ansi_codes` (line 335)",
                "Method `normalize` (line 380)",
                "Method `pick_first` (line 396)",
                "Method `__rich_repr__` (line 403)",
                "Method `__eq__` (line 422)",
                "Method `__ne__` (line 427)",
                "Method `__hash__` (line 432)",
                "Method `color` (line 448)",
                "Method `bgcolor` (line 453)",
                "Method `link` (line 458)",
                "Method `transparent_background` (line 463)",
                "Method `background_style` (line 468)",
                "Method `meta` (line 473)",
                "Method `without_color` (line 478)",
                "Method `parse` (line 498)",
                "Method `get_html_style` (line 564)",
                "Method `combine` (line 601)",
                "Method `chain` (line 614)",
                "Method `copy` (line 626)",
                "Method `clear_meta_and_links` (line 649)",
                "Method `update_link` (line 671)",
                "Method `render` (line 694)",
                "Method `test` (line 720)",
                "Method `_add` (line 733)",
                "Method `__add__` (line 757)"
            ],
            "lineno": 31
        },
        {
            "type": "class",
            "name": "StyleStack",
            "methods": [
                "Method `__init__` (line 770)",
                "Method `__repr__` (line 773)",
                "Method `current` (line 777)",
                "Method `push` (line 781)",
                "Method `pop` (line 789)"
            ],
            "lineno": 765
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "bit_no"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "__get__",
            "args": [
                "self",
                "obj",
                "objtype"
            ],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "null",
            "args": [
                "cls"
            ],
            "lineno": 199
        },
        {
            "type": "function",
            "name": "from_color",
            "args": [
                "cls",
                "color",
                "bgcolor"
            ],
            "lineno": 204
        },
        {
            "type": "function",
            "name": "from_meta",
            "args": [
                "cls",
                "meta"
            ],
            "lineno": 228
        },
        {
            "type": "function",
            "name": "on",
            "args": [
                "cls",
                "meta",
                "**handlers"
            ],
            "lineno": 249
        },
        {
            "type": "function",
            "name": "link_id",
            "args": [
                "self"
            ],
            "lineno": 281
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 285
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 331
        },
        {
            "type": "function",
            "name": "_make_ansi_codes",
            "args": [
                "self",
                "color_system"
            ],
            "lineno": 335
        },
        {
            "type": "function",
            "name": "normalize",
            "args": [
                "cls",
                "style"
            ],
            "lineno": 380
        },
        {
            "type": "function",
            "name": "pick_first",
            "args": [
                "cls",
                "*values"
            ],
            "lineno": 396
        },
        {
            "type": "function",
            "name": "__rich_repr__",
            "args": [
                "self"
            ],
            "lineno": 403
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 422
        },
        {
            "type": "function",
            "name": "__ne__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 427
        },
        {
            "type": "function",
            "name": "__hash__",
            "args": [
                "self"
            ],
            "lineno": 432
        },
        {
            "type": "function",
            "name": "color",
            "args": [
                "self"
            ],
            "lineno": 448
        },
        {
            "type": "function",
            "name": "bgcolor",
            "args": [
                "self"
            ],
            "lineno": 453
        },
        {
            "type": "function",
            "name": "link",
            "args": [
                "self"
            ],
            "lineno": 458
        },
        {
            "type": "function",
            "name": "transparent_background",
            "args": [
                "self"
            ],
            "lineno": 463
        },
        {
            "type": "function",
            "name": "background_style",
            "args": [
                "self"
            ],
            "lineno": 468
        },
        {
            "type": "function",
            "name": "meta",
            "args": [
                "self"
            ],
            "lineno": 473
        },
        {
            "type": "function",
            "name": "without_color",
            "args": [
                "self"
            ],
            "lineno": 478
        },
        {
            "type": "function",
            "name": "parse",
            "args": [
                "cls",
                "style_definition"
            ],
            "lineno": 498
        },
        {
            "type": "function",
            "name": "get_html_style",
            "args": [
                "self",
                "theme"
            ],
            "lineno": 564
        },
        {
            "type": "function",
            "name": "combine",
            "args": [
                "cls",
                "styles"
            ],
            "lineno": 601
        },
        {
            "type": "function",
            "name": "chain",
            "args": [
                "cls",
                "*styles"
            ],
            "lineno": 614
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 626
        },
        {
            "type": "function",
            "name": "clear_meta_and_links",
            "args": [
                "self"
            ],
            "lineno": 649
        },
        {
            "type": "function",
            "name": "update_link",
            "args": [
                "self",
                "link"
            ],
            "lineno": 671
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "text"
            ],
            "lineno": 694
        },
        {
            "type": "function",
            "name": "test",
            "args": [
                "self",
                "text"
            ],
            "lineno": 720
        },
        {
            "type": "function",
            "name": "_add",
            "args": [
                "self",
                "style"
            ],
            "lineno": 733
        },
        {
            "type": "function",
            "name": "__add__",
            "args": [
                "self",
                "style"
            ],
            "lineno": 757
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "default_style"
            ],
            "lineno": 770
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 773
        },
        {
            "type": "function",
            "name": "current",
            "args": [
                "self"
            ],
            "lineno": 777
        },
        {
            "type": "function",
            "name": "push",
            "args": [
                "self",
                "style"
            ],
            "lineno": 781
        },
        {
            "type": "function",
            "name": "pop",
            "args": [
                "self"
            ],
            "lineno": 789
        },
        {
            "type": "function",
            "name": "_make_color",
            "args": [
                "color"
            ],
            "lineno": 146
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/styled.py": [
        {
            "type": "class",
            "name": "Styled",
            "methods": [
                "Method `__init__` (line 19)",
                "Method `__rich_console__` (line 23)",
                "Method `__rich_measure__` (line 31)"
            ],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "renderable",
                "style"
            ],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 31
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/syntax.py": [
        {
            "type": "class",
            "name": "SyntaxTheme",
            "methods": [
                "Method `get_style_for_token` (line 127)",
                "Method `get_background_style` (line 132)"
            ],
            "lineno": 123
        },
        {
            "type": "class",
            "name": "PygmentsSyntaxTheme",
            "methods": [
                "Method `__init__` (line 140)",
                "Method `get_style_for_token` (line 153)",
                "Method `get_background_style` (line 175)"
            ],
            "lineno": 137
        },
        {
            "type": "class",
            "name": "ANSISyntaxTheme",
            "methods": [
                "Method `__init__` (line 182)",
                "Method `get_style_for_token` (line 188)",
                "Method `get_background_style` (line 208)"
            ],
            "lineno": 179
        },
        {
            "type": "class",
            "name": "_SyntaxHighlightRange",
            "methods": null,
            "lineno": 215
        },
        {
            "type": "class",
            "name": "Syntax",
            "methods": [
                "Method `get_theme` (line 252)",
                "Method `__init__` (line 263)",
                "Method `from_path` (line 302)",
                "Method `guess_lexer` (line 365)",
                "Method `_get_base_style` (line 406)",
                "Method `_get_token_color` (line 411)",
                "Method `lexer` (line 424)",
                "Method `highlight` (line 442)",
                "Method `stylize_range` (line 527)",
                "Method `_get_line_numbers_color` (line 541)",
                "Method `_numbers_column_width` (line 557)",
                "Method `_get_number_styles` (line 567)",
                "Method `__rich_measure__` (line 590)",
                "Method `__rich_console__` (line 608)",
                "Method `_get_syntax` (line 619)",
                "Method `_apply_stylized_ranges` (line 753)",
                "Method `_process_code` (line 783)"
            ],
            "lineno": 227
        },
        {
            "type": "function",
            "name": "_get_code_index_for_syntax_position",
            "args": [
                "newlines_offsets",
                "position"
            ],
            "lineno": 804
        },
        {
            "type": "function",
            "name": "get_style_for_token",
            "args": [
                "self",
                "token_type"
            ],
            "lineno": 127
        },
        {
            "type": "function",
            "name": "get_background_style",
            "args": [
                "self"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "theme"
            ],
            "lineno": 140
        },
        {
            "type": "function",
            "name": "get_style_for_token",
            "args": [
                "self",
                "token_type"
            ],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "get_background_style",
            "args": [
                "self"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "style_map"
            ],
            "lineno": 182
        },
        {
            "type": "function",
            "name": "get_style_for_token",
            "args": [
                "self",
                "token_type"
            ],
            "lineno": 188
        },
        {
            "type": "function",
            "name": "get_background_style",
            "args": [
                "self"
            ],
            "lineno": 208
        },
        {
            "type": "function",
            "name": "get_theme",
            "args": [
                "cls",
                "name"
            ],
            "lineno": 252
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "code",
                "lexer"
            ],
            "lineno": 263
        },
        {
            "type": "function",
            "name": "from_path",
            "args": [
                "cls",
                "path",
                "encoding",
                "lexer",
                "theme",
                "dedent",
                "line_numbers",
                "line_range",
                "start_line",
                "highlight_lines",
                "code_width",
                "tab_size",
                "word_wrap",
                "background_color",
                "indent_guides",
                "padding"
            ],
            "lineno": 302
        },
        {
            "type": "function",
            "name": "guess_lexer",
            "args": [
                "cls",
                "path",
                "code"
            ],
            "lineno": 365
        },
        {
            "type": "function",
            "name": "_get_base_style",
            "args": [
                "self"
            ],
            "lineno": 406
        },
        {
            "type": "function",
            "name": "_get_token_color",
            "args": [
                "self",
                "token_type"
            ],
            "lineno": 411
        },
        {
            "type": "function",
            "name": "lexer",
            "args": [
                "self"
            ],
            "lineno": 424
        },
        {
            "type": "function",
            "name": "highlight",
            "args": [
                "self",
                "code",
                "line_range"
            ],
            "lineno": 442
        },
        {
            "type": "function",
            "name": "stylize_range",
            "args": [
                "self",
                "style",
                "start",
                "end"
            ],
            "lineno": 527
        },
        {
            "type": "function",
            "name": "_get_line_numbers_color",
            "args": [
                "self",
                "blend"
            ],
            "lineno": 541
        },
        {
            "type": "function",
            "name": "_numbers_column_width",
            "args": [
                "self"
            ],
            "lineno": 557
        },
        {
            "type": "function",
            "name": "_get_number_styles",
            "args": [
                "self",
                "console"
            ],
            "lineno": 567
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 590
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 608
        },
        {
            "type": "function",
            "name": "_get_syntax",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 619
        },
        {
            "type": "function",
            "name": "_apply_stylized_ranges",
            "args": [
                "self",
                "text"
            ],
            "lineno": 753
        },
        {
            "type": "function",
            "name": "_process_code",
            "args": [
                "self",
                "code"
            ],
            "lineno": 783
        },
        {
            "type": "function",
            "name": "line_tokenize",
            "args": [],
            "lineno": 480
        },
        {
            "type": "function",
            "name": "tokens_to_spans",
            "args": [],
            "lineno": 489
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/table.py": [
        {
            "type": "class",
            "name": "Column",
            "methods": [
                "Method `copy` (line 114)",
                "Method `cells` (line 119)",
                "Method `flexible` (line 124)"
            ],
            "lineno": 39
        },
        {
            "type": "class",
            "name": "Row",
            "methods": null,
            "lineno": 130
        },
        {
            "type": "class",
            "name": "_Cell",
            "methods": null,
            "lineno": 140
        },
        {
            "type": "class",
            "name": "Table",
            "methods": [
                "Method `__init__` (line 186)",
                "Method `grid` (line 252)",
                "Method `expand` (line 285)",
                "Method `expand` (line 290)",
                "Method `_extra_width` (line 295)",
                "Method `row_count` (line 305)",
                "Method `get_row_style` (line 309)",
                "Method `__rich_measure__` (line 319)",
                "Method `padding` (line 353)",
                "Method `padding` (line 358)",
                "Method `add_column` (line 363)",
                "Method `add_row` (line 418)",
                "Method `add_section` (line 465)",
                "Method `__rich_console__` (line 471)",
                "Method `_calculate_column_widths` (line 519)",
                "Method `_collapse_widths` (line 584)",
                "Method `_get_cells` (line 622)",
                "Method `_get_padding_width` (line 695)",
                "Method `_measure_column` (line 703)",
                "Method `_render` (line 743)"
            ],
            "lineno": 151
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 114
        },
        {
            "type": "function",
            "name": "cells",
            "args": [
                "self"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "flexible",
            "args": [
                "self"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*headers"
            ],
            "lineno": 186
        },
        {
            "type": "function",
            "name": "grid",
            "args": [
                "cls",
                "*headers"
            ],
            "lineno": 252
        },
        {
            "type": "function",
            "name": "expand",
            "args": [
                "self"
            ],
            "lineno": 285
        },
        {
            "type": "function",
            "name": "expand",
            "args": [
                "self",
                "expand"
            ],
            "lineno": 290
        },
        {
            "type": "function",
            "name": "_extra_width",
            "args": [
                "self"
            ],
            "lineno": 295
        },
        {
            "type": "function",
            "name": "row_count",
            "args": [
                "self"
            ],
            "lineno": 305
        },
        {
            "type": "function",
            "name": "get_row_style",
            "args": [
                "self",
                "console",
                "index"
            ],
            "lineno": 309
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 319
        },
        {
            "type": "function",
            "name": "padding",
            "args": [
                "self"
            ],
            "lineno": 353
        },
        {
            "type": "function",
            "name": "padding",
            "args": [
                "self",
                "padding"
            ],
            "lineno": 358
        },
        {
            "type": "function",
            "name": "add_column",
            "args": [
                "self",
                "header",
                "footer"
            ],
            "lineno": 363
        },
        {
            "type": "function",
            "name": "add_row",
            "args": [
                "self",
                "*renderables"
            ],
            "lineno": 418
        },
        {
            "type": "function",
            "name": "add_section",
            "args": [
                "self"
            ],
            "lineno": 465
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 471
        },
        {
            "type": "function",
            "name": "_calculate_column_widths",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 519
        },
        {
            "type": "function",
            "name": "_collapse_widths",
            "args": [
                "cls",
                "widths",
                "wrapable",
                "max_width"
            ],
            "lineno": 584
        },
        {
            "type": "function",
            "name": "_get_cells",
            "args": [
                "self",
                "console",
                "column_index",
                "column"
            ],
            "lineno": 622
        },
        {
            "type": "function",
            "name": "_get_padding_width",
            "args": [
                "self",
                "column_index"
            ],
            "lineno": 695
        },
        {
            "type": "function",
            "name": "_measure_column",
            "args": [
                "self",
                "console",
                "options",
                "column"
            ],
            "lineno": 703
        },
        {
            "type": "function",
            "name": "_render",
            "args": [
                "self",
                "console",
                "options",
                "widths"
            ],
            "lineno": 743
        },
        {
            "type": "function",
            "name": "add_cell",
            "args": [
                "column",
                "renderable"
            ],
            "lineno": 436
        },
        {
            "type": "function",
            "name": "render_annotation",
            "args": [
                "text",
                "style",
                "justify"
            ],
            "lineno": 493
        },
        {
            "type": "function",
            "name": "get_padding",
            "args": [
                "first_row",
                "last_row"
            ],
            "lineno": 637
        },
        {
            "type": "function",
            "name": "header",
            "args": [
                "text"
            ],
            "lineno": 963
        },
        {
            "type": "function",
            "name": "align_cell",
            "args": [
                "cell",
                "vertical",
                "width",
                "style"
            ],
            "lineno": 834
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/terminal_theme.py": [
        {
            "type": "class",
            "name": "TerminalTheme",
            "methods": [
                "Method `__init__` (line 20)"
            ],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "background",
                "foreground",
                "normal",
                "bright"
            ],
            "lineno": 20
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/text.py": [
        {
            "type": "class",
            "name": "Span",
            "methods": [
                "Method `__repr__` (line 55)",
                "Method `__bool__` (line 58)",
                "Method `split` (line 61)",
                "Method `move` (line 74)",
                "Method `right_crop` (line 86)"
            ],
            "lineno": 45
        },
        {
            "type": "class",
            "name": "Text",
            "methods": [
                "Method `__init__` (line 127)",
                "Method `__len__` (line 150)",
                "Method `__bool__` (line 153)",
                "Method `__str__` (line 156)",
                "Method `__repr__` (line 159)",
                "Method `__add__` (line 162)",
                "Method `__eq__` (line 169)",
                "Method `__contains__` (line 174)",
                "Method `__getitem__` (line 181)",
                "Method `cell_len` (line 208)",
                "Method `markup` (line 213)",
                "Method `from_markup` (line 243)",
                "Method `from_ansi` (line 275)",
                "Method `styled` (line 313)",
                "Method `assemble` (line 338)",
                "Method `plain` (line 383)",
                "Method `plain` (line 390)",
                "Method `spans` (line 401)",
                "Method `spans` (line 406)",
                "Method `blank_copy` (line 410)",
                "Method `copy` (line 423)",
                "Method `stylize` (line 437)",
                "Method `stylize_before` (line 463)",
                "Method `apply_meta` (line 489)",
                "Method `on` (line 503)",
                "Method `remove_suffix` (line 523)",
                "Method `get_style_at_offset` (line 532)",
                "Method `highlight_regex` (line 552)",
                "Method `highlight_words` (line 590)",
                "Method `rstrip` (line 619)",
                "Method `rstrip_end` (line 623)",
                "Method `set_length` (line 637)",
                "Method `__rich_console__` (line 646)",
                "Method `__rich_measure__` (line 665)",
                "Method `render` (line 677)",
                "Method `join` (line 736)",
                "Method `expand_tabs` (line 775)",
                "Method `truncate` (line 809)",
                "Method `_trim_spans` (line 836)",
                "Method `pad` (line 850)",
                "Method `pad_left` (line 866)",
                "Method `pad_right` (line 882)",
                "Method `align` (line 893)",
                "Method `append` (line 913)",
                "Method `append_text` (line 957)",
                "Method `append_tokens` (line 976)",
                "Method `copy_styles` (line 999)",
                "Method `split` (line 1007)",
                "Method `divide` (line 1051)",
                "Method `right_crop` (line 1131)",
                "Method `wrap` (line 1147)",
                "Method `fit` (line 1196)",
                "Method `detect_indentation` (line 1212)",
                "Method `with_indent_guides` (line 1233)"
            ],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "split",
            "args": [
                "self",
                "offset"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "move",
            "args": [
                "self",
                "offset"
            ],
            "lineno": 74
        },
        {
            "type": "function",
            "name": "right_crop",
            "args": [
                "self",
                "offset"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "text",
                "style"
            ],
            "lineno": 127
        },
        {
            "type": "function",
            "name": "__len__",
            "args": [
                "self"
            ],
            "lineno": 150
        },
        {
            "type": "function",
            "name": "__bool__",
            "args": [
                "self"
            ],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 159
        },
        {
            "type": "function",
            "name": "__add__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 162
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 169
        },
        {
            "type": "function",
            "name": "__contains__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 174
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "slice"
            ],
            "lineno": 181
        },
        {
            "type": "function",
            "name": "cell_len",
            "args": [
                "self"
            ],
            "lineno": 208
        },
        {
            "type": "function",
            "name": "markup",
            "args": [
                "self"
            ],
            "lineno": 213
        },
        {
            "type": "function",
            "name": "from_markup",
            "args": [
                "cls",
                "text"
            ],
            "lineno": 243
        },
        {
            "type": "function",
            "name": "from_ansi",
            "args": [
                "cls",
                "text"
            ],
            "lineno": 275
        },
        {
            "type": "function",
            "name": "styled",
            "args": [
                "cls",
                "text",
                "style"
            ],
            "lineno": 313
        },
        {
            "type": "function",
            "name": "assemble",
            "args": [
                "cls",
                "*parts"
            ],
            "lineno": 338
        },
        {
            "type": "function",
            "name": "plain",
            "args": [
                "self"
            ],
            "lineno": 383
        },
        {
            "type": "function",
            "name": "plain",
            "args": [
                "self",
                "new_text"
            ],
            "lineno": 390
        },
        {
            "type": "function",
            "name": "spans",
            "args": [
                "self"
            ],
            "lineno": 401
        },
        {
            "type": "function",
            "name": "spans",
            "args": [
                "self",
                "spans"
            ],
            "lineno": 406
        },
        {
            "type": "function",
            "name": "blank_copy",
            "args": [
                "self",
                "plain"
            ],
            "lineno": 410
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 423
        },
        {
            "type": "function",
            "name": "stylize",
            "args": [
                "self",
                "style",
                "start",
                "end"
            ],
            "lineno": 437
        },
        {
            "type": "function",
            "name": "stylize_before",
            "args": [
                "self",
                "style",
                "start",
                "end"
            ],
            "lineno": 463
        },
        {
            "type": "function",
            "name": "apply_meta",
            "args": [
                "self",
                "meta",
                "start",
                "end"
            ],
            "lineno": 489
        },
        {
            "type": "function",
            "name": "on",
            "args": [
                "self",
                "meta",
                "**handlers"
            ],
            "lineno": 503
        },
        {
            "type": "function",
            "name": "remove_suffix",
            "args": [
                "self",
                "suffix"
            ],
            "lineno": 523
        },
        {
            "type": "function",
            "name": "get_style_at_offset",
            "args": [
                "self",
                "console",
                "offset"
            ],
            "lineno": 532
        },
        {
            "type": "function",
            "name": "highlight_regex",
            "args": [
                "self",
                "re_highlight",
                "style"
            ],
            "lineno": 552
        },
        {
            "type": "function",
            "name": "highlight_words",
            "args": [
                "self",
                "words",
                "style"
            ],
            "lineno": 590
        },
        {
            "type": "function",
            "name": "rstrip",
            "args": [
                "self"
            ],
            "lineno": 619
        },
        {
            "type": "function",
            "name": "rstrip_end",
            "args": [
                "self",
                "size"
            ],
            "lineno": 623
        },
        {
            "type": "function",
            "name": "set_length",
            "args": [
                "self",
                "new_length"
            ],
            "lineno": 637
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 646
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 665
        },
        {
            "type": "function",
            "name": "render",
            "args": [
                "self",
                "console",
                "end"
            ],
            "lineno": 677
        },
        {
            "type": "function",
            "name": "join",
            "args": [
                "self",
                "lines"
            ],
            "lineno": 736
        },
        {
            "type": "function",
            "name": "expand_tabs",
            "args": [
                "self",
                "tab_size"
            ],
            "lineno": 775
        },
        {
            "type": "function",
            "name": "truncate",
            "args": [
                "self",
                "max_width"
            ],
            "lineno": 809
        },
        {
            "type": "function",
            "name": "_trim_spans",
            "args": [
                "self"
            ],
            "lineno": 836
        },
        {
            "type": "function",
            "name": "pad",
            "args": [
                "self",
                "count",
                "character"
            ],
            "lineno": 850
        },
        {
            "type": "function",
            "name": "pad_left",
            "args": [
                "self",
                "count",
                "character"
            ],
            "lineno": 866
        },
        {
            "type": "function",
            "name": "pad_right",
            "args": [
                "self",
                "count",
                "character"
            ],
            "lineno": 882
        },
        {
            "type": "function",
            "name": "align",
            "args": [
                "self",
                "align",
                "width",
                "character"
            ],
            "lineno": 893
        },
        {
            "type": "function",
            "name": "append",
            "args": [
                "self",
                "text",
                "style"
            ],
            "lineno": 913
        },
        {
            "type": "function",
            "name": "append_text",
            "args": [
                "self",
                "text"
            ],
            "lineno": 957
        },
        {
            "type": "function",
            "name": "append_tokens",
            "args": [
                "self",
                "tokens"
            ],
            "lineno": 976
        },
        {
            "type": "function",
            "name": "copy_styles",
            "args": [
                "self",
                "text"
            ],
            "lineno": 999
        },
        {
            "type": "function",
            "name": "split",
            "args": [
                "self",
                "separator"
            ],
            "lineno": 1007
        },
        {
            "type": "function",
            "name": "divide",
            "args": [
                "self",
                "offsets"
            ],
            "lineno": 1051
        },
        {
            "type": "function",
            "name": "right_crop",
            "args": [
                "self",
                "amount"
            ],
            "lineno": 1131
        },
        {
            "type": "function",
            "name": "wrap",
            "args": [
                "self",
                "console",
                "width"
            ],
            "lineno": 1147
        },
        {
            "type": "function",
            "name": "fit",
            "args": [
                "self",
                "width"
            ],
            "lineno": 1196
        },
        {
            "type": "function",
            "name": "detect_indentation",
            "args": [
                "self"
            ],
            "lineno": 1212
        },
        {
            "type": "function",
            "name": "with_indent_guides",
            "args": [
                "self",
                "indent_size"
            ],
            "lineno": 1233
        },
        {
            "type": "function",
            "name": "get_text_at",
            "args": [
                "offset"
            ],
            "lineno": 182
        },
        {
            "type": "function",
            "name": "get_current_style",
            "args": [],
            "lineno": 716
        },
        {
            "type": "function",
            "name": "iter_text",
            "args": [],
            "lineno": 748
        },
        {
            "type": "function",
            "name": "flatten_spans",
            "args": [],
            "lineno": 1036
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/theme.py": [
        {
            "type": "class",
            "name": "Theme",
            "methods": [
                "Method `__init__` (line 18)",
                "Method `config` (line 31)",
                "Method `from_file` (line 39)",
                "Method `read` (line 59)"
            ],
            "lineno": 8
        },
        {
            "type": "class",
            "name": "ThemeStackError",
            "methods": null,
            "lineno": 76
        },
        {
            "type": "class",
            "name": "ThemeStack",
            "methods": [
                "Method `__init__` (line 87)",
                "Method `push_theme` (line 91)",
                "Method `pop_theme` (line 105)"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "styles",
                "inherit"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "config",
            "args": [
                "self"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "from_file",
            "args": [
                "cls",
                "config_file",
                "source",
                "inherit"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "read",
            "args": [
                "cls",
                "path",
                "inherit",
                "encoding"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "theme"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "push_theme",
            "args": [
                "self",
                "theme",
                "inherit"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "pop_theme",
            "args": [
                "self"
            ],
            "lineno": 105
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/themes.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/traceback.py": [
        {
            "type": "function",
            "name": "install",
            "args": [],
            "lineno": 48
        },
        {
            "type": "class",
            "name": "Frame",
            "methods": null,
            "lineno": 176
        },
        {
            "type": "class",
            "name": "_SyntaxError",
            "methods": null,
            "lineno": 185
        },
        {
            "type": "class",
            "name": "Stack",
            "methods": null,
            "lineno": 194
        },
        {
            "type": "class",
            "name": "Trace",
            "methods": null,
            "lineno": 203
        },
        {
            "type": "class",
            "name": "PathHighlighter",
            "methods": null,
            "lineno": 207
        },
        {
            "type": "class",
            "name": "Traceback",
            "methods": [
                "Method `__init__` (line 241)",
                "Method `from_exception` (line 293)",
                "Method `extract` (line 363)",
                "Method `__rich_console__` (line 487)",
                "Method `_render_syntax_error` (line 566)",
                "Method `_guess_lexer` (line 589)",
                "Method `_render_stack` (line 605)"
            ],
            "lineno": 211
        },
        {
            "type": "function",
            "name": "excepthook",
            "args": [
                "type_",
                "value",
                "traceback"
            ],
            "lineno": 97
        },
        {
            "type": "function",
            "name": "ipy_excepthook_closure",
            "args": [
                "ip"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "trace"
            ],
            "lineno": 241
        },
        {
            "type": "function",
            "name": "from_exception",
            "args": [
                "cls",
                "exc_type",
                "exc_value",
                "traceback"
            ],
            "lineno": 293
        },
        {
            "type": "function",
            "name": "extract",
            "args": [
                "cls",
                "exc_type",
                "exc_value",
                "traceback"
            ],
            "lineno": 363
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 487
        },
        {
            "type": "function",
            "name": "_render_syntax_error",
            "args": [
                "self",
                "syntax_error"
            ],
            "lineno": 566
        },
        {
            "type": "function",
            "name": "_guess_lexer",
            "args": [
                "cls",
                "filename",
                "code"
            ],
            "lineno": 589
        },
        {
            "type": "function",
            "name": "_render_stack",
            "args": [
                "self",
                "stack"
            ],
            "lineno": 605
        },
        {
            "type": "function",
            "name": "bar",
            "args": [
                "a"
            ],
            "lineno": 729
        },
        {
            "type": "function",
            "name": "foo",
            "args": [
                "a"
            ],
            "lineno": 733
        },
        {
            "type": "function",
            "name": "error",
            "args": [],
            "lineno": 746
        },
        {
            "type": "function",
            "name": "ipy_show_traceback",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 126
        },
        {
            "type": "function",
            "name": "ipy_display_traceback",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "safe_str",
            "args": [
                "_object"
            ],
            "lineno": 397
        },
        {
            "type": "function",
            "name": "read_code",
            "args": [
                "filename"
            ],
            "lineno": 609
        },
        {
            "type": "function",
            "name": "render_locals",
            "args": [
                "frame"
            ],
            "lineno": 620
        },
        {
            "type": "function",
            "name": "get_locals",
            "args": [
                "iter_locals"
            ],
            "lineno": 423
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/tree.py": [
        {
            "type": "class",
            "name": "Tree",
            "methods": [
                "Method `__init__` (line 23)",
                "Method `add` (line 41)",
                "Method `__rich_console__` (line 72)",
                "Method `__rich_measure__` (line 169)"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "label"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "add",
            "args": [
                "self",
                "label"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 169
        },
        {
            "type": "function",
            "name": "make_guide",
            "args": [
                "index",
                "style"
            ],
            "lineno": 94
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_cell_widths.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_emoji_codes.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_emoji_replace.py": [
        {
            "type": "function",
            "name": "_emoji_replace",
            "args": [
                "text",
                "default_variant",
                "_emoji_sub"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "do_replace",
            "args": [
                "match"
            ],
            "lineno": 23
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_export_format.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_extension.py": [
        {
            "type": "function",
            "name": "load_ipython_extension",
            "args": [
                "ip"
            ],
            "lineno": 4
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_fileno.py": [
        {
            "type": "function",
            "name": "get_fileno",
            "args": [
                "file_like"
            ],
            "lineno": 6
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_inspect.py": [
        {
            "type": "function",
            "name": "_first_paragraph",
            "args": [
                "doc"
            ],
            "lineno": 17
        },
        {
            "type": "class",
            "name": "Inspect",
            "methods": [
                "Method `__init__` (line 39)",
                "Method `_make_title` (line 66)",
                "Method `__rich__` (line 76)",
                "Method `_get_signature` (line 84)",
                "Method `_render` (line 123)",
                "Method `_get_formatted_doc` (line 216)"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "get_object_types_mro",
            "args": [
                "obj"
            ],
            "lineno": 238
        },
        {
            "type": "function",
            "name": "get_object_types_mro_as_strings",
            "args": [
                "obj"
            ],
            "lineno": 247
        },
        {
            "type": "function",
            "name": "is_object_one_of_types",
            "args": [
                "obj",
                "fully_qualified_types_names"
            ],
            "lineno": 260
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "obj"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "_make_title",
            "args": [
                "self",
                "obj"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "__rich__",
            "args": [
                "self"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "_get_signature",
            "args": [
                "self",
                "name",
                "obj"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "_render",
            "args": [
                "self"
            ],
            "lineno": 123
        },
        {
            "type": "function",
            "name": "_get_formatted_doc",
            "args": [
                "self",
                "object_"
            ],
            "lineno": 216
        },
        {
            "type": "function",
            "name": "sort_items",
            "args": [
                "item"
            ],
            "lineno": 126
        },
        {
            "type": "function",
            "name": "safe_getattr",
            "args": [
                "attr_name"
            ],
            "lineno": 130
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_log_render.py": [
        {
            "type": "class",
            "name": "LogRender",
            "methods": [
                "Method `__init__` (line 15)",
                "Method `__call__` (line 32)"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "show_time",
                "show_level",
                "show_path",
                "time_format",
                "omit_repeated_times",
                "level_width"
            ],
            "lineno": 15
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "console",
                "renderables",
                "log_time",
                "time_format",
                "level",
                "path",
                "line_no",
                "link_path"
            ],
            "lineno": 32
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_loop.py": [
        {
            "type": "function",
            "name": "loop_first",
            "args": [
                "values"
            ],
            "lineno": 6
        },
        {
            "type": "function",
            "name": "loop_last",
            "args": [
                "values"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "loop_first_last",
            "args": [
                "values"
            ],
            "lineno": 31
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_null_file.py": [
        {
            "type": "class",
            "name": "NullFile",
            "methods": [
                "Method `close` (line 6)",
                "Method `isatty` (line 9)",
                "Method `read` (line 12)",
                "Method `readable` (line 15)",
                "Method `readline` (line 18)",
                "Method `readlines` (line 21)",
                "Method `seek` (line 24)",
                "Method `seekable` (line 27)",
                "Method `tell` (line 30)",
                "Method `truncate` (line 33)",
                "Method `writable` (line 36)",
                "Method `writelines` (line 39)",
                "Method `__next__` (line 42)",
                "Method `__iter__` (line 45)",
                "Method `__enter__` (line 48)",
                "Method `__exit__` (line 51)",
                "Method `write` (line 59)",
                "Method `flush` (line 62)",
                "Method `fileno` (line 65)"
            ],
            "lineno": 5
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 6
        },
        {
            "type": "function",
            "name": "isatty",
            "args": [
                "self"
            ],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "read",
            "args": [
                "self",
                "__n"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "readable",
            "args": [
                "self"
            ],
            "lineno": 15
        },
        {
            "type": "function",
            "name": "readline",
            "args": [
                "self",
                "__limit"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "readlines",
            "args": [
                "self",
                "__hint"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "seek",
            "args": [
                "self",
                "__offset",
                "__whence"
            ],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "seekable",
            "args": [
                "self"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "tell",
            "args": [
                "self"
            ],
            "lineno": 30
        },
        {
            "type": "function",
            "name": "truncate",
            "args": [
                "self",
                "__size"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "writable",
            "args": [
                "self"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "writelines",
            "args": [
                "self",
                "__lines"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "__next__",
            "args": [
                "self"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "__t",
                "__value",
                "__traceback"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "write",
            "args": [
                "self",
                "text"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "flush",
            "args": [
                "self"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "fileno",
            "args": [
                "self"
            ],
            "lineno": 65
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_palettes.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_pick.py": [
        {
            "type": "function",
            "name": "pick_bool",
            "args": [
                "*values"
            ],
            "lineno": 4
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_ratio.py": [
        {
            "type": "class",
            "name": "Edge",
            "methods": null,
            "lineno": 12
        },
        {
            "type": "function",
            "name": "ratio_resolve",
            "args": [
                "total",
                "edges"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "ratio_reduce",
            "args": [
                "total",
                "ratios",
                "maximums",
                "values"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "ratio_distribute",
            "args": [
                "total",
                "ratios",
                "minimums"
            ],
            "lineno": 113
        },
        {
            "type": "class",
            "name": "E",
            "methods": null,
            "lineno": 153
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_spinners.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_stack.py": [
        {
            "type": "class",
            "name": "Stack",
            "methods": [
                "Method `top` (line 10)",
                "Method `push` (line 14)"
            ],
            "lineno": 6
        },
        {
            "type": "function",
            "name": "top",
            "args": [
                "self"
            ],
            "lineno": 10
        },
        {
            "type": "function",
            "name": "push",
            "args": [
                "self",
                "item"
            ],
            "lineno": 14
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_timer.py": [
        {
            "type": "function",
            "name": "timer",
            "args": [
                "subject"
            ],
            "lineno": 13
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_win32_console.py": [
        {
            "type": "class",
            "name": "LegacyWindowsError",
            "methods": null,
            "lineno": 28
        },
        {
            "type": "class",
            "name": "WindowsCoordinates",
            "methods": [
                "Method `from_param` (line 43)"
            ],
            "lineno": 32
        },
        {
            "type": "class",
            "name": "CONSOLE_SCREEN_BUFFER_INFO",
            "methods": null,
            "lineno": 56
        },
        {
            "type": "class",
            "name": "CONSOLE_CURSOR_INFO",
            "methods": null,
            "lineno": 66
        },
        {
            "type": "function",
            "name": "GetStdHandle",
            "args": [
                "handle"
            ],
            "lineno": 77
        },
        {
            "type": "function",
            "name": "GetConsoleMode",
            "args": [
                "std_handle"
            ],
            "lineno": 94
        },
        {
            "type": "function",
            "name": "FillConsoleOutputCharacter",
            "args": [
                "std_handle",
                "char",
                "length",
                "start"
            ],
            "lineno": 127
        },
        {
            "type": "function",
            "name": "FillConsoleOutputAttribute",
            "args": [
                "std_handle",
                "attributes",
                "length",
                "start"
            ],
            "lineno": 168
        },
        {
            "type": "function",
            "name": "SetConsoleTextAttribute",
            "args": [
                "std_handle",
                "attributes"
            ],
            "lineno": 203
        },
        {
            "type": "function",
            "name": "GetConsoleScreenBufferInfo",
            "args": [
                "std_handle"
            ],
            "lineno": 227
        },
        {
            "type": "function",
            "name": "SetConsoleCursorPosition",
            "args": [
                "std_handle",
                "coords"
            ],
            "lineno": 251
        },
        {
            "type": "function",
            "name": "GetConsoleCursorInfo",
            "args": [
                "std_handle",
                "cursor_info"
            ],
            "lineno": 274
        },
        {
            "type": "function",
            "name": "SetConsoleCursorInfo",
            "args": [
                "std_handle",
                "cursor_info"
            ],
            "lineno": 298
        },
        {
            "type": "function",
            "name": "SetConsoleTitle",
            "args": [
                "title"
            ],
            "lineno": 318
        },
        {
            "type": "class",
            "name": "LegacyWindowsTerm",
            "methods": [
                "Method `__init__` (line 361)",
                "Method `cursor_position` (line 376)",
                "Method `screen_size` (line 386)",
                "Method `write_text` (line 397)",
                "Method `write_styled` (line 406)",
                "Method `move_cursor_to` (line 445)",
                "Method `erase_line` (line 455)",
                "Method `erase_end_of_line` (line 471)",
                "Method `erase_start_of_line` (line 485)",
                "Method `move_cursor_up` (line 494)",
                "Method `move_cursor_down` (line 504)",
                "Method `move_cursor_forward` (line 515)",
                "Method `move_cursor_to_column` (line 527)",
                "Method `move_cursor_backward` (line 536)",
                "Method `hide_cursor` (line 548)",
                "Method `show_cursor` (line 554)",
                "Method `set_title` (line 560)",
                "Method `_get_cursor_size` (line 569)"
            ],
            "lineno": 330
        },
        {
            "type": "function",
            "name": "from_param",
            "args": [
                "cls",
                "value"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "file"
            ],
            "lineno": 361
        },
        {
            "type": "function",
            "name": "cursor_position",
            "args": [
                "self"
            ],
            "lineno": 376
        },
        {
            "type": "function",
            "name": "screen_size",
            "args": [
                "self"
            ],
            "lineno": 386
        },
        {
            "type": "function",
            "name": "write_text",
            "args": [
                "self",
                "text"
            ],
            "lineno": 397
        },
        {
            "type": "function",
            "name": "write_styled",
            "args": [
                "self",
                "text",
                "style"
            ],
            "lineno": 406
        },
        {
            "type": "function",
            "name": "move_cursor_to",
            "args": [
                "self",
                "new_position"
            ],
            "lineno": 445
        },
        {
            "type": "function",
            "name": "erase_line",
            "args": [
                "self"
            ],
            "lineno": 455
        },
        {
            "type": "function",
            "name": "erase_end_of_line",
            "args": [
                "self"
            ],
            "lineno": 471
        },
        {
            "type": "function",
            "name": "erase_start_of_line",
            "args": [
                "self"
            ],
            "lineno": 485
        },
        {
            "type": "function",
            "name": "move_cursor_up",
            "args": [
                "self"
            ],
            "lineno": 494
        },
        {
            "type": "function",
            "name": "move_cursor_down",
            "args": [
                "self"
            ],
            "lineno": 504
        },
        {
            "type": "function",
            "name": "move_cursor_forward",
            "args": [
                "self"
            ],
            "lineno": 515
        },
        {
            "type": "function",
            "name": "move_cursor_to_column",
            "args": [
                "self",
                "column"
            ],
            "lineno": 527
        },
        {
            "type": "function",
            "name": "move_cursor_backward",
            "args": [
                "self"
            ],
            "lineno": 536
        },
        {
            "type": "function",
            "name": "hide_cursor",
            "args": [
                "self"
            ],
            "lineno": 548
        },
        {
            "type": "function",
            "name": "show_cursor",
            "args": [
                "self"
            ],
            "lineno": 554
        },
        {
            "type": "function",
            "name": "set_title",
            "args": [
                "self",
                "title"
            ],
            "lineno": 560
        },
        {
            "type": "function",
            "name": "_get_cursor_size",
            "args": [
                "self"
            ],
            "lineno": 569
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_windows.py": [
        {
            "type": "class",
            "name": "WindowsConsoleFeatures",
            "methods": null,
            "lineno": 6
        },
        {
            "type": "function",
            "name": "get_windows_console_features",
            "args": [],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "get_windows_console_features",
            "args": [],
            "lineno": 35
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_windows_renderer.py": [
        {
            "type": "function",
            "name": "legacy_windows_render",
            "args": [
                "buffer",
                "term"
            ],
            "lineno": 7
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/_wrap.py": [
        {
            "type": "function",
            "name": "words",
            "args": [
                "text"
            ],
            "lineno": 10
        },
        {
            "type": "function",
            "name": "divide_line",
            "args": [
                "text",
                "width",
                "fold"
            ],
            "lineno": 20
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/__init__.py": [
        {
            "type": "function",
            "name": "get_console",
            "args": [],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "reconfigure",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "print",
            "args": [
                "*objects"
            ],
            "lineno": 53
        },
        {
            "type": "function",
            "name": "print_json",
            "args": [
                "json"
            ],
            "lineno": 77
        },
        {
            "type": "function",
            "name": "inspect",
            "args": [
                "obj"
            ],
            "lineno": 120
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/rich/__main__.py": [
        {
            "type": "class",
            "name": "ColorBox",
            "methods": [
                "Method `__rich_console__` (line 19)",
                "Method `__rich_measure__` (line 33)"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "make_test_card",
            "args": [],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "__rich_console__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "__rich_measure__",
            "args": [
                "self",
                "console",
                "options"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "comparison",
            "args": [
                "renderable1",
                "renderable2"
            ],
            "lineno": 90
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tenacity/after.py": [
        {
            "type": "function",
            "name": "after_nothing",
            "args": [
                "retry_state"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "after_log",
            "args": [
                "logger",
                "log_level",
                "sec_format"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "log_it",
            "args": [
                "retry_state"
            ],
            "lineno": 38
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tenacity/before.py": [
        {
            "type": "function",
            "name": "before_nothing",
            "args": [
                "retry_state"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "before_log",
            "args": [
                "logger",
                "log_level"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "log_it",
            "args": [
                "retry_state"
            ],
            "lineno": 34
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tenacity/before_sleep.py": [
        {
            "type": "function",
            "name": "before_sleep_nothing",
            "args": [
                "retry_state"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "before_sleep_log",
            "args": [
                "logger",
                "log_level",
                "exc_info"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "log_it",
            "args": [
                "retry_state"
            ],
            "lineno": 38
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tenacity/nap.py": [
        {
            "type": "function",
            "name": "sleep",
            "args": [
                "seconds"
            ],
            "lineno": 25
        },
        {
            "type": "class",
            "name": "sleep_using_event",
            "methods": [
                "Method `__init__` (line 37)",
                "Method `__call__` (line 40)"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "event"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "timeout"
            ],
            "lineno": 40
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tenacity/retry.py": [
        {
            "type": "class",
            "name": "retry_base",
            "methods": [
                "Method `__call__` (line 29)",
                "Method `__and__` (line 32)",
                "Method `__or__` (line 35)"
            ],
            "lineno": 25
        },
        {
            "type": "class",
            "name": "_retry_never",
            "methods": [
                "Method `__call__` (line 45)"
            ],
            "lineno": 42
        },
        {
            "type": "class",
            "name": "_retry_always",
            "methods": [
                "Method `__call__` (line 55)"
            ],
            "lineno": 52
        },
        {
            "type": "class",
            "name": "retry_if_exception",
            "methods": [
                "Method `__init__` (line 65)",
                "Method `__call__` (line 68)"
            ],
            "lineno": 62
        },
        {
            "type": "class",
            "name": "retry_if_exception_type",
            "methods": [
                "Method `__init__` (line 84)"
            ],
            "lineno": 81
        },
        {
            "type": "class",
            "name": "retry_if_not_exception_type",
            "methods": [
                "Method `__init__` (line 98)"
            ],
            "lineno": 95
        },
        {
            "type": "class",
            "name": "retry_unless_exception_type",
            "methods": [
                "Method `__init__` (line 112)",
                "Method `__call__` (line 122)"
            ],
            "lineno": 109
        },
        {
            "type": "class",
            "name": "retry_if_exception_cause_type",
            "methods": [
                "Method `__init__` (line 143)",
                "Method `__call__` (line 152)"
            ],
            "lineno": 136
        },
        {
            "type": "class",
            "name": "retry_if_result",
            "methods": [
                "Method `__init__` (line 169)",
                "Method `__call__` (line 172)"
            ],
            "lineno": 166
        },
        {
            "type": "class",
            "name": "retry_if_not_result",
            "methods": [
                "Method `__init__` (line 185)",
                "Method `__call__` (line 188)"
            ],
            "lineno": 182
        },
        {
            "type": "class",
            "name": "retry_if_exception_message",
            "methods": [
                "Method `__init__` (line 201)"
            ],
            "lineno": 198
        },
        {
            "type": "class",
            "name": "retry_if_not_exception_message",
            "methods": [
                "Method `__init__` (line 232)",
                "Method `__call__` (line 242)"
            ],
            "lineno": 229
        },
        {
            "type": "class",
            "name": "retry_any",
            "methods": [
                "Method `__init__` (line 258)",
                "Method `__call__` (line 261)"
            ],
            "lineno": 255
        },
        {
            "type": "class",
            "name": "retry_all",
            "methods": [
                "Method `__init__` (line 268)",
                "Method `__call__` (line 271)"
            ],
            "lineno": 265
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "__and__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "__or__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "predicate"
            ],
            "lineno": 65
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 68
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "exception_types"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "exception_types"
            ],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "exception_types"
            ],
            "lineno": 112
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "exception_types"
            ],
            "lineno": 143
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 152
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "predicate"
            ],
            "lineno": 169
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 172
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "predicate"
            ],
            "lineno": 185
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 188
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "message",
                "match"
            ],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "message",
                "match"
            ],
            "lineno": 232
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 242
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*retries"
            ],
            "lineno": 258
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 261
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*retries"
            ],
            "lineno": 268
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 271
        },
        {
            "type": "function",
            "name": "message_fnc",
            "args": [
                "exception"
            ],
            "lineno": 212
        },
        {
            "type": "function",
            "name": "match_fnc",
            "args": [
                "exception"
            ],
            "lineno": 219
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tenacity/stop.py": [
        {
            "type": "class",
            "name": "stop_base",
            "methods": [
                "Method `__call__` (line 31)",
                "Method `__and__` (line 34)",
                "Method `__or__` (line 37)"
            ],
            "lineno": 27
        },
        {
            "type": "class",
            "name": "stop_any",
            "methods": [
                "Method `__init__` (line 47)",
                "Method `__call__` (line 50)"
            ],
            "lineno": 44
        },
        {
            "type": "class",
            "name": "stop_all",
            "methods": [
                "Method `__init__` (line 57)",
                "Method `__call__` (line 60)"
            ],
            "lineno": 54
        },
        {
            "type": "class",
            "name": "_stop_never",
            "methods": [
                "Method `__call__` (line 67)"
            ],
            "lineno": 64
        },
        {
            "type": "class",
            "name": "stop_when_event_set",
            "methods": [
                "Method `__init__` (line 77)",
                "Method `__call__` (line 80)"
            ],
            "lineno": 74
        },
        {
            "type": "class",
            "name": "stop_after_attempt",
            "methods": [
                "Method `__init__` (line 87)",
                "Method `__call__` (line 90)"
            ],
            "lineno": 84
        },
        {
            "type": "class",
            "name": "stop_after_delay",
            "methods": [
                "Method `__init__` (line 97)",
                "Method `__call__` (line 100)"
            ],
            "lineno": 94
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "__and__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "__or__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*stops"
            ],
            "lineno": 47
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*stops"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 60
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "event"
            ],
            "lineno": 77
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "max_attempt_number"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 90
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "max_delay"
            ],
            "lineno": 97
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 100
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tenacity/tornadoweb.py": [
        {
            "type": "class",
            "name": "TornadoRetrying",
            "methods": [
                "Method `__init__` (line 32)",
                "Method `__call__` (line 37)"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "sleep",
                "**kwargs"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "fn",
                "*args",
                "**kwargs"
            ],
            "lineno": 37
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tenacity/wait.py": [
        {
            "type": "class",
            "name": "wait_base",
            "methods": [
                "Method `__call__` (line 31)",
                "Method `__add__` (line 34)",
                "Method `__radd__` (line 37)"
            ],
            "lineno": 27
        },
        {
            "type": "class",
            "name": "wait_fixed",
            "methods": [
                "Method `__init__` (line 50)",
                "Method `__call__` (line 53)"
            ],
            "lineno": 47
        },
        {
            "type": "class",
            "name": "wait_none",
            "methods": [
                "Method `__init__` (line 60)"
            ],
            "lineno": 57
        },
        {
            "type": "class",
            "name": "wait_random",
            "methods": [
                "Method `__init__` (line 67)",
                "Method `__call__` (line 71)"
            ],
            "lineno": 64
        },
        {
            "type": "class",
            "name": "wait_combine",
            "methods": [
                "Method `__init__` (line 78)",
                "Method `__call__` (line 81)"
            ],
            "lineno": 75
        },
        {
            "type": "class",
            "name": "wait_chain",
            "methods": [
                "Method `__init__` (line 101)",
                "Method `__call__` (line 104)"
            ],
            "lineno": 85
        },
        {
            "type": "class",
            "name": "wait_incrementing",
            "methods": [
                "Method `__init__` (line 117)",
                "Method `__call__` (line 127)"
            ],
            "lineno": 110
        },
        {
            "type": "class",
            "name": "wait_exponential",
            "methods": [
                "Method `__init__` (line 145)",
                "Method `__call__` (line 157)"
            ],
            "lineno": 132
        },
        {
            "type": "class",
            "name": "wait_random_exponential",
            "methods": [
                "Method `__call__` (line 192)"
            ],
            "lineno": 166
        },
        {
            "type": "class",
            "name": "wait_exponential_jitter",
            "methods": [
                "Method `__init__` (line 209)",
                "Method `__call__` (line 221)"
            ],
            "lineno": 197
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "__add__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "__radd__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "wait"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 53
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 60
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "min",
                "max"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 71
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*strategies"
            ],
            "lineno": 78
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*strategies"
            ],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "start",
                "increment",
                "max"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 127
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "multiplier",
                "max",
                "exp_base",
                "min"
            ],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 192
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "initial",
                "max",
                "exp_base",
                "jitter"
            ],
            "lineno": 209
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 221
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tenacity/_asyncio.py": [
        {
            "type": "class",
            "name": "AsyncRetrying",
            "methods": [
                "Method `__init__` (line 36)",
                "Method `__iter__` (line 61)",
                "Method `__aiter__` (line 64)",
                "Method `wraps` (line 82)"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "sleep",
                "**kwargs"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "__aiter__",
            "args": [
                "self"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "wraps",
            "args": [
                "self",
                "fn"
            ],
            "lineno": 82
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tenacity/_utils.py": [
        {
            "type": "function",
            "name": "find_ordinal",
            "args": [
                "pos_num"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "to_ordinal",
            "args": [
                "pos_num"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "get_callback_name",
            "args": [
                "cb"
            ],
            "lineno": 47
        },
        {
            "type": "function",
            "name": "to_seconds",
            "args": [
                "time_unit"
            ],
            "lineno": 75
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tenacity/__init__.py": [
        {
            "type": "class",
            "name": "TryAgain",
            "methods": null,
            "lineno": 101
        },
        {
            "type": "class",
            "name": "DoAttempt",
            "methods": null,
            "lineno": 108
        },
        {
            "type": "class",
            "name": "DoSleep",
            "methods": null,
            "lineno": 112
        },
        {
            "type": "class",
            "name": "BaseAction",
            "methods": [
                "Method `__repr__` (line 128)",
                "Method `__str__` (line 132)"
            ],
            "lineno": 116
        },
        {
            "type": "class",
            "name": "RetryAction",
            "methods": [
                "Method `__init__` (line 140)"
            ],
            "lineno": 136
        },
        {
            "type": "function",
            "name": "_first_set",
            "args": [
                "first",
                "second"
            ],
            "lineno": 147
        },
        {
            "type": "class",
            "name": "RetryError",
            "methods": [
                "Method `__init__` (line 154)",
                "Method `reraise` (line 158)",
                "Method `__str__` (line 163)"
            ],
            "lineno": 151
        },
        {
            "type": "class",
            "name": "AttemptManager",
            "methods": [
                "Method `__init__` (line 170)",
                "Method `__enter__` (line 173)",
                "Method `__exit__` (line 176)"
            ],
            "lineno": 167
        },
        {
            "type": "class",
            "name": "BaseRetrying",
            "methods": [
                "Method `__init__` (line 192)",
                "Method `copy` (line 217)",
                "Method `__repr__` (line 244)",
                "Method `statistics` (line 256)",
                "Method `wraps` (line 283)",
                "Method `begin` (line 301)",
                "Method `iter` (line 307)",
                "Method `__iter__` (line 344)",
                "Method `__call__` (line 359)"
            ],
            "lineno": 191
        },
        {
            "type": "class",
            "name": "Retrying",
            "methods": [
                "Method `__call__` (line 371)"
            ],
            "lineno": 368
        },
        {
            "type": "class",
            "name": "Future",
            "methods": [
                "Method `__init__` (line 405)",
                "Method `failed` (line 410)",
                "Method `construct` (line 415)"
            ],
            "lineno": 402
        },
        {
            "type": "class",
            "name": "RetryCallState",
            "methods": [
                "Method `__init__` (line 428)",
                "Method `seconds_since_start` (line 458)",
                "Method `prepare_for_next_attempt` (line 463)",
                "Method `set_result` (line 469)",
                "Method `set_exception` (line 475)",
                "Method `__repr__` (line 483)"
            ],
            "lineno": 425
        },
        {
            "type": "function",
            "name": "retry",
            "args": [
                "func"
            ],
            "lineno": 498
        },
        {
            "type": "function",
            "name": "retry",
            "args": [
                "sleep",
                "stop",
                "wait",
                "retry",
                "before",
                "after",
                "before_sleep",
                "reraise",
                "retry_error_cls",
                "retry_error_callback"
            ],
            "lineno": 503
        },
        {
            "type": "function",
            "name": "retry",
            "args": [
                "*dargs",
                "**dkw"
            ],
            "lineno": 518
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "sleep"
            ],
            "lineno": 140
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "last_attempt"
            ],
            "lineno": 154
        },
        {
            "type": "function",
            "name": "reraise",
            "args": [
                "self"
            ],
            "lineno": 158
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 163
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 170
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 173
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_value",
                "traceback"
            ],
            "lineno": 176
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "sleep",
                "stop",
                "wait",
                "retry",
                "before",
                "after",
                "before_sleep",
                "reraise",
                "retry_error_cls",
                "retry_error_callback"
            ],
            "lineno": 192
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self",
                "sleep",
                "stop",
                "wait",
                "retry",
                "before",
                "after",
                "before_sleep",
                "reraise",
                "retry_error_cls",
                "retry_error_callback"
            ],
            "lineno": 217
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 244
        },
        {
            "type": "function",
            "name": "statistics",
            "args": [
                "self"
            ],
            "lineno": 256
        },
        {
            "type": "function",
            "name": "wraps",
            "args": [
                "self",
                "f"
            ],
            "lineno": 283
        },
        {
            "type": "function",
            "name": "begin",
            "args": [
                "self"
            ],
            "lineno": 301
        },
        {
            "type": "function",
            "name": "iter",
            "args": [
                "self",
                "retry_state"
            ],
            "lineno": 307
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 344
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "fn",
                "*args",
                "**kwargs"
            ],
            "lineno": 359
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "fn",
                "*args",
                "**kwargs"
            ],
            "lineno": 371
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "attempt_number"
            ],
            "lineno": 405
        },
        {
            "type": "function",
            "name": "failed",
            "args": [
                "self"
            ],
            "lineno": 410
        },
        {
            "type": "function",
            "name": "construct",
            "args": [
                "cls",
                "attempt_number",
                "value",
                "has_exception"
            ],
            "lineno": 415
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "retry_object",
                "fn",
                "args",
                "kwargs"
            ],
            "lineno": 428
        },
        {
            "type": "function",
            "name": "seconds_since_start",
            "args": [
                "self"
            ],
            "lineno": 458
        },
        {
            "type": "function",
            "name": "prepare_for_next_attempt",
            "args": [
                "self"
            ],
            "lineno": 463
        },
        {
            "type": "function",
            "name": "set_result",
            "args": [
                "self",
                "val"
            ],
            "lineno": 469
        },
        {
            "type": "function",
            "name": "set_exception",
            "args": [
                "self",
                "exc_info"
            ],
            "lineno": 475
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 483
        },
        {
            "type": "function",
            "name": "wrapped_f",
            "args": [
                "*args",
                "**kw"
            ],
            "lineno": 290
        },
        {
            "type": "function",
            "name": "retry_with",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 293
        },
        {
            "type": "function",
            "name": "wrap",
            "args": [
                "f"
            ],
            "lineno": 529
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tomli/_parser.py": [
        {
            "type": "class",
            "name": "TOMLDecodeError",
            "methods": null,
            "lineno": 53
        },
        {
            "type": "function",
            "name": "load",
            "args": [
                "__fp"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "loads",
            "args": [
                "__s"
            ],
            "lineno": 69
        },
        {
            "type": "class",
            "name": "Flags",
            "methods": [
                "Method `__init__` (line 144)",
                "Method `add_pending` (line 148)",
                "Method `finalize_pending` (line 151)",
                "Method `unset_all` (line 156)",
                "Method `set` (line 164)",
                "Method `is_` (line 175)"
            ],
            "lineno": 135
        },
        {
            "type": "class",
            "name": "NestedDict",
            "methods": [
                "Method `__init__` (line 194)",
                "Method `get_or_create_nest` (line 198)",
                "Method `append_nest_to_list` (line 215)"
            ],
            "lineno": 193
        },
        {
            "type": "class",
            "name": "Output",
            "methods": null,
            "lineno": 227
        },
        {
            "type": "function",
            "name": "skip_chars",
            "args": [
                "src",
                "pos",
                "chars"
            ],
            "lineno": 232
        },
        {
            "type": "function",
            "name": "skip_until",
            "args": [
                "src",
                "pos",
                "expect"
            ],
            "lineno": 241
        },
        {
            "type": "function",
            "name": "skip_comment",
            "args": [
                "src",
                "pos"
            ],
            "lineno": 263
        },
        {
            "type": "function",
            "name": "skip_comments_and_array_ws",
            "args": [
                "src",
                "pos"
            ],
            "lineno": 275
        },
        {
            "type": "function",
            "name": "create_dict_rule",
            "args": [
                "src",
                "pos",
                "out"
            ],
            "lineno": 284
        },
        {
            "type": "function",
            "name": "create_list_rule",
            "args": [
                "src",
                "pos",
                "out"
            ],
            "lineno": 302
        },
        {
            "type": "function",
            "name": "key_value_rule",
            "args": [
                "src",
                "pos",
                "out",
                "header",
                "parse_float"
            ],
            "lineno": 323
        },
        {
            "type": "function",
            "name": "parse_key_value_pair",
            "args": [
                "src",
                "pos",
                "parse_float"
            ],
            "lineno": 357
        },
        {
            "type": "function",
            "name": "parse_key",
            "args": [
                "src",
                "pos"
            ],
            "lineno": 373
        },
        {
            "type": "function",
            "name": "parse_key_part",
            "args": [
                "src",
                "pos"
            ],
            "lineno": 391
        },
        {
            "type": "function",
            "name": "parse_one_line_basic_str",
            "args": [
                "src",
                "pos"
            ],
            "lineno": 407
        },
        {
            "type": "function",
            "name": "parse_array",
            "args": [
                "src",
                "pos",
                "parse_float"
            ],
            "lineno": 412
        },
        {
            "type": "function",
            "name": "parse_inline_table",
            "args": [
                "src",
                "pos",
                "parse_float"
            ],
            "lineno": 436
        },
        {
            "type": "function",
            "name": "parse_basic_str_escape",
            "args": [
                "src",
                "pos"
            ],
            "lineno": 468
        },
        {
            "type": "function",
            "name": "parse_basic_str_escape_multiline",
            "args": [
                "src",
                "pos"
            ],
            "lineno": 497
        },
        {
            "type": "function",
            "name": "parse_hex_char",
            "args": [
                "src",
                "pos",
                "hex_len"
            ],
            "lineno": 501
        },
        {
            "type": "function",
            "name": "parse_literal_str",
            "args": [
                "src",
                "pos"
            ],
            "lineno": 512
        },
        {
            "type": "function",
            "name": "parse_multiline_str",
            "args": [
                "src",
                "pos"
            ],
            "lineno": 521
        },
        {
            "type": "function",
            "name": "parse_basic_str",
            "args": [
                "src",
                "pos"
            ],
            "lineno": 552
        },
        {
            "type": "function",
            "name": "parse_value",
            "args": [
                "src",
                "pos",
                "parse_float"
            ],
            "lineno": 584
        },
        {
            "type": "function",
            "name": "suffixed_err",
            "args": [
                "src",
                "pos",
                "msg"
            ],
            "lineno": 652
        },
        {
            "type": "function",
            "name": "is_unicode_scalar_value",
            "args": [
                "codepoint"
            ],
            "lineno": 669
        },
        {
            "type": "function",
            "name": "make_safe_parse_float",
            "args": [
                "parse_float"
            ],
            "lineno": 673
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 144
        },
        {
            "type": "function",
            "name": "add_pending",
            "args": [
                "self",
                "key",
                "flag"
            ],
            "lineno": 148
        },
        {
            "type": "function",
            "name": "finalize_pending",
            "args": [
                "self"
            ],
            "lineno": 151
        },
        {
            "type": "function",
            "name": "unset_all",
            "args": [
                "self",
                "key"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "set",
            "args": [
                "self",
                "key",
                "flag"
            ],
            "lineno": 164
        },
        {
            "type": "function",
            "name": "is_",
            "args": [
                "self",
                "key",
                "flag"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 194
        },
        {
            "type": "function",
            "name": "get_or_create_nest",
            "args": [
                "self",
                "key"
            ],
            "lineno": 198
        },
        {
            "type": "function",
            "name": "append_nest_to_list",
            "args": [
                "self",
                "key"
            ],
            "lineno": 215
        },
        {
            "type": "function",
            "name": "coord_repr",
            "args": [
                "src",
                "pos"
            ],
            "lineno": 656
        },
        {
            "type": "function",
            "name": "safe_parse_float",
            "args": [
                "float_str"
            ],
            "lineno": 685
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tomli/_re.py": [
        {
            "type": "function",
            "name": "match_to_datetime",
            "args": [
                "match"
            ],
            "lineno": 52
        },
        {
            "type": "function",
            "name": "cached_tz",
            "args": [
                "hour_str",
                "minute_str",
                "sign_str"
            ],
            "lineno": 88
        },
        {
            "type": "function",
            "name": "match_to_localtime",
            "args": [
                "match"
            ],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "match_to_number",
            "args": [
                "match",
                "parse_float"
            ],
            "lineno": 104
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tomli/_types.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/tomli/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/truststore/_api.py": [
        {
            "type": "function",
            "name": "inject_into_ssl",
            "args": [],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "extract_from_ssl",
            "args": [],
            "lineno": 46
        },
        {
            "type": "class",
            "name": "SSLContext",
            "methods": [
                "Method `__class__` (line 61)",
                "Method `__init__` (line 67)",
                "Method `wrap_socket` (line 82)",
                "Method `wrap_bio` (line 110)",
                "Method `load_verify_locations` (line 128)",
                "Method `load_cert_chain` (line 138)",
                "Method `load_default_certs` (line 148)",
                "Method `set_alpn_protocols` (line 153)",
                "Method `set_npn_protocols` (line 156)",
                "Method `set_ciphers` (line 159)",
                "Method `get_ciphers` (line 162)",
                "Method `session_stats` (line 165)",
                "Method `cert_store_stats` (line 168)",
                "Method `get_ca_certs` (line 172)",
                "Method `get_ca_certs` (line 178)",
                "Method `get_ca_certs` (line 182)",
                "Method `get_ca_certs` (line 185)",
                "Method `check_hostname` (line 189)",
                "Method `check_hostname` (line 193)",
                "Method `hostname_checks_common_name` (line 197)",
                "Method `hostname_checks_common_name` (line 201)",
                "Method `keylog_filename` (line 205)",
                "Method `keylog_filename` (line 209)",
                "Method `maximum_version` (line 213)",
                "Method `maximum_version` (line 217)",
                "Method `minimum_version` (line 223)",
                "Method `minimum_version` (line 227)",
                "Method `options` (line 233)",
                "Method `options` (line 237)",
                "Method `post_handshake_auth` (line 243)",
                "Method `post_handshake_auth` (line 247)",
                "Method `protocol` (line 251)",
                "Method `security_level` (line 255)",
                "Method `verify_flags` (line 259)",
                "Method `verify_flags` (line 263)",
                "Method `verify_mode` (line 269)",
                "Method `verify_mode` (line 273)"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "_verify_peercerts",
            "args": [
                "sock_or_sslobj",
                "server_hostname"
            ],
            "lineno": 279
        },
        {
            "type": "function",
            "name": "__class__",
            "args": [
                "self"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "protocol"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "wrap_socket",
            "args": [
                "self",
                "sock",
                "server_side",
                "do_handshake_on_connect",
                "suppress_ragged_eofs",
                "server_hostname",
                "session"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "wrap_bio",
            "args": [
                "self",
                "incoming",
                "outgoing",
                "server_side",
                "server_hostname",
                "session"
            ],
            "lineno": 110
        },
        {
            "type": "function",
            "name": "load_verify_locations",
            "args": [
                "self",
                "cafile",
                "capath",
                "cadata"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "load_cert_chain",
            "args": [
                "self",
                "certfile",
                "keyfile",
                "password"
            ],
            "lineno": 138
        },
        {
            "type": "function",
            "name": "load_default_certs",
            "args": [
                "self",
                "purpose"
            ],
            "lineno": 148
        },
        {
            "type": "function",
            "name": "set_alpn_protocols",
            "args": [
                "self",
                "alpn_protocols"
            ],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "set_npn_protocols",
            "args": [
                "self",
                "npn_protocols"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "set_ciphers",
            "args": [
                "self",
                "__cipherlist"
            ],
            "lineno": 159
        },
        {
            "type": "function",
            "name": "get_ciphers",
            "args": [
                "self"
            ],
            "lineno": 162
        },
        {
            "type": "function",
            "name": "session_stats",
            "args": [
                "self"
            ],
            "lineno": 165
        },
        {
            "type": "function",
            "name": "cert_store_stats",
            "args": [
                "self"
            ],
            "lineno": 168
        },
        {
            "type": "function",
            "name": "get_ca_certs",
            "args": [
                "self",
                "binary_form"
            ],
            "lineno": 172
        },
        {
            "type": "function",
            "name": "get_ca_certs",
            "args": [
                "self",
                "binary_form"
            ],
            "lineno": 178
        },
        {
            "type": "function",
            "name": "get_ca_certs",
            "args": [
                "self",
                "binary_form"
            ],
            "lineno": 182
        },
        {
            "type": "function",
            "name": "get_ca_certs",
            "args": [
                "self",
                "binary_form"
            ],
            "lineno": 185
        },
        {
            "type": "function",
            "name": "check_hostname",
            "args": [
                "self"
            ],
            "lineno": 189
        },
        {
            "type": "function",
            "name": "check_hostname",
            "args": [
                "self",
                "value"
            ],
            "lineno": 193
        },
        {
            "type": "function",
            "name": "hostname_checks_common_name",
            "args": [
                "self"
            ],
            "lineno": 197
        },
        {
            "type": "function",
            "name": "hostname_checks_common_name",
            "args": [
                "self",
                "value"
            ],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "keylog_filename",
            "args": [
                "self"
            ],
            "lineno": 205
        },
        {
            "type": "function",
            "name": "keylog_filename",
            "args": [
                "self",
                "value"
            ],
            "lineno": 209
        },
        {
            "type": "function",
            "name": "maximum_version",
            "args": [
                "self"
            ],
            "lineno": 213
        },
        {
            "type": "function",
            "name": "maximum_version",
            "args": [
                "self",
                "value"
            ],
            "lineno": 217
        },
        {
            "type": "function",
            "name": "minimum_version",
            "args": [
                "self"
            ],
            "lineno": 223
        },
        {
            "type": "function",
            "name": "minimum_version",
            "args": [
                "self",
                "value"
            ],
            "lineno": 227
        },
        {
            "type": "function",
            "name": "options",
            "args": [
                "self"
            ],
            "lineno": 233
        },
        {
            "type": "function",
            "name": "options",
            "args": [
                "self",
                "value"
            ],
            "lineno": 237
        },
        {
            "type": "function",
            "name": "post_handshake_auth",
            "args": [
                "self"
            ],
            "lineno": 243
        },
        {
            "type": "function",
            "name": "post_handshake_auth",
            "args": [
                "self",
                "value"
            ],
            "lineno": 247
        },
        {
            "type": "function",
            "name": "protocol",
            "args": [
                "self"
            ],
            "lineno": 251
        },
        {
            "type": "function",
            "name": "security_level",
            "args": [
                "self"
            ],
            "lineno": 255
        },
        {
            "type": "function",
            "name": "verify_flags",
            "args": [
                "self"
            ],
            "lineno": 259
        },
        {
            "type": "function",
            "name": "verify_flags",
            "args": [
                "self",
                "value"
            ],
            "lineno": 263
        },
        {
            "type": "function",
            "name": "verify_mode",
            "args": [
                "self"
            ],
            "lineno": 269
        },
        {
            "type": "function",
            "name": "verify_mode",
            "args": [
                "self",
                "value"
            ],
            "lineno": 273
        },
        {
            "type": "class",
            "name": "TruststoreSSLObject",
            "methods": [
                "Method `do_handshake` (line 75)"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "do_handshake",
            "args": [
                "self"
            ],
            "lineno": 75
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/truststore/_macos.py": [
        {
            "type": "function",
            "name": "_load_cdll",
            "args": [
                "name",
                "macos10_16_path"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "_handle_osstatus",
            "args": [
                "result",
                "_",
                "args"
            ],
            "lineno": 207
        },
        {
            "type": "class",
            "name": "CFConst",
            "methods": null,
            "lineno": 265
        },
        {
            "type": "function",
            "name": "_bytes_to_cf_data_ref",
            "args": [
                "value"
            ],
            "lineno": 276
        },
        {
            "type": "function",
            "name": "_bytes_to_cf_string",
            "args": [
                "value"
            ],
            "lineno": 282
        },
        {
            "type": "function",
            "name": "_cf_string_ref_to_str",
            "args": [
                "cf_string_ref"
            ],
            "lineno": 296
        },
        {
            "type": "function",
            "name": "_der_certs_to_cf_cert_array",
            "args": [
                "certs"
            ],
            "lineno": 319
        },
        {
            "type": "function",
            "name": "_configure_context",
            "args": [
                "ctx"
            ],
            "lineno": 350
        },
        {
            "type": "function",
            "name": "_verify_peercerts_impl",
            "args": [
                "ssl_context",
                "cert_chain",
                "server_hostname"
            ],
            "lineno": 362
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/truststore/_openssl.py": [
        {
            "type": "function",
            "name": "_configure_context",
            "args": [
                "ctx"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "_capath_contains_certs",
            "args": [
                "capath"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "_verify_peercerts_impl",
            "args": [
                "ssl_context",
                "cert_chain",
                "server_hostname"
            ],
            "lineno": 59
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/truststore/_ssl_constants.py": [
        {
            "type": "function",
            "name": "_set_ssl_context_verify_mode",
            "args": [
                "ssl_context",
                "verify_mode"
            ],
            "lineno": 28
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/truststore/_windows.py": [
        {
            "type": "class",
            "name": "CERT_CONTEXT",
            "methods": null,
            "lineno": 39
        },
        {
            "type": "class",
            "name": "CERT_ENHKEY_USAGE",
            "methods": null,
            "lineno": 53
        },
        {
            "type": "class",
            "name": "CERT_USAGE_MATCH",
            "methods": null,
            "lineno": 63
        },
        {
            "type": "class",
            "name": "CERT_CHAIN_PARA",
            "methods": null,
            "lineno": 70
        },
        {
            "type": "class",
            "name": "CERT_TRUST_STATUS",
            "methods": null,
            "lineno": 90
        },
        {
            "type": "class",
            "name": "CERT_CHAIN_ELEMENT",
            "methods": null,
            "lineno": 97
        },
        {
            "type": "class",
            "name": "CERT_SIMPLE_CHAIN",
            "methods": null,
            "lineno": 112
        },
        {
            "type": "class",
            "name": "CERT_CHAIN_CONTEXT",
            "methods": null,
            "lineno": 127
        },
        {
            "type": "class",
            "name": "SSL_EXTRA_CERT_CHAIN_POLICY_PARA",
            "methods": null,
            "lineno": 144
        },
        {
            "type": "class",
            "name": "CERT_CHAIN_POLICY_PARA",
            "methods": null,
            "lineno": 153
        },
        {
            "type": "class",
            "name": "CERT_CHAIN_POLICY_STATUS",
            "methods": null,
            "lineno": 164
        },
        {
            "type": "class",
            "name": "CERT_CHAIN_ENGINE_CONFIG",
            "methods": null,
            "lineno": 177
        },
        {
            "type": "function",
            "name": "_handle_win_error",
            "args": [
                "result",
                "_",
                "args"
            ],
            "lineno": 237
        },
        {
            "type": "function",
            "name": "_verify_peercerts_impl",
            "args": [
                "ssl_context",
                "cert_chain",
                "server_hostname"
            ],
            "lineno": 322
        },
        {
            "type": "function",
            "name": "_get_and_verify_cert_chain",
            "args": [
                "ssl_context",
                "hChainEngine",
                "hIntermediateCertStore",
                "pPeerCertContext",
                "pChainPara",
                "server_hostname",
                "chain_flags"
            ],
            "lineno": 404
        },
        {
            "type": "function",
            "name": "_verify_using_custom_ca_certs",
            "args": [
                "ssl_context",
                "custom_ca_certs",
                "hIntermediateCertStore",
                "pPeerCertContext",
                "pChainPara",
                "server_hostname",
                "chain_flags"
            ],
            "lineno": 492
        },
        {
            "type": "function",
            "name": "_configure_context",
            "args": [
                "ctx"
            ],
            "lineno": 545
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/truststore/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/connection.py": [
        {
            "type": "class",
            "name": "HTTPConnection",
            "methods": [
                "Method `__init__` (line 115)",
                "Method `host` (line 133)",
                "Method `host` (line 152)",
                "Method `_new_conn` (line 161)",
                "Method `_is_using_tunnel` (line 192)",
                "Method `_prepare_conn` (line 196)",
                "Method `connect` (line 204)",
                "Method `putrequest` (line 208)",
                "Method `putheader` (line 221)",
                "Method `request` (line 231)",
                "Method `request_chunked` (line 246)"
            ],
            "lineno": 76
        },
        {
            "type": "class",
            "name": "HTTPSConnection",
            "methods": [
                "Method `__init__` (line 302)",
                "Method `set_cert` (line 328)",
                "Method `connect` (line 361)",
                "Method `_connect_tls_proxy` (line 479)"
            ],
            "lineno": 286
        },
        {
            "type": "function",
            "name": "_match_hostname",
            "args": [
                "cert",
                "asserted_hostname"
            ],
            "lineno": 536
        },
        {
            "type": "function",
            "name": "_get_default_user_agent",
            "args": [],
            "lineno": 558
        },
        {
            "type": "class",
            "name": "DummyConnection",
            "methods": null,
            "lineno": 562
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*args",
                "**kw"
            ],
            "lineno": 115
        },
        {
            "type": "function",
            "name": "host",
            "args": [
                "self"
            ],
            "lineno": 133
        },
        {
            "type": "function",
            "name": "host",
            "args": [
                "self",
                "value"
            ],
            "lineno": 152
        },
        {
            "type": "function",
            "name": "_new_conn",
            "args": [
                "self"
            ],
            "lineno": 161
        },
        {
            "type": "function",
            "name": "_is_using_tunnel",
            "args": [
                "self"
            ],
            "lineno": 192
        },
        {
            "type": "function",
            "name": "_prepare_conn",
            "args": [
                "self",
                "conn"
            ],
            "lineno": 196
        },
        {
            "type": "function",
            "name": "connect",
            "args": [
                "self"
            ],
            "lineno": 204
        },
        {
            "type": "function",
            "name": "putrequest",
            "args": [
                "self",
                "method",
                "url",
                "*args",
                "**kwargs"
            ],
            "lineno": 208
        },
        {
            "type": "function",
            "name": "putheader",
            "args": [
                "self",
                "header",
                "*values"
            ],
            "lineno": 221
        },
        {
            "type": "function",
            "name": "request",
            "args": [
                "self",
                "method",
                "url",
                "body",
                "headers"
            ],
            "lineno": 231
        },
        {
            "type": "function",
            "name": "request_chunked",
            "args": [
                "self",
                "method",
                "url",
                "body",
                "headers"
            ],
            "lineno": 246
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "host",
                "port",
                "key_file",
                "cert_file",
                "key_password",
                "strict",
                "timeout",
                "ssl_context",
                "server_hostname",
                "**kw"
            ],
            "lineno": 302
        },
        {
            "type": "function",
            "name": "set_cert",
            "args": [
                "self",
                "key_file",
                "cert_file",
                "cert_reqs",
                "key_password",
                "ca_certs",
                "assert_hostname",
                "assert_fingerprint",
                "ca_cert_dir",
                "ca_cert_data"
            ],
            "lineno": 328
        },
        {
            "type": "function",
            "name": "connect",
            "args": [
                "self"
            ],
            "lineno": 361
        },
        {
            "type": "function",
            "name": "_connect_tls_proxy",
            "args": [
                "self",
                "hostname",
                "conn"
            ],
            "lineno": 479
        },
        {
            "type": "class",
            "name": "BaseSSLError",
            "methods": null,
            "lineno": 24
        },
        {
            "type": "class",
            "name": "ConnectionError",
            "methods": null,
            "lineno": 33
        },
        {
            "type": "class",
            "name": "BrokenPipeError",
            "methods": null,
            "lineno": 42
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/connectionpool.py": [
        {
            "type": "class",
            "name": "ConnectionPool",
            "methods": [
                "Method `__init__` (line 82)",
                "Method `__str__` (line 90)",
                "Method `__enter__` (line 93)",
                "Method `__exit__` (line 96)",
                "Method `close` (line 101)"
            ],
            "lineno": 68
        },
        {
            "type": "class",
            "name": "HTTPConnectionPool",
            "methods": [
                "Method `__init__` (line 176)",
                "Method `_new_conn` (line 240)",
                "Method `_get_conn` (line 261)",
                "Method `_put_conn` (line 300)",
                "Method `_validate_conn` (line 331)",
                "Method `_prepare_proxy` (line 337)",
                "Method `_get_timeout` (line 341)",
                "Method `_raise_timeout` (line 353)",
                "Method `_make_request` (line 378)",
                "Method `_absolute_url` (line 497)",
                "Method `close` (line 500)",
                "Method `is_same_host` (line 512)",
                "Method `urlopen` (line 533)"
            ],
            "lineno": 112
        },
        {
            "type": "class",
            "name": "HTTPSConnectionPool",
            "methods": [
                "Method `__init__` (line 925)",
                "Method `_prepare_conn` (line 974)",
                "Method `_prepare_proxy` (line 994)",
                "Method `_new_conn` (line 1009)",
                "Method `_validate_conn` (line 1045)"
            ],
            "lineno": 908
        },
        {
            "type": "function",
            "name": "connection_from_url",
            "args": [
                "url",
                "**kw"
            ],
            "lineno": 1078
        },
        {
            "type": "function",
            "name": "_normalize_host",
            "args": [
                "host",
                "scheme"
            ],
            "lineno": 1106
        },
        {
            "type": "function",
            "name": "_close_pool_connections",
            "args": [
                "pool"
            ],
            "lineno": 1124
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "host",
                "port"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 90
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "host",
                "port",
                "strict",
                "timeout",
                "maxsize",
                "block",
                "headers",
                "retries",
                "_proxy",
                "_proxy_headers",
                "_proxy_config",
                "**conn_kw"
            ],
            "lineno": 176
        },
        {
            "type": "function",
            "name": "_new_conn",
            "args": [
                "self"
            ],
            "lineno": 240
        },
        {
            "type": "function",
            "name": "_get_conn",
            "args": [
                "self",
                "timeout"
            ],
            "lineno": 261
        },
        {
            "type": "function",
            "name": "_put_conn",
            "args": [
                "self",
                "conn"
            ],
            "lineno": 300
        },
        {
            "type": "function",
            "name": "_validate_conn",
            "args": [
                "self",
                "conn"
            ],
            "lineno": 331
        },
        {
            "type": "function",
            "name": "_prepare_proxy",
            "args": [
                "self",
                "conn"
            ],
            "lineno": 337
        },
        {
            "type": "function",
            "name": "_get_timeout",
            "args": [
                "self",
                "timeout"
            ],
            "lineno": 341
        },
        {
            "type": "function",
            "name": "_raise_timeout",
            "args": [
                "self",
                "err",
                "url",
                "timeout_value"
            ],
            "lineno": 353
        },
        {
            "type": "function",
            "name": "_make_request",
            "args": [
                "self",
                "conn",
                "method",
                "url",
                "timeout",
                "chunked",
                "**httplib_request_kw"
            ],
            "lineno": 378
        },
        {
            "type": "function",
            "name": "_absolute_url",
            "args": [
                "self",
                "path"
            ],
            "lineno": 497
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 500
        },
        {
            "type": "function",
            "name": "is_same_host",
            "args": [
                "self",
                "url"
            ],
            "lineno": 512
        },
        {
            "type": "function",
            "name": "urlopen",
            "args": [
                "self",
                "method",
                "url",
                "body",
                "headers",
                "retries",
                "redirect",
                "assert_same_host",
                "timeout",
                "pool_timeout",
                "release_conn",
                "chunked",
                "body_pos",
                "**response_kw"
            ],
            "lineno": 533
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "host",
                "port",
                "strict",
                "timeout",
                "maxsize",
                "block",
                "headers",
                "retries",
                "_proxy",
                "_proxy_headers",
                "key_file",
                "cert_file",
                "cert_reqs",
                "key_password",
                "ca_certs",
                "ssl_version",
                "assert_hostname",
                "assert_fingerprint",
                "ca_cert_dir",
                "**conn_kw"
            ],
            "lineno": 925
        },
        {
            "type": "function",
            "name": "_prepare_conn",
            "args": [
                "self",
                "conn"
            ],
            "lineno": 974
        },
        {
            "type": "function",
            "name": "_prepare_proxy",
            "args": [
                "self",
                "conn"
            ],
            "lineno": 994
        },
        {
            "type": "function",
            "name": "_new_conn",
            "args": [
                "self"
            ],
            "lineno": 1009
        },
        {
            "type": "function",
            "name": "_validate_conn",
            "args": [
                "self",
                "conn"
            ],
            "lineno": 1045
        },
        {
            "type": "function",
            "name": "_is_ssl_error_message_from_http_proxy",
            "args": [
                "ssl_error"
            ],
            "lineno": 764
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/exceptions.py": [
        {
            "type": "class",
            "name": "HTTPError",
            "methods": null,
            "lineno": 8
        },
        {
            "type": "class",
            "name": "HTTPWarning",
            "methods": null,
            "lineno": 14
        },
        {
            "type": "class",
            "name": "PoolError",
            "methods": [
                "Method `__init__` (line 23)",
                "Method `__reduce__` (line 27)"
            ],
            "lineno": 20
        },
        {
            "type": "class",
            "name": "RequestError",
            "methods": [
                "Method `__init__` (line 35)",
                "Method `__reduce__` (line 39)"
            ],
            "lineno": 32
        },
        {
            "type": "class",
            "name": "SSLError",
            "methods": null,
            "lineno": 44
        },
        {
            "type": "class",
            "name": "ProxyError",
            "methods": [
                "Method `__init__` (line 53)"
            ],
            "lineno": 50
        },
        {
            "type": "class",
            "name": "DecodeError",
            "methods": null,
            "lineno": 58
        },
        {
            "type": "class",
            "name": "ProtocolError",
            "methods": null,
            "lineno": 64
        },
        {
            "type": "class",
            "name": "MaxRetryError",
            "methods": [
                "Method `__init__` (line 87)"
            ],
            "lineno": 77
        },
        {
            "type": "class",
            "name": "HostChangedError",
            "methods": [
                "Method `__init__` (line 98)"
            ],
            "lineno": 95
        },
        {
            "type": "class",
            "name": "TimeoutStateError",
            "methods": null,
            "lineno": 104
        },
        {
            "type": "class",
            "name": "TimeoutError",
            "methods": null,
            "lineno": 110
        },
        {
            "type": "class",
            "name": "ReadTimeoutError",
            "methods": null,
            "lineno": 120
        },
        {
            "type": "class",
            "name": "ConnectTimeoutError",
            "methods": null,
            "lineno": 128
        },
        {
            "type": "class",
            "name": "NewConnectionError",
            "methods": null,
            "lineno": 134
        },
        {
            "type": "class",
            "name": "EmptyPoolError",
            "methods": null,
            "lineno": 140
        },
        {
            "type": "class",
            "name": "ClosedPoolError",
            "methods": null,
            "lineno": 146
        },
        {
            "type": "class",
            "name": "LocationValueError",
            "methods": null,
            "lineno": 152
        },
        {
            "type": "class",
            "name": "LocationParseError",
            "methods": [
                "Method `__init__` (line 161)"
            ],
            "lineno": 158
        },
        {
            "type": "class",
            "name": "URLSchemeUnknown",
            "methods": [
                "Method `__init__` (line 171)"
            ],
            "lineno": 168
        },
        {
            "type": "class",
            "name": "ResponseError",
            "methods": null,
            "lineno": 178
        },
        {
            "type": "class",
            "name": "SecurityWarning",
            "methods": null,
            "lineno": 185
        },
        {
            "type": "class",
            "name": "SubjectAltNameWarning",
            "methods": null,
            "lineno": 191
        },
        {
            "type": "class",
            "name": "InsecureRequestWarning",
            "methods": null,
            "lineno": 197
        },
        {
            "type": "class",
            "name": "SystemTimeWarning",
            "methods": null,
            "lineno": 203
        },
        {
            "type": "class",
            "name": "InsecurePlatformWarning",
            "methods": null,
            "lineno": 209
        },
        {
            "type": "class",
            "name": "SNIMissingWarning",
            "methods": null,
            "lineno": 215
        },
        {
            "type": "class",
            "name": "DependencyWarning",
            "methods": null,
            "lineno": 221
        },
        {
            "type": "class",
            "name": "ResponseNotChunked",
            "methods": null,
            "lineno": 230
        },
        {
            "type": "class",
            "name": "BodyNotHttplibCompatible",
            "methods": null,
            "lineno": 236
        },
        {
            "type": "class",
            "name": "IncompleteRead",
            "methods": [
                "Method `__init__` (line 253)",
                "Method `__repr__` (line 256)"
            ],
            "lineno": 245
        },
        {
            "type": "class",
            "name": "InvalidChunkLength",
            "methods": [
                "Method `__init__` (line 266)",
                "Method `__repr__` (line 273)"
            ],
            "lineno": 263
        },
        {
            "type": "class",
            "name": "InvalidHeader",
            "methods": null,
            "lineno": 280
        },
        {
            "type": "class",
            "name": "ProxySchemeUnknown",
            "methods": [
                "Method `__init__` (line 291)"
            ],
            "lineno": 286
        },
        {
            "type": "class",
            "name": "ProxySchemeUnsupported",
            "methods": null,
            "lineno": 306
        },
        {
            "type": "class",
            "name": "HeaderParsingError",
            "methods": [
                "Method `__init__` (line 315)"
            ],
            "lineno": 312
        },
        {
            "type": "class",
            "name": "UnrewindableBodyError",
            "methods": null,
            "lineno": 320
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "pool",
                "message"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "__reduce__",
            "args": [
                "self"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "pool",
                "url",
                "message"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "__reduce__",
            "args": [
                "self"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "message",
                "error",
                "*args"
            ],
            "lineno": 53
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "pool",
                "url",
                "reason"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "pool",
                "url",
                "retries"
            ],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "location"
            ],
            "lineno": 161
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "scheme"
            ],
            "lineno": 171
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "partial",
                "expected"
            ],
            "lineno": 253
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 256
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "response",
                "length"
            ],
            "lineno": 266
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 273
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "scheme"
            ],
            "lineno": 291
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "defects",
                "unparsed_data"
            ],
            "lineno": 315
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/fields.py": [
        {
            "type": "function",
            "name": "guess_content_type",
            "args": [
                "filename",
                "default"
            ],
            "lineno": 10
        },
        {
            "type": "function",
            "name": "format_header_param_rfc2231",
            "args": [
                "name",
                "value"
            ],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "_replace_multiple",
            "args": [
                "value",
                "needles_and_replacements"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "format_header_param_html5",
            "args": [
                "name",
                "value"
            ],
            "lineno": 95
        },
        {
            "type": "class",
            "name": "RequestField",
            "methods": [
                "Method `__init__` (line 143)",
                "Method `from_tuples` (line 160)",
                "Method `_render_part` (line 195)",
                "Method `_render_parts` (line 208)",
                "Method `render_headers` (line 230)",
                "Method `make_multipart` (line 249)"
            ],
            "lineno": 126
        },
        {
            "type": "function",
            "name": "replacer",
            "args": [
                "match"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "data",
                "filename",
                "headers",
                "header_formatter"
            ],
            "lineno": 143
        },
        {
            "type": "function",
            "name": "from_tuples",
            "args": [
                "cls",
                "fieldname",
                "value",
                "header_formatter"
            ],
            "lineno": 160
        },
        {
            "type": "function",
            "name": "_render_part",
            "args": [
                "self",
                "name",
                "value"
            ],
            "lineno": 195
        },
        {
            "type": "function",
            "name": "_render_parts",
            "args": [
                "self",
                "header_parts"
            ],
            "lineno": 208
        },
        {
            "type": "function",
            "name": "render_headers",
            "args": [
                "self"
            ],
            "lineno": 230
        },
        {
            "type": "function",
            "name": "make_multipart",
            "args": [
                "self",
                "content_disposition",
                "content_type",
                "content_location"
            ],
            "lineno": 249
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/filepost.py": [
        {
            "type": "function",
            "name": "choose_boundary",
            "args": [],
            "lineno": 15
        },
        {
            "type": "function",
            "name": "iter_field_objects",
            "args": [
                "fields"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "iter_fields",
            "args": [
                "fields"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "encode_multipart_formdata",
            "args": [
                "fields",
                "boundary"
            ],
            "lineno": 63
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/poolmanager.py": [
        {
            "type": "function",
            "name": "_default_key_normalizer",
            "args": [
                "key_class",
                "request_context"
            ],
            "lineno": 79
        },
        {
            "type": "class",
            "name": "PoolManager",
            "methods": [
                "Method `__init__` (line 171)",
                "Method `__enter__` (line 181)",
                "Method `__exit__` (line 184)",
                "Method `_new_pool` (line 189)",
                "Method `clear` (line 216)",
                "Method `connection_from_host` (line 225)",
                "Method `connection_from_context` (line 248)",
                "Method `connection_from_pool_key` (line 263)",
                "Method `connection_from_url` (line 287)",
                "Method `_merge_pool_kwargs` (line 303)",
                "Method `_proxy_requires_url_absolute_form` (line 323)",
                "Method `_validate_proxy_scheme_url_selection` (line 336)",
                "Method `urlopen` (line 353)"
            ],
            "lineno": 140
        },
        {
            "type": "class",
            "name": "ProxyManager",
            "methods": [
                "Method `__init__` (line 461)",
                "Method `connection_from_host` (line 498)",
                "Method `_set_proxy_headers` (line 508)",
                "Method `urlopen` (line 523)"
            ],
            "lineno": 421
        },
        {
            "type": "function",
            "name": "proxy_from_url",
            "args": [
                "url",
                "**kw"
            ],
            "lineno": 536
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "num_pools",
                "headers",
                "**connection_pool_kw"
            ],
            "lineno": 171
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 181
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 184
        },
        {
            "type": "function",
            "name": "_new_pool",
            "args": [
                "self",
                "scheme",
                "host",
                "port",
                "request_context"
            ],
            "lineno": 189
        },
        {
            "type": "function",
            "name": "clear",
            "args": [
                "self"
            ],
            "lineno": 216
        },
        {
            "type": "function",
            "name": "connection_from_host",
            "args": [
                "self",
                "host",
                "port",
                "scheme",
                "pool_kwargs"
            ],
            "lineno": 225
        },
        {
            "type": "function",
            "name": "connection_from_context",
            "args": [
                "self",
                "request_context"
            ],
            "lineno": 248
        },
        {
            "type": "function",
            "name": "connection_from_pool_key",
            "args": [
                "self",
                "pool_key",
                "request_context"
            ],
            "lineno": 263
        },
        {
            "type": "function",
            "name": "connection_from_url",
            "args": [
                "self",
                "url",
                "pool_kwargs"
            ],
            "lineno": 287
        },
        {
            "type": "function",
            "name": "_merge_pool_kwargs",
            "args": [
                "self",
                "override"
            ],
            "lineno": 303
        },
        {
            "type": "function",
            "name": "_proxy_requires_url_absolute_form",
            "args": [
                "self",
                "parsed_url"
            ],
            "lineno": 323
        },
        {
            "type": "function",
            "name": "_validate_proxy_scheme_url_selection",
            "args": [
                "self",
                "url_scheme"
            ],
            "lineno": 336
        },
        {
            "type": "function",
            "name": "urlopen",
            "args": [
                "self",
                "method",
                "url",
                "redirect",
                "**kw"
            ],
            "lineno": 353
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "proxy_url",
                "num_pools",
                "headers",
                "proxy_headers",
                "proxy_ssl_context",
                "use_forwarding_for_https",
                "**connection_pool_kw"
            ],
            "lineno": 461
        },
        {
            "type": "function",
            "name": "connection_from_host",
            "args": [
                "self",
                "host",
                "port",
                "scheme",
                "pool_kwargs"
            ],
            "lineno": 498
        },
        {
            "type": "function",
            "name": "_set_proxy_headers",
            "args": [
                "self",
                "url",
                "headers"
            ],
            "lineno": 508
        },
        {
            "type": "function",
            "name": "urlopen",
            "args": [
                "self",
                "method",
                "url",
                "redirect",
                "**kw"
            ],
            "lineno": 523
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/request.py": [
        {
            "type": "class",
            "name": "RequestMethods",
            "methods": [
                "Method `__init__` (line 43)",
                "Method `urlopen` (line 46)",
                "Method `request` (line 61)",
                "Method `request_encode_url` (line 85)",
                "Method `request_encode_body` (line 101)"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "headers"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "urlopen",
            "args": [
                "self",
                "method",
                "url",
                "body",
                "headers",
                "encode_multipart",
                "multipart_boundary",
                "**kw"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "request",
            "args": [
                "self",
                "method",
                "url",
                "fields",
                "headers",
                "**urlopen_kw"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "request_encode_url",
            "args": [
                "self",
                "method",
                "url",
                "fields",
                "headers",
                "**urlopen_kw"
            ],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "request_encode_body",
            "args": [
                "self",
                "method",
                "url",
                "fields",
                "headers",
                "encode_multipart",
                "multipart_boundary",
                "**urlopen_kw"
            ],
            "lineno": 101
        },
        {
            "type": "class",
            "name": "RequestModule",
            "methods": [
                "Method `__call__` (line 179)"
            ],
            "lineno": 178
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 179
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/response.py": [
        {
            "type": "class",
            "name": "DeflateDecoder",
            "methods": [
                "Method `__init__` (line 36)",
                "Method `__getattr__` (line 41)",
                "Method `decompress` (line 44)"
            ],
            "lineno": 35
        },
        {
            "type": "class",
            "name": "GzipDecoderState",
            "methods": null,
            "lineno": 67
        },
        {
            "type": "class",
            "name": "GzipDecoder",
            "methods": [
                "Method `__init__` (line 75)",
                "Method `__getattr__` (line 79)",
                "Method `decompress` (line 82)"
            ],
            "lineno": 74
        },
        {
            "type": "class",
            "name": "MultiDecoder",
            "methods": [
                "Method `__init__` (line 132)",
                "Method `flush` (line 135)",
                "Method `decompress` (line 138)"
            ],
            "lineno": 123
        },
        {
            "type": "function",
            "name": "_get_decoder",
            "args": [
                "mode"
            ],
            "lineno": 144
        },
        {
            "type": "class",
            "name": "HTTPResponse",
            "methods": [
                "Method `__init__` (line 195)",
                "Method `get_redirect_location` (line 262)",
                "Method `release_conn` (line 275)",
                "Method `drain_conn` (line 282)",
                "Method `data` (line 294)",
                "Method `connection` (line 303)",
                "Method `isclosed` (line 306)",
                "Method `tell` (line 309)",
                "Method `_init_length` (line 317)",
                "Method `_init_decoder` (line 369)",
                "Method `_decode` (line 392)",
                "Method `_flush_decoder` (line 414)",
                "Method `_error_catcher` (line 426)",
                "Method `_fp_read` (line 481)",
                "Method `read` (line 529)",
                "Method `stream` (line 601)",
                "Method `from_httplib` (line 628)",
                "Method `getheaders` (line 660)",
                "Method `getheader` (line 669)",
                "Method `info` (line 679)",
                "Method `close` (line 683)",
                "Method `closed` (line 694)",
                "Method `fileno` (line 706)",
                "Method `flush` (line 717)",
                "Method `readable` (line 725)",
                "Method `readinto` (line 729)",
                "Method `supports_chunked_reads` (line 738)",
                "Method `_update_chunk_length` (line 747)",
                "Method `_handle_chunk` (line 761)",
                "Method `read_chunked` (line 783)",
                "Method `geturl` (line 853)",
                "Method `__iter__` (line 864)"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "decompress",
            "args": [
                "self",
                "data"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "decompress",
            "args": [
                "self",
                "data"
            ],
            "lineno": 82
        },
        {
            "type": "class",
            "name": "BrotliDecoder",
            "methods": [
                "Method `__init__` (line 110)",
                "Method `flush` (line 117)"
            ],
            "lineno": 106
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "modes"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "flush",
            "args": [
                "self"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "decompress",
            "args": [
                "self",
                "data"
            ],
            "lineno": 138
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "body",
                "headers",
                "status",
                "version",
                "reason",
                "strict",
                "preload_content",
                "decode_content",
                "original_response",
                "pool",
                "connection",
                "msg",
                "retries",
                "enforce_content_length",
                "request_method",
                "request_url",
                "auto_close"
            ],
            "lineno": 195
        },
        {
            "type": "function",
            "name": "get_redirect_location",
            "args": [
                "self"
            ],
            "lineno": 262
        },
        {
            "type": "function",
            "name": "release_conn",
            "args": [
                "self"
            ],
            "lineno": 275
        },
        {
            "type": "function",
            "name": "drain_conn",
            "args": [
                "self"
            ],
            "lineno": 282
        },
        {
            "type": "function",
            "name": "data",
            "args": [
                "self"
            ],
            "lineno": 294
        },
        {
            "type": "function",
            "name": "connection",
            "args": [
                "self"
            ],
            "lineno": 303
        },
        {
            "type": "function",
            "name": "isclosed",
            "args": [
                "self"
            ],
            "lineno": 306
        },
        {
            "type": "function",
            "name": "tell",
            "args": [
                "self"
            ],
            "lineno": 309
        },
        {
            "type": "function",
            "name": "_init_length",
            "args": [
                "self",
                "request_method"
            ],
            "lineno": 317
        },
        {
            "type": "function",
            "name": "_init_decoder",
            "args": [
                "self"
            ],
            "lineno": 369
        },
        {
            "type": "function",
            "name": "_decode",
            "args": [
                "self",
                "data",
                "decode_content",
                "flush_decoder"
            ],
            "lineno": 392
        },
        {
            "type": "function",
            "name": "_flush_decoder",
            "args": [
                "self"
            ],
            "lineno": 414
        },
        {
            "type": "function",
            "name": "_error_catcher",
            "args": [
                "self"
            ],
            "lineno": 426
        },
        {
            "type": "function",
            "name": "_fp_read",
            "args": [
                "self",
                "amt"
            ],
            "lineno": 481
        },
        {
            "type": "function",
            "name": "read",
            "args": [
                "self",
                "amt",
                "decode_content",
                "cache_content"
            ],
            "lineno": 529
        },
        {
            "type": "function",
            "name": "stream",
            "args": [
                "self",
                "amt",
                "decode_content"
            ],
            "lineno": 601
        },
        {
            "type": "function",
            "name": "from_httplib",
            "args": [
                "ResponseCls",
                "r",
                "**response_kw"
            ],
            "lineno": 628
        },
        {
            "type": "function",
            "name": "getheaders",
            "args": [
                "self"
            ],
            "lineno": 660
        },
        {
            "type": "function",
            "name": "getheader",
            "args": [
                "self",
                "name",
                "default"
            ],
            "lineno": 669
        },
        {
            "type": "function",
            "name": "info",
            "args": [
                "self"
            ],
            "lineno": 679
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 683
        },
        {
            "type": "function",
            "name": "closed",
            "args": [
                "self"
            ],
            "lineno": 694
        },
        {
            "type": "function",
            "name": "fileno",
            "args": [
                "self"
            ],
            "lineno": 706
        },
        {
            "type": "function",
            "name": "flush",
            "args": [
                "self"
            ],
            "lineno": 717
        },
        {
            "type": "function",
            "name": "readable",
            "args": [
                "self"
            ],
            "lineno": 725
        },
        {
            "type": "function",
            "name": "readinto",
            "args": [
                "self",
                "b"
            ],
            "lineno": 729
        },
        {
            "type": "function",
            "name": "supports_chunked_reads",
            "args": [
                "self"
            ],
            "lineno": 738
        },
        {
            "type": "function",
            "name": "_update_chunk_length",
            "args": [
                "self"
            ],
            "lineno": 747
        },
        {
            "type": "function",
            "name": "_handle_chunk",
            "args": [
                "self",
                "amt"
            ],
            "lineno": 761
        },
        {
            "type": "function",
            "name": "read_chunked",
            "args": [
                "self",
                "amt",
                "decode_content"
            ],
            "lineno": 783
        },
        {
            "type": "function",
            "name": "geturl",
            "args": [
                "self"
            ],
            "lineno": 853
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 864
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self"
            ],
            "lineno": 110
        },
        {
            "type": "function",
            "name": "flush",
            "args": [
                "self"
            ],
            "lineno": 117
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/_collections.py": [
        {
            "type": "class",
            "name": "RecentlyUsedContainer",
            "methods": [
                "Method `__init__` (line 47)",
                "Method `__getitem__` (line 54)",
                "Method `__setitem__` (line 61)",
                "Method `__delitem__` (line 76)",
                "Method `__len__` (line 83)",
                "Method `__iter__` (line 87)",
                "Method `clear` (line 92)",
                "Method `keys` (line 102)"
            ],
            "lineno": 31
        },
        {
            "type": "class",
            "name": "HTTPHeaderDict",
            "methods": [
                "Method `__init__` (line 141)",
                "Method `__setitem__` (line 152)",
                "Method `__getitem__` (line 156)",
                "Method `__delitem__` (line 160)",
                "Method `__contains__` (line 163)",
                "Method `__eq__` (line 166)",
                "Method `__ne__` (line 175)",
                "Method `__len__` (line 184)",
                "Method `__iter__` (line 187)",
                "Method `pop` (line 192)",
                "Method `discard` (line 209)",
                "Method `add` (line 215)",
                "Method `extend` (line 231)",
                "Method `getlist` (line 259)",
                "Method `__repr__` (line 279)",
                "Method `_copy_from` (line 282)",
                "Method `copy` (line 290)",
                "Method `iteritems` (line 295)",
                "Method `itermerged` (line 302)",
                "Method `items` (line 308)",
                "Method `from_httplib` (line 312)"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "maxsize",
                "dispose_func"
            ],
            "lineno": 47
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "__setitem__",
            "args": [
                "self",
                "key",
                "value"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "__delitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "__len__",
            "args": [
                "self"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "clear",
            "args": [
                "self"
            ],
            "lineno": 92
        },
        {
            "type": "function",
            "name": "keys",
            "args": [
                "self"
            ],
            "lineno": 102
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "headers",
                "**kwargs"
            ],
            "lineno": 141
        },
        {
            "type": "function",
            "name": "__setitem__",
            "args": [
                "self",
                "key",
                "val"
            ],
            "lineno": 152
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "__delitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 160
        },
        {
            "type": "function",
            "name": "__contains__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 163
        },
        {
            "type": "function",
            "name": "__eq__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 166
        },
        {
            "type": "function",
            "name": "__ne__",
            "args": [
                "self",
                "other"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "__len__",
            "args": [
                "self"
            ],
            "lineno": 184
        },
        {
            "type": "function",
            "name": "__iter__",
            "args": [
                "self"
            ],
            "lineno": 187
        },
        {
            "type": "function",
            "name": "pop",
            "args": [
                "self",
                "key",
                "default"
            ],
            "lineno": 192
        },
        {
            "type": "function",
            "name": "discard",
            "args": [
                "self",
                "key"
            ],
            "lineno": 209
        },
        {
            "type": "function",
            "name": "add",
            "args": [
                "self",
                "key",
                "val"
            ],
            "lineno": 215
        },
        {
            "type": "function",
            "name": "extend",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 231
        },
        {
            "type": "function",
            "name": "getlist",
            "args": [
                "self",
                "key",
                "default"
            ],
            "lineno": 259
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 279
        },
        {
            "type": "function",
            "name": "_copy_from",
            "args": [
                "self",
                "other"
            ],
            "lineno": 282
        },
        {
            "type": "function",
            "name": "copy",
            "args": [
                "self"
            ],
            "lineno": 290
        },
        {
            "type": "function",
            "name": "iteritems",
            "args": [
                "self"
            ],
            "lineno": 295
        },
        {
            "type": "function",
            "name": "itermerged",
            "args": [
                "self"
            ],
            "lineno": 302
        },
        {
            "type": "function",
            "name": "items",
            "args": [
                "self"
            ],
            "lineno": 308
        },
        {
            "type": "function",
            "name": "from_httplib",
            "args": [
                "cls",
                "message"
            ],
            "lineno": 312
        },
        {
            "type": "class",
            "name": "RLock",
            "methods": [
                "Method `__enter__` (line 12)",
                "Method `__exit__` (line 15)"
            ],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_value",
                "traceback"
            ],
            "lineno": 15
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/_version.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/__init__.py": [
        {
            "type": "function",
            "name": "add_stderr_logger",
            "args": [
                "level"
            ],
            "lineno": 63
        },
        {
            "type": "function",
            "name": "disable_warnings",
            "args": [
                "category"
            ],
            "lineno": 98
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/webencodings/labels.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/webencodings/mklabels.py": [
        {
            "type": "function",
            "name": "assert_lower",
            "args": [
                "string"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "generate",
            "args": [
                "url"
            ],
            "lineno": 25
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/webencodings/tests.py": [
        {
            "type": "function",
            "name": "assert_raises",
            "args": [
                "exception",
                "function",
                "*args",
                "**kwargs"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "test_labels",
            "args": [],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "test_all_labels",
            "args": [],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "test_invalid_label",
            "args": [],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "test_decode",
            "args": [],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "test_encode",
            "args": [],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "test_iter_decode",
            "args": [],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "test_iter_encode",
            "args": [],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "test_x_user_defined",
            "args": [],
            "lineno": 147
        },
        {
            "type": "function",
            "name": "iter_decode_to_string",
            "args": [
                "input",
                "fallback_encoding"
            ],
            "lineno": 108
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/webencodings/x_user_defined.py": [
        {
            "type": "class",
            "name": "Codec",
            "methods": [
                "Method `encode` (line 23)",
                "Method `decode` (line 26)"
            ],
            "lineno": 21
        },
        {
            "type": "class",
            "name": "IncrementalEncoder",
            "methods": [
                "Method `encode` (line 31)"
            ],
            "lineno": 30
        },
        {
            "type": "class",
            "name": "IncrementalDecoder",
            "methods": [
                "Method `decode` (line 36)"
            ],
            "lineno": 35
        },
        {
            "type": "class",
            "name": "StreamWriter",
            "methods": null,
            "lineno": 40
        },
        {
            "type": "class",
            "name": "StreamReader",
            "methods": null,
            "lineno": 44
        },
        {
            "type": "function",
            "name": "encode",
            "args": [
                "self",
                "input",
                "errors"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "decode",
            "args": [
                "self",
                "input",
                "errors"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "encode",
            "args": [
                "self",
                "input",
                "final"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "decode",
            "args": [
                "self",
                "input",
                "final"
            ],
            "lineno": 36
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/webencodings/__init__.py": [
        {
            "type": "function",
            "name": "ascii_lower",
            "args": [
                "string"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "lookup",
            "args": [
                "label"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "_get_encoding",
            "args": [
                "encoding_or_label"
            ],
            "lineno": 91
        },
        {
            "type": "class",
            "name": "Encoding",
            "methods": [
                "Method `__init__` (line 124)",
                "Method `__repr__` (line 128)"
            ],
            "lineno": 109
        },
        {
            "type": "function",
            "name": "decode",
            "args": [
                "input",
                "fallback_encoding",
                "errors"
            ],
            "lineno": 139
        },
        {
            "type": "function",
            "name": "_detect_bom",
            "args": [
                "input"
            ],
            "lineno": 161
        },
        {
            "type": "function",
            "name": "encode",
            "args": [
                "input",
                "encoding",
                "errors"
            ],
            "lineno": 172
        },
        {
            "type": "function",
            "name": "iter_decode",
            "args": [
                "input",
                "fallback_encoding",
                "errors"
            ],
            "lineno": 186
        },
        {
            "type": "function",
            "name": "_iter_decode_generator",
            "args": [
                "input",
                "decoder"
            ],
            "lineno": 214
        },
        {
            "type": "function",
            "name": "iter_encode",
            "args": [
                "input",
                "encoding",
                "errors"
            ],
            "lineno": 246
        },
        {
            "type": "function",
            "name": "_iter_encode_generator",
            "args": [
                "input",
                "encode"
            ],
            "lineno": 262
        },
        {
            "type": "class",
            "name": "IncrementalDecoder",
            "methods": [
                "Method `__init__` (line 283)",
                "Method `decode` (line 295)"
            ],
            "lineno": 272
        },
        {
            "type": "class",
            "name": "IncrementalEncoder",
            "methods": [
                "Method `__init__` (line 340)"
            ],
            "lineno": 323
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "codec_info"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "fallback_encoding",
                "errors"
            ],
            "lineno": 283
        },
        {
            "type": "function",
            "name": "decode",
            "args": [
                "self",
                "input",
                "final"
            ],
            "lineno": 295
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "encoding",
                "errors"
            ],
            "lineno": 340
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/cachecontrol/caches/file_cache.py": [
        {
            "type": "function",
            "name": "_secure_open_write",
            "args": [
                "filename",
                "fmode"
            ],
            "lineno": 20
        },
        {
            "type": "class",
            "name": "_FileCacheMixin",
            "methods": [
                "Method `__init__` (line 64)",
                "Method `encode` (line 94)",
                "Method `_fn` (line 97)",
                "Method `get` (line 104)",
                "Method `set` (line 113)",
                "Method `_write` (line 119)",
                "Method `_delete` (line 134)"
            ],
            "lineno": 61
        },
        {
            "type": "class",
            "name": "FileCache",
            "methods": [
                "Method `delete` (line 149)"
            ],
            "lineno": 143
        },
        {
            "type": "class",
            "name": "SeparateBodyFileCache",
            "methods": [
                "Method `get_body` (line 159)",
                "Method `set_body` (line 166)",
                "Method `delete` (line 170)"
            ],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "url_to_file_path",
            "args": [
                "url",
                "filecache"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "directory",
                "forever",
                "filemode",
                "dirmode",
                "lock_class"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "encode",
            "args": [
                "x"
            ],
            "lineno": 94
        },
        {
            "type": "function",
            "name": "_fn",
            "args": [
                "self",
                "name"
            ],
            "lineno": 97
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "key"
            ],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "set",
            "args": [
                "self",
                "key",
                "value",
                "expires"
            ],
            "lineno": 113
        },
        {
            "type": "function",
            "name": "_write",
            "args": [
                "self",
                "path",
                "data"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "_delete",
            "args": [
                "self",
                "key",
                "suffix"
            ],
            "lineno": 134
        },
        {
            "type": "function",
            "name": "delete",
            "args": [
                "self",
                "key"
            ],
            "lineno": 149
        },
        {
            "type": "function",
            "name": "get_body",
            "args": [
                "self",
                "key"
            ],
            "lineno": 159
        },
        {
            "type": "function",
            "name": "set_body",
            "args": [
                "self",
                "key",
                "body"
            ],
            "lineno": 166
        },
        {
            "type": "function",
            "name": "delete",
            "args": [
                "self",
                "key"
            ],
            "lineno": 170
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/cachecontrol/caches/redis_cache.py": [
        {
            "type": "class",
            "name": "RedisCache",
            "methods": [
                "Method `__init__` (line 17)",
                "Method `get` (line 20)",
                "Method `set` (line 23)",
                "Method `delete` (line 37)",
                "Method `clear` (line 40)",
                "Method `close` (line 46)"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "conn"
            ],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "get",
            "args": [
                "self",
                "key"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "set",
            "args": [
                "self",
                "key",
                "value",
                "expires"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "delete",
            "args": [
                "self",
                "key"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "clear",
            "args": [
                "self"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 46
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/cachecontrol/caches/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/cli/chardetect.py": [
        {
            "type": "function",
            "name": "description_of",
            "args": [
                "lines",
                "name",
                "minimal",
                "should_rename_legacy"
            ],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "main",
            "args": [
                "argv"
            ],
            "lineno": 58
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/cli/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/metadata/languages.py": [
        {
            "type": "class",
            "name": "Language",
            "methods": [
                "Method `__init__` (line 35)",
                "Method `__repr__` (line 59)"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "iso_code",
                "use_ascii",
                "charsets",
                "alphabet",
                "wiki_start_pages"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 59
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/chardet/metadata/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/colorama/tests/ansitowin32_test.py": [
        {
            "type": "class",
            "name": "StreamWrapperTest",
            "methods": [
                "Method `testIsAProxy` (line 22)",
                "Method `testDelegatesWrite` (line 27)",
                "Method `testDelegatesContext` (line 34)",
                "Method `testProxyNoContextManager` (line 41)",
                "Method `test_closed_shouldnt_raise_on_closed_stream` (line 49)",
                "Method `test_closed_shouldnt_raise_on_detached_stream` (line 55)"
            ],
            "lineno": 20
        },
        {
            "type": "class",
            "name": "AnsiToWin32Test",
            "methods": [
                "Method `testInit` (line 63)",
                "Method `testStripIsTrueOnWindows` (line 72)",
                "Method `testStripIsFalseOffWindows` (line 78)",
                "Method `testWriteStripsAnsi` (line 84)",
                "Method `testWriteDoesNotStripAnsi` (line 96)",
                "Method `assert_autoresets` (line 109)",
                "Method `testWriteAutoresets` (line 120)",
                "Method `testWriteAndConvertWritesPlainText` (line 126)",
                "Method `testWriteAndConvertStripsAllValidAnsi` (line 131)",
                "Method `testWriteAndConvertSkipsEmptySnippets` (line 157)",
                "Method `testWriteAndConvertCallsWin32WithParamsAndCommand` (line 163)",
                "Method `test_reset_all_shouldnt_raise_on_closed_orig_stdout` (line 180)",
                "Method `test_wrap_shouldnt_raise_on_closed_orig_stdout` (line 187)",
                "Method `test_wrap_shouldnt_raise_on_missing_closed_attr` (line 197)",
                "Method `testExtractParams` (line 205)",
                "Method `testCallWin32UsesLookup` (line 219)",
                "Method `test_osc_codes` (line 232)",
                "Method `test_native_windows_ansi` (line 248)"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "testIsAProxy",
            "args": [
                "self"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "testDelegatesWrite",
            "args": [
                "self"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "testDelegatesContext",
            "args": [
                "self"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "testProxyNoContextManager",
            "args": [
                "self"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "test_closed_shouldnt_raise_on_closed_stream",
            "args": [
                "self"
            ],
            "lineno": 49
        },
        {
            "type": "function",
            "name": "test_closed_shouldnt_raise_on_detached_stream",
            "args": [
                "self"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "testInit",
            "args": [
                "self"
            ],
            "lineno": 63
        },
        {
            "type": "function",
            "name": "testStripIsTrueOnWindows",
            "args": [
                "self"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "testStripIsFalseOffWindows",
            "args": [
                "self"
            ],
            "lineno": 78
        },
        {
            "type": "function",
            "name": "testWriteStripsAnsi",
            "args": [
                "self"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "testWriteDoesNotStripAnsi",
            "args": [
                "self"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "assert_autoresets",
            "args": [
                "self",
                "convert",
                "autoreset"
            ],
            "lineno": 109
        },
        {
            "type": "function",
            "name": "testWriteAutoresets",
            "args": [
                "self"
            ],
            "lineno": 120
        },
        {
            "type": "function",
            "name": "testWriteAndConvertWritesPlainText",
            "args": [
                "self"
            ],
            "lineno": 126
        },
        {
            "type": "function",
            "name": "testWriteAndConvertStripsAllValidAnsi",
            "args": [
                "self"
            ],
            "lineno": 131
        },
        {
            "type": "function",
            "name": "testWriteAndConvertSkipsEmptySnippets",
            "args": [
                "self"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "testWriteAndConvertCallsWin32WithParamsAndCommand",
            "args": [
                "self"
            ],
            "lineno": 163
        },
        {
            "type": "function",
            "name": "test_reset_all_shouldnt_raise_on_closed_orig_stdout",
            "args": [
                "self"
            ],
            "lineno": 180
        },
        {
            "type": "function",
            "name": "test_wrap_shouldnt_raise_on_closed_orig_stdout",
            "args": [
                "self"
            ],
            "lineno": 187
        },
        {
            "type": "function",
            "name": "test_wrap_shouldnt_raise_on_missing_closed_attr",
            "args": [
                "self"
            ],
            "lineno": 197
        },
        {
            "type": "function",
            "name": "testExtractParams",
            "args": [
                "self"
            ],
            "lineno": 205
        },
        {
            "type": "function",
            "name": "testCallWin32UsesLookup",
            "args": [
                "self"
            ],
            "lineno": 219
        },
        {
            "type": "function",
            "name": "test_osc_codes",
            "args": [
                "self"
            ],
            "lineno": 232
        },
        {
            "type": "function",
            "name": "test_native_windows_ansi",
            "args": [
                "self"
            ],
            "lineno": 248
        },
        {
            "type": "function",
            "name": "p",
            "args": [
                "a",
                "b"
            ],
            "lineno": 250
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/colorama/tests/ansi_test.py": [
        {
            "type": "class",
            "name": "AnsiTest",
            "methods": [
                "Method `setUp` (line 14)",
                "Method `tearDown` (line 20)",
                "Method `testForeAttributes` (line 25)",
                "Method `testBackAttributes` (line 47)",
                "Method `testStyleAttributes` (line 69)"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "setUp",
            "args": [
                "self"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "tearDown",
            "args": [
                "self"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "testForeAttributes",
            "args": [
                "self"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "testBackAttributes",
            "args": [
                "self"
            ],
            "lineno": 47
        },
        {
            "type": "function",
            "name": "testStyleAttributes",
            "args": [
                "self"
            ],
            "lineno": 69
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/colorama/tests/initialise_test.py": [
        {
            "type": "class",
            "name": "InitTest",
            "methods": [
                "Method `setUp` (line 21)",
                "Method `tearDown` (line 25)",
                "Method `assertWrapped` (line 30)",
                "Method `assertNotWrapped` (line 38)",
                "Method `testInitWrapsOnWindows` (line 45)",
                "Method `testInitDoesntWrapOnEmulatedWindows` (line 52)",
                "Method `testInitDoesntWrapOnNonWindows` (line 57)",
                "Method `testInitDoesntWrapIfNone` (line 62)",
                "Method `testInitAutoresetOnWrapsOnAllPlatforms` (line 70)",
                "Method `testInitWrapOffDoesntWrapOnWindows` (line 75)",
                "Method `testInitWrapOffIncompatibleWithAutoresetOn` (line 80)",
                "Method `testAutoResetPassedOn` (line 85)",
                "Method `testAutoResetChangeable` (line 93)",
                "Method `testAtexitRegisteredOnlyOnce` (line 111)"
            ],
            "lineno": 18
        },
        {
            "type": "class",
            "name": "JustFixWindowsConsoleTest",
            "methods": [
                "Method `_reset` (line 120)",
                "Method `tearDown` (line 125)",
                "Method `testJustFixWindowsConsole` (line 129)"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "setUp",
            "args": [
                "self"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "tearDown",
            "args": [
                "self"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "assertWrapped",
            "args": [
                "self"
            ],
            "lineno": 30
        },
        {
            "type": "function",
            "name": "assertNotWrapped",
            "args": [
                "self"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "testInitWrapsOnWindows",
            "args": [
                "self",
                "_"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "testInitDoesntWrapOnEmulatedWindows",
            "args": [
                "self",
                "_"
            ],
            "lineno": 52
        },
        {
            "type": "function",
            "name": "testInitDoesntWrapOnNonWindows",
            "args": [
                "self"
            ],
            "lineno": 57
        },
        {
            "type": "function",
            "name": "testInitDoesntWrapIfNone",
            "args": [
                "self"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "testInitAutoresetOnWrapsOnAllPlatforms",
            "args": [
                "self"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "testInitWrapOffDoesntWrapOnWindows",
            "args": [
                "self"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "testInitWrapOffIncompatibleWithAutoresetOn",
            "args": [
                "self"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "testAutoResetPassedOn",
            "args": [
                "self",
                "mockATW32",
                "_"
            ],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "testAutoResetChangeable",
            "args": [
                "self",
                "mockATW32"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "testAtexitRegisteredOnlyOnce",
            "args": [
                "self",
                "mockRegister"
            ],
            "lineno": 111
        },
        {
            "type": "function",
            "name": "_reset",
            "args": [
                "self"
            ],
            "lineno": 120
        },
        {
            "type": "function",
            "name": "tearDown",
            "args": [
                "self"
            ],
            "lineno": 125
        },
        {
            "type": "function",
            "name": "testJustFixWindowsConsole",
            "args": [
                "self"
            ],
            "lineno": 129
        },
        {
            "type": "function",
            "name": "fake_std",
            "args": [],
            "lineno": 136
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/colorama/tests/isatty_test.py": [
        {
            "type": "function",
            "name": "is_a_tty",
            "args": [
                "stream"
            ],
            "lineno": 9
        },
        {
            "type": "class",
            "name": "IsattyTest",
            "methods": [
                "Method `test_TTY` (line 14)",
                "Method `test_nonTTY` (line 20)",
                "Method `test_withPycharm` (line 26)",
                "Method `test_withPycharmTTYOverride` (line 31)",
                "Method `test_withPycharmNonTTYOverride` (line 36)",
                "Method `test_withPycharmNoneOverride` (line 41)",
                "Method `test_withPycharmStreamWrapped` (line 48)"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "test_TTY",
            "args": [
                "self"
            ],
            "lineno": 14
        },
        {
            "type": "function",
            "name": "test_nonTTY",
            "args": [
                "self"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "test_withPycharm",
            "args": [
                "self"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "test_withPycharmTTYOverride",
            "args": [
                "self"
            ],
            "lineno": 31
        },
        {
            "type": "function",
            "name": "test_withPycharmNonTTYOverride",
            "args": [
                "self"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "test_withPycharmNoneOverride",
            "args": [
                "self"
            ],
            "lineno": 41
        },
        {
            "type": "function",
            "name": "test_withPycharmStreamWrapped",
            "args": [
                "self"
            ],
            "lineno": 48
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/colorama/tests/utils.py": [
        {
            "type": "class",
            "name": "StreamTTY",
            "methods": [
                "Method `isatty` (line 9)"
            ],
            "lineno": 8
        },
        {
            "type": "class",
            "name": "StreamNonTTY",
            "methods": [
                "Method `isatty` (line 13)"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "osname",
            "args": [
                "name"
            ],
            "lineno": 17
        },
        {
            "type": "function",
            "name": "replace_by",
            "args": [
                "stream"
            ],
            "lineno": 24
        },
        {
            "type": "function",
            "name": "replace_original_by",
            "args": [
                "stream"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "pycharm",
            "args": [],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "isatty",
            "args": [
                "self"
            ],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "isatty",
            "args": [
                "self"
            ],
            "lineno": 13
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/colorama/tests/winterm_test.py": [
        {
            "type": "class",
            "name": "WinTermTest",
            "methods": [
                "Method `testInit` (line 16)",
                "Method `testGetAttrs` (line 26)",
                "Method `testResetAll` (line 48)",
                "Method `testFore` (line 67)",
                "Method `testBack` (line 78)",
                "Method `testStyle` (line 89)",
                "Method `testSetConsole` (line 100)",
                "Method `testSetConsoleOnStderr` (line 115)"
            ],
            "lineno": 13
        },
        {
            "type": "function",
            "name": "testInit",
            "args": [
                "self",
                "mockWin32"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "testGetAttrs",
            "args": [
                "self"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "testResetAll",
            "args": [
                "self",
                "mockWin32"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "testFore",
            "args": [
                "self"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "testBack",
            "args": [
                "self"
            ],
            "lineno": 78
        },
        {
            "type": "function",
            "name": "testStyle",
            "args": [
                "self"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "testSetConsole",
            "args": [
                "self",
                "mockWin32"
            ],
            "lineno": 100
        },
        {
            "type": "function",
            "name": "testSetConsoleOnStderr",
            "args": [
                "self",
                "mockWin32"
            ],
            "lineno": 115
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/colorama/tests/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/filters/__init__.py": [
        {
            "type": "function",
            "name": "find_filter_class",
            "args": [
                "filtername"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "get_filter_by_name",
            "args": [
                "filtername",
                "**options"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "get_all_filters",
            "args": [],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "_replace_special",
            "args": [
                "ttype",
                "value",
                "regex",
                "specialttype",
                "replacefunc"
            ],
            "lineno": 52
        },
        {
            "type": "class",
            "name": "CodeTagFilter",
            "methods": [
                "Method `__init__` (line 78)",
                "Method `filter` (line 86)"
            ],
            "lineno": 65
        },
        {
            "type": "class",
            "name": "SymbolFilter",
            "methods": [
                "Method `__init__` (line 673)",
                "Method `filter` (line 679)"
            ],
            "lineno": 97
        },
        {
            "type": "class",
            "name": "KeywordCaseFilter",
            "methods": [
                "Method `__init__` (line 701)",
                "Method `filter` (line 707)"
            ],
            "lineno": 687
        },
        {
            "type": "class",
            "name": "NameHighlightFilter",
            "methods": [
                "Method `__init__` (line 739)",
                "Method `filter` (line 748)"
            ],
            "lineno": 715
        },
        {
            "type": "class",
            "name": "ErrorToken",
            "methods": null,
            "lineno": 756
        },
        {
            "type": "class",
            "name": "RaiseOnErrorTokenFilter",
            "methods": [
                "Method `__init__` (line 772)",
                "Method `filter` (line 782)"
            ],
            "lineno": 760
        },
        {
            "type": "class",
            "name": "VisibleWhitespaceFilter",
            "methods": [
                "Method `__init__` (line 819)",
                "Method `filter` (line 836)"
            ],
            "lineno": 789
        },
        {
            "type": "class",
            "name": "GobbleFilter",
            "methods": [
                "Method `__init__` (line 882)",
                "Method `gobble` (line 886)",
                "Method `filter` (line 892)"
            ],
            "lineno": 868
        },
        {
            "type": "class",
            "name": "TokenMergeFilter",
            "methods": [
                "Method `__init__` (line 913)",
                "Method `filter` (line 916)"
            ],
            "lineno": 907
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 78
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "lexer",
                "stream"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 673
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "lexer",
                "stream"
            ],
            "lineno": 679
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 701
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "lexer",
                "stream"
            ],
            "lineno": 707
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 739
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "lexer",
                "stream"
            ],
            "lineno": 748
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 772
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "lexer",
                "stream"
            ],
            "lineno": 782
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 819
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "lexer",
                "stream"
            ],
            "lineno": 836
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 882
        },
        {
            "type": "function",
            "name": "gobble",
            "args": [
                "self",
                "value",
                "left"
            ],
            "lineno": 886
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "lexer",
                "stream"
            ],
            "lineno": 892
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 913
        },
        {
            "type": "function",
            "name": "filter",
            "args": [
                "self",
                "lexer",
                "stream"
            ],
            "lineno": 916
        },
        {
            "type": "function",
            "name": "replacefunc",
            "args": [
                "wschar"
            ],
            "lineno": 843
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatters/bbcode.py": [
        {
            "type": "class",
            "name": "BBCodeFormatter",
            "methods": [
                "Method `__init__` (line 51)",
                "Method `_make_styles` (line 59)",
                "Method `format_unencoded` (line 78)"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 51
        },
        {
            "type": "function",
            "name": "_make_styles",
            "args": [
                "self"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "format_unencoded",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 78
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatters/groff.py": [
        {
            "type": "class",
            "name": "GroffFormatter",
            "methods": [
                "Method `__init__` (line 45)",
                "Method `_make_styles` (line 58)",
                "Method `_define_colors` (line 81)",
                "Method `_write_lineno` (line 91)",
                "Method `_wrap_line` (line 96)",
                "Method `_escape_chars` (line 119)",
                "Method `format_unencoded` (line 138)"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "_make_styles",
            "args": [
                "self"
            ],
            "lineno": 58
        },
        {
            "type": "function",
            "name": "_define_colors",
            "args": [
                "self",
                "outfile"
            ],
            "lineno": 81
        },
        {
            "type": "function",
            "name": "_write_lineno",
            "args": [
                "self",
                "outfile"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "_wrap_line",
            "args": [
                "self",
                "line"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "_escape_chars",
            "args": [
                "self",
                "text"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "format_unencoded",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 138
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatters/html.py": [
        {
            "type": "function",
            "name": "escape_html",
            "args": [
                "text",
                "table"
            ],
            "lineno": 38
        },
        {
            "type": "function",
            "name": "webify",
            "args": [
                "color"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "_get_ttype_class",
            "args": [
                "ttype"
            ],
            "lineno": 50
        },
        {
            "type": "class",
            "name": "HtmlFormatter",
            "methods": [
                "Method `__init__` (line 410)",
                "Method `_get_css_class` (line 459)",
                "Method `_get_css_classes` (line 467)",
                "Method `_get_css_inline_styles` (line 475)",
                "Method `_create_stylesheet` (line 483)",
                "Method `get_style_defs` (line 507)",
                "Method `get_token_style_defs` (line 521)",
                "Method `get_background_style_defs` (line 538)",
                "Method `get_linenos_style_defs` (line 561)",
                "Method `get_css_prefix` (line 572)",
                "Method `_pre_style` (line 591)",
                "Method `_linenos_style` (line 595)",
                "Method `_linenos_special_style` (line 602)",
                "Method `_decodeifneeded` (line 608)",
                "Method `_wrap_full` (line 615)",
                "Method `_wrap_tablelinenos` (line 656)",
                "Method `_wrap_inlinelinenos` (line 724)",
                "Method `_wrap_lineanchors` (line 767)",
                "Method `_wrap_linespans` (line 779)",
                "Method `_wrap_div` (line 789)",
                "Method `_wrap_pre` (line 803)",
                "Method `_wrap_code` (line 820)",
                "Method `_translate_parts` (line 826)",
                "Method `_format_lines` (line 830)",
                "Method `_lookup_ctag` (line 908)",
                "Method `_highlight_lines` (line 915)",
                "Method `wrap` (line 937)",
                "Method `format_unencoded` (line 952)"
            ],
            "lineno": 113
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 410
        },
        {
            "type": "function",
            "name": "_get_css_class",
            "args": [
                "self",
                "ttype"
            ],
            "lineno": 459
        },
        {
            "type": "function",
            "name": "_get_css_classes",
            "args": [
                "self",
                "ttype"
            ],
            "lineno": 467
        },
        {
            "type": "function",
            "name": "_get_css_inline_styles",
            "args": [
                "self",
                "ttype"
            ],
            "lineno": 475
        },
        {
            "type": "function",
            "name": "_create_stylesheet",
            "args": [
                "self"
            ],
            "lineno": 483
        },
        {
            "type": "function",
            "name": "get_style_defs",
            "args": [
                "self",
                "arg"
            ],
            "lineno": 507
        },
        {
            "type": "function",
            "name": "get_token_style_defs",
            "args": [
                "self",
                "arg"
            ],
            "lineno": 521
        },
        {
            "type": "function",
            "name": "get_background_style_defs",
            "args": [
                "self",
                "arg"
            ],
            "lineno": 538
        },
        {
            "type": "function",
            "name": "get_linenos_style_defs",
            "args": [
                "self"
            ],
            "lineno": 561
        },
        {
            "type": "function",
            "name": "get_css_prefix",
            "args": [
                "self",
                "arg"
            ],
            "lineno": 572
        },
        {
            "type": "function",
            "name": "_pre_style",
            "args": [
                "self"
            ],
            "lineno": 591
        },
        {
            "type": "function",
            "name": "_linenos_style",
            "args": [
                "self"
            ],
            "lineno": 595
        },
        {
            "type": "function",
            "name": "_linenos_special_style",
            "args": [
                "self"
            ],
            "lineno": 602
        },
        {
            "type": "function",
            "name": "_decodeifneeded",
            "args": [
                "self",
                "value"
            ],
            "lineno": 608
        },
        {
            "type": "function",
            "name": "_wrap_full",
            "args": [
                "self",
                "inner",
                "outfile"
            ],
            "lineno": 615
        },
        {
            "type": "function",
            "name": "_wrap_tablelinenos",
            "args": [
                "self",
                "inner"
            ],
            "lineno": 656
        },
        {
            "type": "function",
            "name": "_wrap_inlinelinenos",
            "args": [
                "self",
                "inner"
            ],
            "lineno": 724
        },
        {
            "type": "function",
            "name": "_wrap_lineanchors",
            "args": [
                "self",
                "inner"
            ],
            "lineno": 767
        },
        {
            "type": "function",
            "name": "_wrap_linespans",
            "args": [
                "self",
                "inner"
            ],
            "lineno": 779
        },
        {
            "type": "function",
            "name": "_wrap_div",
            "args": [
                "self",
                "inner"
            ],
            "lineno": 789
        },
        {
            "type": "function",
            "name": "_wrap_pre",
            "args": [
                "self",
                "inner"
            ],
            "lineno": 803
        },
        {
            "type": "function",
            "name": "_wrap_code",
            "args": [
                "self",
                "inner"
            ],
            "lineno": 820
        },
        {
            "type": "function",
            "name": "_translate_parts",
            "args": [
                "self",
                "value"
            ],
            "lineno": 826
        },
        {
            "type": "function",
            "name": "_format_lines",
            "args": [
                "self",
                "tokensource"
            ],
            "lineno": 830
        },
        {
            "type": "function",
            "name": "_lookup_ctag",
            "args": [
                "self",
                "token"
            ],
            "lineno": 908
        },
        {
            "type": "function",
            "name": "_highlight_lines",
            "args": [
                "self",
                "tokensource"
            ],
            "lineno": 915
        },
        {
            "type": "function",
            "name": "wrap",
            "args": [
                "self",
                "source"
            ],
            "lineno": 937
        },
        {
            "type": "function",
            "name": "format_unencoded",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 952
        },
        {
            "type": "function",
            "name": "prefix",
            "args": [
                "cls"
            ],
            "lineno": 580
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatters/img.py": [
        {
            "type": "class",
            "name": "PilNotAvailable",
            "methods": null,
            "lineno": 53
        },
        {
            "type": "class",
            "name": "FontNotFound",
            "methods": null,
            "lineno": 57
        },
        {
            "type": "class",
            "name": "FontManager",
            "methods": [
                "Method `__init__` (line 66)",
                "Method `_get_nix_font_path` (line 84)",
                "Method `_create_nix` (line 98)",
                "Method `_get_mac_font_path` (line 119)",
                "Method `_create_mac` (line 122)",
                "Method `_lookup_win` (line 151)",
                "Method `_create_win` (line 166)",
                "Method `get_char_size` (line 205)",
                "Method `get_text_size` (line 211)",
                "Method `get_font` (line 221)"
            ],
            "lineno": 61
        },
        {
            "type": "class",
            "name": "ImageFormatter",
            "methods": [
                "Method `__init__` (line 353)",
                "Method `get_style_defs` (line 409)",
                "Method `_get_line_height` (line 413)",
                "Method `_get_line_y` (line 419)",
                "Method `_get_char_width` (line 425)",
                "Method `_get_char_x` (line 431)",
                "Method `_get_text_pos` (line 437)",
                "Method `_get_linenumber_pos` (line 443)",
                "Method `_get_text_color` (line 449)",
                "Method `_get_text_bg_color` (line 459)",
                "Method `_get_style_font` (line 469)",
                "Method `_get_image_size` (line 475)",
                "Method `_draw_linenumber` (line 482)",
                "Method `_draw_text` (line 495)",
                "Method `_create_drawables` (line 501)",
                "Method `_draw_line_numbers` (line 541)",
                "Method `_paint_line_number_bg` (line 552)",
                "Method `format` (line 569)"
            ],
            "lineno": 235
        },
        {
            "type": "class",
            "name": "GifImageFormatter",
            "methods": null,
            "lineno": 606
        },
        {
            "type": "class",
            "name": "JpgImageFormatter",
            "methods": null,
            "lineno": 620
        },
        {
            "type": "class",
            "name": "BmpImageFormatter",
            "methods": null,
            "lineno": 634
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "font_name",
                "font_size"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "_get_nix_font_path",
            "args": [
                "self",
                "name",
                "style"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "_create_nix",
            "args": [
                "self"
            ],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "_get_mac_font_path",
            "args": [
                "self",
                "font_map",
                "name",
                "style"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "_create_mac",
            "args": [
                "self"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "_lookup_win",
            "args": [
                "self",
                "key",
                "basename",
                "styles",
                "fail"
            ],
            "lineno": 151
        },
        {
            "type": "function",
            "name": "_create_win",
            "args": [
                "self"
            ],
            "lineno": 166
        },
        {
            "type": "function",
            "name": "get_char_size",
            "args": [
                "self"
            ],
            "lineno": 205
        },
        {
            "type": "function",
            "name": "get_text_size",
            "args": [
                "self",
                "text"
            ],
            "lineno": 211
        },
        {
            "type": "function",
            "name": "get_font",
            "args": [
                "self",
                "bold",
                "oblique"
            ],
            "lineno": 221
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 353
        },
        {
            "type": "function",
            "name": "get_style_defs",
            "args": [
                "self",
                "arg"
            ],
            "lineno": 409
        },
        {
            "type": "function",
            "name": "_get_line_height",
            "args": [
                "self"
            ],
            "lineno": 413
        },
        {
            "type": "function",
            "name": "_get_line_y",
            "args": [
                "self",
                "lineno"
            ],
            "lineno": 419
        },
        {
            "type": "function",
            "name": "_get_char_width",
            "args": [
                "self"
            ],
            "lineno": 425
        },
        {
            "type": "function",
            "name": "_get_char_x",
            "args": [
                "self",
                "linelength"
            ],
            "lineno": 431
        },
        {
            "type": "function",
            "name": "_get_text_pos",
            "args": [
                "self",
                "linelength",
                "lineno"
            ],
            "lineno": 437
        },
        {
            "type": "function",
            "name": "_get_linenumber_pos",
            "args": [
                "self",
                "lineno"
            ],
            "lineno": 443
        },
        {
            "type": "function",
            "name": "_get_text_color",
            "args": [
                "self",
                "style"
            ],
            "lineno": 449
        },
        {
            "type": "function",
            "name": "_get_text_bg_color",
            "args": [
                "self",
                "style"
            ],
            "lineno": 459
        },
        {
            "type": "function",
            "name": "_get_style_font",
            "args": [
                "self",
                "style"
            ],
            "lineno": 469
        },
        {
            "type": "function",
            "name": "_get_image_size",
            "args": [
                "self",
                "maxlinelength",
                "maxlineno"
            ],
            "lineno": 475
        },
        {
            "type": "function",
            "name": "_draw_linenumber",
            "args": [
                "self",
                "posno",
                "lineno"
            ],
            "lineno": 482
        },
        {
            "type": "function",
            "name": "_draw_text",
            "args": [
                "self",
                "pos",
                "text",
                "font",
                "text_fg",
                "text_bg"
            ],
            "lineno": 495
        },
        {
            "type": "function",
            "name": "_create_drawables",
            "args": [
                "self",
                "tokensource"
            ],
            "lineno": 501
        },
        {
            "type": "function",
            "name": "_draw_line_numbers",
            "args": [
                "self"
            ],
            "lineno": 541
        },
        {
            "type": "function",
            "name": "_paint_line_number_bg",
            "args": [
                "self",
                "im"
            ],
            "lineno": 552
        },
        {
            "type": "function",
            "name": "format",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 569
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatters/irc.py": [
        {
            "type": "function",
            "name": "ircformat",
            "args": [
                "color",
                "text"
            ],
            "lineno": 76
        },
        {
            "type": "class",
            "name": "IRCFormatter",
            "methods": [
                "Method `__init__` (line 122)",
                "Method `_write_lineno` (line 130)",
                "Method `format_unencoded` (line 135)"
            ],
            "lineno": 97
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 122
        },
        {
            "type": "function",
            "name": "_write_lineno",
            "args": [
                "self",
                "outfile"
            ],
            "lineno": 130
        },
        {
            "type": "function",
            "name": "format_unencoded",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 135
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatters/latex.py": [
        {
            "type": "function",
            "name": "escape_tex",
            "args": [
                "text",
                "commandprefix"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "_get_ttype_name",
            "args": [
                "ttype"
            ],
            "lineno": 135
        },
        {
            "type": "class",
            "name": "LatexFormatter",
            "methods": [
                "Method `__init__` (line 256)",
                "Method `_create_stylesheet` (line 279)",
                "Method `get_style_defs` (line 324)",
                "Method `format_unencoded` (line 336)"
            ],
            "lineno": 147
        },
        {
            "type": "class",
            "name": "LatexEmbeddedLexer",
            "methods": [
                "Method `__init__` (line 451)",
                "Method `get_tokens_unprocessed` (line 457)",
                "Method `_find_safe_escape_tokens` (line 476)",
                "Method `_filter_to` (line 488)",
                "Method `_find_escape_tokens` (line 505)"
            ],
            "lineno": 440
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 256
        },
        {
            "type": "function",
            "name": "_create_stylesheet",
            "args": [
                "self"
            ],
            "lineno": 279
        },
        {
            "type": "function",
            "name": "get_style_defs",
            "args": [
                "self",
                "arg"
            ],
            "lineno": 324
        },
        {
            "type": "function",
            "name": "format_unencoded",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 336
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "left",
                "right",
                "lang",
                "**options"
            ],
            "lineno": 451
        },
        {
            "type": "function",
            "name": "get_tokens_unprocessed",
            "args": [
                "self",
                "text"
            ],
            "lineno": 457
        },
        {
            "type": "function",
            "name": "_find_safe_escape_tokens",
            "args": [
                "self",
                "text"
            ],
            "lineno": 476
        },
        {
            "type": "function",
            "name": "_filter_to",
            "args": [
                "self",
                "it",
                "pred"
            ],
            "lineno": 488
        },
        {
            "type": "function",
            "name": "_find_escape_tokens",
            "args": [
                "self",
                "text"
            ],
            "lineno": 505
        },
        {
            "type": "function",
            "name": "rgbcolor",
            "args": [
                "col"
            ],
            "lineno": 284
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatters/other.py": [
        {
            "type": "class",
            "name": "NullFormatter",
            "methods": [
                "Method `format` (line 27)"
            ],
            "lineno": 19
        },
        {
            "type": "class",
            "name": "RawTokenFormatter",
            "methods": [
                "Method `__init__` (line 62)",
                "Method `format` (line 80)"
            ],
            "lineno": 36
        },
        {
            "type": "class",
            "name": "TestcaseFormatter",
            "methods": [
                "Method `__init__` (line 139)",
                "Method `format` (line 144)"
            ],
            "lineno": 130
        },
        {
            "type": "function",
            "name": "format",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "format",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 139
        },
        {
            "type": "function",
            "name": "format",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 144
        },
        {
            "type": "function",
            "name": "write",
            "args": [
                "text"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "flush",
            "args": [],
            "lineno": 99
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatters/pangomarkup.py": [
        {
            "type": "function",
            "name": "escape_special_chars",
            "args": [
                "text",
                "table"
            ],
            "lineno": 23
        },
        {
            "type": "class",
            "name": "PangoMarkupFormatter",
            "methods": [
                "Method `__init__` (line 39)",
                "Method `format_unencoded` (line 61)"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "format_unencoded",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 61
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatters/rtf.py": [
        {
            "type": "class",
            "name": "RtfFormatter",
            "methods": [
                "Method `__init__` (line 50)",
                "Method `_escape` (line 66)",
                "Method `_escape_text` (line 71)",
                "Method `format_unencoded` (line 95)"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "_escape",
            "args": [
                "self",
                "text"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "_escape_text",
            "args": [
                "self",
                "text"
            ],
            "lineno": 71
        },
        {
            "type": "function",
            "name": "format_unencoded",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 95
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatters/svg.py": [
        {
            "type": "function",
            "name": "escape_html",
            "args": [
                "text"
            ],
            "lineno": 18
        },
        {
            "type": "class",
            "name": "SvgFormatter",
            "methods": [
                "Method `__init__` (line 93)",
                "Method `format_unencoded` (line 114)",
                "Method `_get_style` (line 173)"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 93
        },
        {
            "type": "function",
            "name": "format_unencoded",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 114
        },
        {
            "type": "function",
            "name": "_get_style",
            "args": [
                "self",
                "tokentype"
            ],
            "lineno": 173
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatters/terminal.py": [
        {
            "type": "class",
            "name": "TerminalFormatter",
            "methods": [
                "Method `__init__` (line 83)",
                "Method `format` (line 91)",
                "Method `_write_lineno` (line 94)",
                "Method `_get_color` (line 98)",
                "Method `format_unencoded` (line 108)"
            ],
            "lineno": 56
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 83
        },
        {
            "type": "function",
            "name": "format",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "_write_lineno",
            "args": [
                "self",
                "outfile"
            ],
            "lineno": 94
        },
        {
            "type": "function",
            "name": "_get_color",
            "args": [
                "self",
                "ttype"
            ],
            "lineno": 98
        },
        {
            "type": "function",
            "name": "format_unencoded",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 108
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatters/terminal256.py": [
        {
            "type": "class",
            "name": "EscapeSequence",
            "methods": [
                "Method `__init__` (line 35)",
                "Method `escape` (line 42)",
                "Method `color_string` (line 47)",
                "Method `true_color_string` (line 73)",
                "Method `reset_string` (line 87)"
            ],
            "lineno": 34
        },
        {
            "type": "class",
            "name": "Terminal256Formatter",
            "methods": [
                "Method `__init__` (line 135)",
                "Method `_build_color_table` (line 152)",
                "Method `_closest_color` (line 188)",
                "Method `_color_index` (line 205)",
                "Method `_setup_styles` (line 224)",
                "Method `_write_lineno` (line 245)",
                "Method `format` (line 249)",
                "Method `format_unencoded` (line 252)"
            ],
            "lineno": 98
        },
        {
            "type": "class",
            "name": "TerminalTrueColorFormatter",
            "methods": [
                "Method `_build_color_table` (line 311)",
                "Method `_color_tuple` (line 314)",
                "Method `_setup_styles` (line 324)"
            ],
            "lineno": 293
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "fg",
                "bg",
                "bold",
                "underline",
                "italic"
            ],
            "lineno": 35
        },
        {
            "type": "function",
            "name": "escape",
            "args": [
                "self",
                "attrs"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "color_string",
            "args": [
                "self"
            ],
            "lineno": 47
        },
        {
            "type": "function",
            "name": "true_color_string",
            "args": [
                "self"
            ],
            "lineno": 73
        },
        {
            "type": "function",
            "name": "reset_string",
            "args": [
                "self"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "_build_color_table",
            "args": [
                "self"
            ],
            "lineno": 152
        },
        {
            "type": "function",
            "name": "_closest_color",
            "args": [
                "self",
                "r",
                "g",
                "b"
            ],
            "lineno": 188
        },
        {
            "type": "function",
            "name": "_color_index",
            "args": [
                "self",
                "color"
            ],
            "lineno": 205
        },
        {
            "type": "function",
            "name": "_setup_styles",
            "args": [
                "self"
            ],
            "lineno": 224
        },
        {
            "type": "function",
            "name": "_write_lineno",
            "args": [
                "self",
                "outfile"
            ],
            "lineno": 245
        },
        {
            "type": "function",
            "name": "format",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 249
        },
        {
            "type": "function",
            "name": "format_unencoded",
            "args": [
                "self",
                "tokensource",
                "outfile"
            ],
            "lineno": 252
        },
        {
            "type": "function",
            "name": "_build_color_table",
            "args": [
                "self"
            ],
            "lineno": 311
        },
        {
            "type": "function",
            "name": "_color_tuple",
            "args": [
                "self",
                "color"
            ],
            "lineno": 314
        },
        {
            "type": "function",
            "name": "_setup_styles",
            "args": [
                "self"
            ],
            "lineno": 324
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatters/_mapping.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/formatters/__init__.py": [
        {
            "type": "function",
            "name": "_fn_matches",
            "args": [
                "fn",
                "glob"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "_load_formatters",
            "args": [
                "module_name"
            ],
            "lineno": 36
        },
        {
            "type": "function",
            "name": "get_all_formatters",
            "args": [],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "find_formatter_class",
            "args": [
                "alias"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "get_formatter_by_name",
            "args": [
                "_alias",
                "**options"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "load_formatter_from_file",
            "args": [
                "filename",
                "formattername",
                "**options"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "get_formatter_for_filename",
            "args": [
                "fn",
                "**options"
            ],
            "lineno": 119
        },
        {
            "type": "class",
            "name": "_automodule",
            "methods": [
                "Method `__getattr__` (line 144)"
            ],
            "lineno": 141
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 144
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/lexers/python.py": [
        {
            "type": "class",
            "name": "PythonLexer",
            "methods": [
                "Method `innerstring_rules` (line 67)",
                "Method `fstring_rules` (line 87)",
                "Method `analyse_text` (line 409)"
            ],
            "lineno": 26
        },
        {
            "type": "class",
            "name": "Python2Lexer",
            "methods": [
                "Method `innerstring_rules` (line 433)",
                "Method `analyse_text` (line 635)"
            ],
            "lineno": 417
        },
        {
            "type": "class",
            "name": "_PythonConsoleLexerBase",
            "methods": null,
            "lineno": 638
        },
        {
            "type": "class",
            "name": "PythonConsoleLexer",
            "methods": [
                "Method `__init__` (line 702)"
            ],
            "lineno": 674
        },
        {
            "type": "class",
            "name": "PythonTracebackLexer",
            "methods": null,
            "lineno": 720
        },
        {
            "type": "class",
            "name": "Python2TracebackLexer",
            "methods": null,
            "lineno": 777
        },
        {
            "type": "class",
            "name": "CythonLexer",
            "methods": null,
            "lineno": 825
        },
        {
            "type": "class",
            "name": "DgLexer",
            "methods": null,
            "lineno": 1005
        },
        {
            "type": "class",
            "name": "NumPyLexer",
            "methods": [
                "Method `get_tokens_unprocessed` (line 1186)",
                "Method `analyse_text` (line 1194)"
            ],
            "lineno": 1104
        },
        {
            "type": "function",
            "name": "innerstring_rules",
            "args": [
                "ttype"
            ],
            "lineno": 67
        },
        {
            "type": "function",
            "name": "fstring_rules",
            "args": [
                "ttype"
            ],
            "lineno": 87
        },
        {
            "type": "function",
            "name": "analyse_text",
            "args": [
                "text"
            ],
            "lineno": 409
        },
        {
            "type": "function",
            "name": "innerstring_rules",
            "args": [
                "ttype"
            ],
            "lineno": 433
        },
        {
            "type": "function",
            "name": "analyse_text",
            "args": [
                "text"
            ],
            "lineno": 635
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 702
        },
        {
            "type": "function",
            "name": "get_tokens_unprocessed",
            "args": [
                "self",
                "text"
            ],
            "lineno": 1186
        },
        {
            "type": "function",
            "name": "analyse_text",
            "args": [
                "text"
            ],
            "lineno": 1194
        },
        {
            "type": "class",
            "name": "_ReplaceInnerCode",
            "methods": [
                "Method `__init__` (line 716)"
            ],
            "lineno": 715
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "**options"
            ],
            "lineno": 716
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/lexers/_mapping.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/lexers/__init__.py": [
        {
            "type": "function",
            "name": "_fn_matches",
            "args": [
                "fn",
                "glob"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "_load_lexers",
            "args": [
                "module_name"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "get_all_lexers",
            "args": [
                "plugins"
            ],
            "lineno": 50
        },
        {
            "type": "function",
            "name": "find_lexer_class",
            "args": [
                "name"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "find_lexer_class_by_name",
            "args": [
                "_alias"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "get_lexer_by_name",
            "args": [
                "_alias",
                "**options"
            ],
            "lineno": 109
        },
        {
            "type": "function",
            "name": "load_lexer_from_file",
            "args": [
                "filename",
                "lexername",
                "**options"
            ],
            "lineno": 134
        },
        {
            "type": "function",
            "name": "find_lexer_class_for_filename",
            "args": [
                "_fn",
                "code"
            ],
            "lineno": 169
        },
        {
            "type": "function",
            "name": "get_lexer_for_filename",
            "args": [
                "_fn",
                "code",
                "**options"
            ],
            "lineno": 212
        },
        {
            "type": "function",
            "name": "get_lexer_for_mimetype",
            "args": [
                "_mime",
                "**options"
            ],
            "lineno": 231
        },
        {
            "type": "function",
            "name": "_iter_lexerclasses",
            "args": [
                "plugins"
            ],
            "lineno": 250
        },
        {
            "type": "function",
            "name": "guess_lexer_for_filename",
            "args": [
                "_fn",
                "_text",
                "**options"
            ],
            "lineno": 261
        },
        {
            "type": "function",
            "name": "guess_lexer",
            "args": [
                "_text",
                "**options"
            ],
            "lineno": 304
        },
        {
            "type": "class",
            "name": "_automodule",
            "methods": [
                "Method `__getattr__` (line 346)"
            ],
            "lineno": 343
        },
        {
            "type": "function",
            "name": "get_rating",
            "args": [
                "info"
            ],
            "lineno": 194
        },
        {
            "type": "function",
            "name": "type_sort",
            "args": [
                "t"
            ],
            "lineno": 292
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 346
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pygments/styles/__init__.py": [
        {
            "type": "function",
            "name": "get_style_by_name",
            "args": [
                "name"
            ],
            "lineno": 68
        },
        {
            "type": "function",
            "name": "get_all_styles",
            "args": [],
            "lineno": 99
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyparsing/diagram/__init__.py": [
        {
            "type": "class",
            "name": "EachItem",
            "methods": [
                "Method `__init__` (line 80)"
            ],
            "lineno": 69
        },
        {
            "type": "class",
            "name": "AnnotatedItem",
            "methods": [
                "Method `__init__` (line 91)"
            ],
            "lineno": 86
        },
        {
            "type": "class",
            "name": "EditablePartial",
            "methods": [
                "Method `__init__` (line 104)",
                "Method `from_call` (line 110)",
                "Method `name` (line 118)",
                "Method `__call__` (line 121)"
            ],
            "lineno": 95
        },
        {
            "type": "function",
            "name": "railroad_to_html",
            "args": [
                "diagrams",
                "embed",
                "**kwargs"
            ],
            "lineno": 137
        },
        {
            "type": "function",
            "name": "resolve_partial",
            "args": [
                "partial"
            ],
            "lineno": 160
        },
        {
            "type": "function",
            "name": "to_railroad",
            "args": [
                "element",
                "diagram_kwargs",
                "vertical",
                "show_results_names",
                "show_groups"
            ],
            "lineno": 176
        },
        {
            "type": "function",
            "name": "_should_vertical",
            "args": [
                "specification",
                "exprs"
            ],
            "lineno": 234
        },
        {
            "type": "class",
            "name": "ElementState",
            "methods": [
                "Method `__init__` (line 252)",
                "Method `mark_for_extraction` (line 278)"
            ],
            "lineno": 246
        },
        {
            "type": "class",
            "name": "ConverterState",
            "methods": [
                "Method `__init__` (line 313)",
                "Method `__setitem__` (line 326)",
                "Method `__getitem__` (line 329)",
                "Method `__delitem__` (line 332)",
                "Method `__contains__` (line 335)",
                "Method `generate_unnamed` (line 338)",
                "Method `generate_index` (line 345)",
                "Method `extract_into_diagram` (line 352)"
            ],
            "lineno": 308
        },
        {
            "type": "function",
            "name": "_worth_extracting",
            "args": [
                "element"
            ],
            "lineno": 386
        },
        {
            "type": "function",
            "name": "_apply_diagram_item_enhancements",
            "args": [
                "fn"
            ],
            "lineno": 395
        },
        {
            "type": "function",
            "name": "_visible_exprs",
            "args": [
                "exprs"
            ],
            "lineno": 438
        },
        {
            "type": "function",
            "name": "_to_diagram_element",
            "args": [
                "element",
                "parent",
                "lookup",
                "vertical",
                "index",
                "name_hint",
                "show_results_names",
                "show_groups"
            ],
            "lineno": 452
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*items"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "label",
                "item"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "func",
                "args",
                "kwargs"
            ],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "from_call",
            "args": [
                "cls",
                "func",
                "*args",
                "**kwargs"
            ],
            "lineno": 110
        },
        {
            "type": "function",
            "name": "name",
            "args": [
                "self"
            ],
            "lineno": 118
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self"
            ],
            "lineno": 121
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "element",
                "converted",
                "parent",
                "number",
                "name",
                "parent_index"
            ],
            "lineno": 252
        },
        {
            "type": "function",
            "name": "mark_for_extraction",
            "args": [
                "self",
                "el_id",
                "state",
                "name",
                "force"
            ],
            "lineno": 278
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "diagram_kwargs"
            ],
            "lineno": 313
        },
        {
            "type": "function",
            "name": "__setitem__",
            "args": [
                "self",
                "key",
                "value"
            ],
            "lineno": 326
        },
        {
            "type": "function",
            "name": "__getitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 329
        },
        {
            "type": "function",
            "name": "__delitem__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 332
        },
        {
            "type": "function",
            "name": "__contains__",
            "args": [
                "self",
                "key"
            ],
            "lineno": 335
        },
        {
            "type": "function",
            "name": "generate_unnamed",
            "args": [
                "self"
            ],
            "lineno": 338
        },
        {
            "type": "function",
            "name": "generate_index",
            "args": [
                "self"
            ],
            "lineno": 345
        },
        {
            "type": "function",
            "name": "extract_into_diagram",
            "args": [
                "self",
                "el_id"
            ],
            "lineno": 352
        },
        {
            "type": "function",
            "name": "_inner",
            "args": [
                "element",
                "parent",
                "lookup",
                "vertical",
                "index",
                "name_hint",
                "show_results_names",
                "show_groups"
            ],
            "lineno": 402
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py": [
        {
            "type": "function",
            "name": "write_json",
            "args": [
                "obj",
                "path",
                "**kwargs"
            ],
            "lineno": 30
        },
        {
            "type": "function",
            "name": "read_json",
            "args": [
                "path"
            ],
            "lineno": 35
        },
        {
            "type": "class",
            "name": "BackendUnavailable",
            "methods": [
                "Method `__init__` (line 42)"
            ],
            "lineno": 40
        },
        {
            "type": "class",
            "name": "BackendInvalid",
            "methods": [
                "Method `__init__` (line 48)"
            ],
            "lineno": 46
        },
        {
            "type": "class",
            "name": "HookMissing",
            "methods": [
                "Method `__init__` (line 54)"
            ],
            "lineno": 52
        },
        {
            "type": "function",
            "name": "contained_in",
            "args": [
                "filename",
                "directory"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "_build_backend",
            "args": [],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "_supported_features",
            "args": [],
            "lineno": 94
        },
        {
            "type": "function",
            "name": "get_requires_for_build_wheel",
            "args": [
                "config_settings"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "get_requires_for_build_editable",
            "args": [
                "config_settings"
            ],
            "lineno": 121
        },
        {
            "type": "function",
            "name": "prepare_metadata_for_build_wheel",
            "args": [
                "metadata_directory",
                "config_settings",
                "_allow_fallback"
            ],
            "lineno": 135
        },
        {
            "type": "function",
            "name": "prepare_metadata_for_build_editable",
            "args": [
                "metadata_directory",
                "config_settings",
                "_allow_fallback"
            ],
            "lineno": 157
        },
        {
            "type": "function",
            "name": "_dist_info_files",
            "args": [
                "whl_zip"
            ],
            "lineno": 187
        },
        {
            "type": "function",
            "name": "_get_wheel_metadata_from_wheel",
            "args": [
                "whl_basename",
                "metadata_directory",
                "config_settings"
            ],
            "lineno": 199
        },
        {
            "type": "function",
            "name": "_find_already_built_wheel",
            "args": [
                "metadata_directory"
            ],
            "lineno": 217
        },
        {
            "type": "function",
            "name": "build_wheel",
            "args": [
                "wheel_directory",
                "config_settings",
                "metadata_directory"
            ],
            "lineno": 239
        },
        {
            "type": "function",
            "name": "build_editable",
            "args": [
                "wheel_directory",
                "config_settings",
                "metadata_directory"
            ],
            "lineno": 255
        },
        {
            "type": "function",
            "name": "get_requires_for_build_sdist",
            "args": [
                "config_settings"
            ],
            "lineno": 276
        },
        {
            "type": "class",
            "name": "_DummyException",
            "methods": null,
            "lineno": 290
        },
        {
            "type": "class",
            "name": "GotUnsupportedOperation",
            "methods": [
                "Method `__init__` (line 296)"
            ],
            "lineno": 294
        },
        {
            "type": "function",
            "name": "build_sdist",
            "args": [
                "sdist_directory",
                "config_settings"
            ],
            "lineno": 300
        },
        {
            "type": "function",
            "name": "main",
            "args": [],
            "lineno": 322
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "traceback"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "message"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "hook_name"
            ],
            "lineno": 54
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "traceback"
            ],
            "lineno": 296
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/pyproject_hooks/_in_process/__init__.py": [
        {
            "type": "function",
            "name": "_in_proc_script_path",
            "args": [],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "_in_proc_script_path",
            "args": [],
            "lineno": 13
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/resolvelib/compat/collections_abc.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/resolvelib/compat/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/contrib/appengine.py": [
        {
            "type": "class",
            "name": "AppEnginePlatformWarning",
            "methods": null,
            "lineno": 71
        },
        {
            "type": "class",
            "name": "AppEnginePlatformError",
            "methods": null,
            "lineno": 75
        },
        {
            "type": "class",
            "name": "AppEngineManager",
            "methods": [
                "Method `__init__` (line 99)",
                "Method `__enter__` (line 124)",
                "Method `__exit__` (line 127)",
                "Method `urlopen` (line 131)",
                "Method `_urlfetch_response_to_http_response` (line 245)",
                "Method `_get_absolute_timeout` (line 281)",
                "Method `_get_retries` (line 294)"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "headers",
                "retries",
                "validate_certificate",
                "urlfetch_retries"
            ],
            "lineno": 99
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 124
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "exc_type",
                "exc_val",
                "exc_tb"
            ],
            "lineno": 127
        },
        {
            "type": "function",
            "name": "urlopen",
            "args": [
                "self",
                "method",
                "url",
                "body",
                "headers",
                "retries",
                "redirect",
                "timeout",
                "**response_kw"
            ],
            "lineno": 131
        },
        {
            "type": "function",
            "name": "_urlfetch_response_to_http_response",
            "args": [
                "self",
                "urlfetch_resp",
                "**response_kw"
            ],
            "lineno": 245
        },
        {
            "type": "function",
            "name": "_get_absolute_timeout",
            "args": [
                "self",
                "timeout"
            ],
            "lineno": 281
        },
        {
            "type": "function",
            "name": "_get_retries",
            "args": [
                "self",
                "retries",
                "redirect"
            ],
            "lineno": 294
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/contrib/ntlmpool.py": [
        {
            "type": "class",
            "name": "NTLMConnectionPool",
            "methods": [
                "Method `__init__` (line 34)",
                "Method `_new_conn` (line 48)",
                "Method `urlopen` (line 115)"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "user",
                "pw",
                "authurl",
                "*args",
                "**kwargs"
            ],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "_new_conn",
            "args": [
                "self"
            ],
            "lineno": 48
        },
        {
            "type": "function",
            "name": "urlopen",
            "args": [
                "self",
                "method",
                "url",
                "body",
                "headers",
                "retries",
                "redirect",
                "assert_same_host"
            ],
            "lineno": 115
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/contrib/pyopenssl.py": [
        {
            "type": "function",
            "name": "inject_into_urllib3",
            "args": [],
            "lineno": 130
        },
        {
            "type": "function",
            "name": "extract_from_urllib3",
            "args": [],
            "lineno": 143
        },
        {
            "type": "function",
            "name": "_validate_dependencies_met",
            "args": [],
            "lineno": 154
        },
        {
            "type": "function",
            "name": "_dnsname_to_stdlib",
            "args": [
                "name"
            ],
            "lineno": 180
        },
        {
            "type": "function",
            "name": "get_subj_alt_name",
            "args": [
                "peer_cert"
            ],
            "lineno": 223
        },
        {
            "type": "class",
            "name": "WrappedSocket",
            "methods": [
                "Method `__init__` (line 283)",
                "Method `fileno` (line 290)",
                "Method `_decref_socketios` (line 294)",
                "Method `recv` (line 300)",
                "Method `recv_into` (line 325)",
                "Method `settimeout` (line 348)",
                "Method `_send_until_done` (line 351)",
                "Method `sendall` (line 362)",
                "Method `shutdown` (line 370)",
                "Method `close` (line 374)",
                "Method `getpeercert` (line 384)",
                "Method `version` (line 398)",
                "Method `_reuse` (line 401)",
                "Method `_drop` (line 404)"
            ],
            "lineno": 276
        },
        {
            "type": "class",
            "name": "PyOpenSSLContext",
            "methods": [
                "Method `__init__` (line 430)",
                "Method `options` (line 437)",
                "Method `options` (line 441)",
                "Method `verify_mode` (line 446)",
                "Method `verify_mode` (line 450)",
                "Method `set_default_verify_paths` (line 453)",
                "Method `set_ciphers` (line 456)",
                "Method `load_verify_locations` (line 461)",
                "Method `load_cert_chain` (line 473)",
                "Method `set_alpn_protocols` (line 481)",
                "Method `wrap_socket` (line 485)"
            ],
            "lineno": 423
        },
        {
            "type": "function",
            "name": "_verify_callback",
            "args": [
                "cnx",
                "x509",
                "err_no",
                "err_depth",
                "return_code"
            ],
            "lineno": 517
        },
        {
            "type": "function",
            "name": "idna_encode",
            "args": [
                "name"
            ],
            "lineno": 194
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "connection",
                "socket",
                "suppress_ragged_eofs"
            ],
            "lineno": 283
        },
        {
            "type": "function",
            "name": "fileno",
            "args": [
                "self"
            ],
            "lineno": 290
        },
        {
            "type": "function",
            "name": "_decref_socketios",
            "args": [
                "self"
            ],
            "lineno": 294
        },
        {
            "type": "function",
            "name": "recv",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 300
        },
        {
            "type": "function",
            "name": "recv_into",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 325
        },
        {
            "type": "function",
            "name": "settimeout",
            "args": [
                "self",
                "timeout"
            ],
            "lineno": 348
        },
        {
            "type": "function",
            "name": "_send_until_done",
            "args": [
                "self",
                "data"
            ],
            "lineno": 351
        },
        {
            "type": "function",
            "name": "sendall",
            "args": [
                "self",
                "data"
            ],
            "lineno": 362
        },
        {
            "type": "function",
            "name": "shutdown",
            "args": [
                "self"
            ],
            "lineno": 370
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 374
        },
        {
            "type": "function",
            "name": "getpeercert",
            "args": [
                "self",
                "binary_form"
            ],
            "lineno": 384
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "self"
            ],
            "lineno": 398
        },
        {
            "type": "function",
            "name": "_reuse",
            "args": [
                "self"
            ],
            "lineno": 401
        },
        {
            "type": "function",
            "name": "_drop",
            "args": [
                "self"
            ],
            "lineno": 404
        },
        {
            "type": "function",
            "name": "makefile",
            "args": [
                "self",
                "mode",
                "bufsize"
            ],
            "lineno": 413
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "protocol"
            ],
            "lineno": 430
        },
        {
            "type": "function",
            "name": "options",
            "args": [
                "self"
            ],
            "lineno": 437
        },
        {
            "type": "function",
            "name": "options",
            "args": [
                "self",
                "value"
            ],
            "lineno": 441
        },
        {
            "type": "function",
            "name": "verify_mode",
            "args": [
                "self"
            ],
            "lineno": 446
        },
        {
            "type": "function",
            "name": "verify_mode",
            "args": [
                "self",
                "value"
            ],
            "lineno": 450
        },
        {
            "type": "function",
            "name": "set_default_verify_paths",
            "args": [
                "self"
            ],
            "lineno": 453
        },
        {
            "type": "function",
            "name": "set_ciphers",
            "args": [
                "self",
                "ciphers"
            ],
            "lineno": 456
        },
        {
            "type": "function",
            "name": "load_verify_locations",
            "args": [
                "self",
                "cafile",
                "capath",
                "cadata"
            ],
            "lineno": 461
        },
        {
            "type": "function",
            "name": "load_cert_chain",
            "args": [
                "self",
                "certfile",
                "keyfile",
                "password"
            ],
            "lineno": 473
        },
        {
            "type": "function",
            "name": "set_alpn_protocols",
            "args": [
                "self",
                "protocols"
            ],
            "lineno": 481
        },
        {
            "type": "function",
            "name": "wrap_socket",
            "args": [
                "self",
                "sock",
                "server_side",
                "do_handshake_on_connect",
                "suppress_ragged_eofs",
                "server_hostname"
            ],
            "lineno": 485
        },
        {
            "type": "class",
            "name": "UnsupportedExtension",
            "methods": null,
            "lineno": 59
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/contrib/securetransport.py": [
        {
            "type": "function",
            "name": "inject_into_urllib3",
            "args": [],
            "lineno": 189
        },
        {
            "type": "function",
            "name": "extract_from_urllib3",
            "args": [],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "_read_callback",
            "args": [
                "connection_id",
                "data_buffer",
                "data_length_pointer"
            ],
            "lineno": 213
        },
        {
            "type": "function",
            "name": "_write_callback",
            "args": [
                "connection_id",
                "data_buffer",
                "data_length_pointer"
            ],
            "lineno": 268
        },
        {
            "type": "class",
            "name": "WrappedSocket",
            "methods": [
                "Method `__init__` (line 334)",
                "Method `_raise_on_error` (line 353)",
                "Method `_set_ciphers` (line 373)",
                "Method `_set_alpn_protocols` (line 386)",
                "Method `_custom_validate` (line 399)",
                "Method `_evaluate_trust` (line 434)",
                "Method `handshake` (line 474)",
                "Method `fileno` (line 567)",
                "Method `_decref_socketios` (line 571)",
                "Method `recv` (line 577)",
                "Method `recv_into` (line 583)",
                "Method `settimeout` (line 626)",
                "Method `gettimeout` (line 629)",
                "Method `send` (line 632)",
                "Method `sendall` (line 649)",
                "Method `shutdown` (line 655)",
                "Method `close` (line 659)",
                "Method `getpeercert` (line 678)",
                "Method `version` (line 736)",
                "Method `_reuse` (line 757)",
                "Method `_drop` (line 760)"
            ],
            "lineno": 326
        },
        {
            "type": "class",
            "name": "SecureTransportContext",
            "methods": [
                "Method `__init__` (line 792)",
                "Method `check_hostname` (line 803)",
                "Method `check_hostname` (line 811)",
                "Method `options` (line 819)",
                "Method `options` (line 829)",
                "Method `verify_mode` (line 834)",
                "Method `verify_mode` (line 838)",
                "Method `set_default_verify_paths` (line 841)",
                "Method `load_default_certs` (line 853)",
                "Method `set_ciphers` (line 856)",
                "Method `load_verify_locations` (line 861)",
                "Method `load_cert_chain` (line 873)",
                "Method `set_alpn_protocols` (line 878)",
                "Method `wrap_socket` (line 890)"
            ],
            "lineno": 785
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "socket"
            ],
            "lineno": 334
        },
        {
            "type": "function",
            "name": "_raise_on_error",
            "args": [
                "self"
            ],
            "lineno": 353
        },
        {
            "type": "function",
            "name": "_set_ciphers",
            "args": [
                "self"
            ],
            "lineno": 373
        },
        {
            "type": "function",
            "name": "_set_alpn_protocols",
            "args": [
                "self",
                "protocols"
            ],
            "lineno": 386
        },
        {
            "type": "function",
            "name": "_custom_validate",
            "args": [
                "self",
                "verify",
                "trust_bundle"
            ],
            "lineno": 399
        },
        {
            "type": "function",
            "name": "_evaluate_trust",
            "args": [
                "self",
                "trust_bundle"
            ],
            "lineno": 434
        },
        {
            "type": "function",
            "name": "handshake",
            "args": [
                "self",
                "server_hostname",
                "verify",
                "trust_bundle",
                "min_version",
                "max_version",
                "client_cert",
                "client_key",
                "client_key_passphrase",
                "alpn_protocols"
            ],
            "lineno": 474
        },
        {
            "type": "function",
            "name": "fileno",
            "args": [
                "self"
            ],
            "lineno": 567
        },
        {
            "type": "function",
            "name": "_decref_socketios",
            "args": [
                "self"
            ],
            "lineno": 571
        },
        {
            "type": "function",
            "name": "recv",
            "args": [
                "self",
                "bufsiz"
            ],
            "lineno": 577
        },
        {
            "type": "function",
            "name": "recv_into",
            "args": [
                "self",
                "buffer",
                "nbytes"
            ],
            "lineno": 583
        },
        {
            "type": "function",
            "name": "settimeout",
            "args": [
                "self",
                "timeout"
            ],
            "lineno": 626
        },
        {
            "type": "function",
            "name": "gettimeout",
            "args": [
                "self"
            ],
            "lineno": 629
        },
        {
            "type": "function",
            "name": "send",
            "args": [
                "self",
                "data"
            ],
            "lineno": 632
        },
        {
            "type": "function",
            "name": "sendall",
            "args": [
                "self",
                "data"
            ],
            "lineno": 649
        },
        {
            "type": "function",
            "name": "shutdown",
            "args": [
                "self"
            ],
            "lineno": 655
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 659
        },
        {
            "type": "function",
            "name": "getpeercert",
            "args": [
                "self",
                "binary_form"
            ],
            "lineno": 678
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "self"
            ],
            "lineno": 736
        },
        {
            "type": "function",
            "name": "_reuse",
            "args": [
                "self"
            ],
            "lineno": 757
        },
        {
            "type": "function",
            "name": "_drop",
            "args": [
                "self"
            ],
            "lineno": 760
        },
        {
            "type": "function",
            "name": "makefile",
            "args": [
                "self",
                "mode",
                "bufsize"
            ],
            "lineno": 769
        },
        {
            "type": "function",
            "name": "makefile",
            "args": [
                "self",
                "mode",
                "buffering",
                "*args",
                "**kwargs"
            ],
            "lineno": 775
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "protocol"
            ],
            "lineno": 792
        },
        {
            "type": "function",
            "name": "check_hostname",
            "args": [
                "self"
            ],
            "lineno": 803
        },
        {
            "type": "function",
            "name": "check_hostname",
            "args": [
                "self",
                "value"
            ],
            "lineno": 811
        },
        {
            "type": "function",
            "name": "options",
            "args": [
                "self"
            ],
            "lineno": 819
        },
        {
            "type": "function",
            "name": "options",
            "args": [
                "self",
                "value"
            ],
            "lineno": 829
        },
        {
            "type": "function",
            "name": "verify_mode",
            "args": [
                "self"
            ],
            "lineno": 834
        },
        {
            "type": "function",
            "name": "verify_mode",
            "args": [
                "self",
                "value"
            ],
            "lineno": 838
        },
        {
            "type": "function",
            "name": "set_default_verify_paths",
            "args": [
                "self"
            ],
            "lineno": 841
        },
        {
            "type": "function",
            "name": "load_default_certs",
            "args": [
                "self"
            ],
            "lineno": 853
        },
        {
            "type": "function",
            "name": "set_ciphers",
            "args": [
                "self",
                "ciphers"
            ],
            "lineno": 856
        },
        {
            "type": "function",
            "name": "load_verify_locations",
            "args": [
                "self",
                "cafile",
                "capath",
                "cadata"
            ],
            "lineno": 861
        },
        {
            "type": "function",
            "name": "load_cert_chain",
            "args": [
                "self",
                "certfile",
                "keyfile",
                "password"
            ],
            "lineno": 873
        },
        {
            "type": "function",
            "name": "set_alpn_protocols",
            "args": [
                "self",
                "protocols"
            ],
            "lineno": 878
        },
        {
            "type": "function",
            "name": "wrap_socket",
            "args": [
                "self",
                "sock",
                "server_side",
                "do_handshake_on_connect",
                "suppress_ragged_eofs",
                "server_hostname"
            ],
            "lineno": 890
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/contrib/socks.py": [
        {
            "type": "class",
            "name": "SOCKSConnection",
            "methods": [
                "Method `__init__` (line 80)",
                "Method `_new_conn` (line 84)"
            ],
            "lineno": 75
        },
        {
            "type": "class",
            "name": "SOCKSHTTPSConnection",
            "methods": null,
            "lineno": 147
        },
        {
            "type": "class",
            "name": "SOCKSHTTPConnectionPool",
            "methods": null,
            "lineno": 151
        },
        {
            "type": "class",
            "name": "SOCKSHTTPSConnectionPool",
            "methods": null,
            "lineno": 155
        },
        {
            "type": "class",
            "name": "SOCKSProxyManager",
            "methods": [
                "Method `__init__` (line 170)"
            ],
            "lineno": 159
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "_new_conn",
            "args": [
                "self"
            ],
            "lineno": 84
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "proxy_url",
                "username",
                "password",
                "num_pools",
                "headers",
                "**connection_pool_kw"
            ],
            "lineno": 170
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/contrib/_appengine_environ.py": [
        {
            "type": "function",
            "name": "is_appengine",
            "args": [],
            "lineno": 8
        },
        {
            "type": "function",
            "name": "is_appengine_sandbox",
            "args": [],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "is_local_appengine",
            "args": [],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "is_prod_appengine",
            "args": [],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "is_prod_appengine_mvms",
            "args": [],
            "lineno": 34
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/contrib/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/packages/six.py": [
        {
            "type": "function",
            "name": "_add_doc",
            "args": [
                "func",
                "doc"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "_import_module",
            "args": [
                "name"
            ],
            "lineno": 85
        },
        {
            "type": "class",
            "name": "_LazyDescr",
            "methods": [
                "Method `__init__` (line 92)",
                "Method `__get__` (line 95)"
            ],
            "lineno": 91
        },
        {
            "type": "class",
            "name": "MovedModule",
            "methods": [
                "Method `__init__` (line 108)",
                "Method `_resolve` (line 117)",
                "Method `__getattr__` (line 120)"
            ],
            "lineno": 107
        },
        {
            "type": "class",
            "name": "_LazyModule",
            "methods": [
                "Method `__init__` (line 128)",
                "Method `__dir__` (line 132)"
            ],
            "lineno": 127
        },
        {
            "type": "class",
            "name": "MovedAttribute",
            "methods": [
                "Method `__init__` (line 142)",
                "Method `_resolve` (line 160)"
            ],
            "lineno": 141
        },
        {
            "type": "class",
            "name": "_SixMetaPathImporter",
            "methods": [
                "Method `__init__` (line 174)",
                "Method `_add_module` (line 178)",
                "Method `_get_module` (line 182)",
                "Method `find_module` (line 185)",
                "Method `find_spec` (line 190)",
                "Method `__get_module` (line 195)",
                "Method `load_module` (line 201)",
                "Method `is_package` (line 215)",
                "Method `get_code` (line 224)",
                "Method `create_module` (line 233)",
                "Method `exec_module` (line 236)"
            ],
            "lineno": 165
        },
        {
            "type": "class",
            "name": "_MovedItems",
            "methods": null,
            "lineno": 243
        },
        {
            "type": "class",
            "name": "Module_six_moves_urllib_parse",
            "methods": null,
            "lineno": 352
        },
        {
            "type": "class",
            "name": "Module_six_moves_urllib_error",
            "methods": null,
            "lineno": 399
        },
        {
            "type": "class",
            "name": "Module_six_moves_urllib_request",
            "methods": null,
            "lineno": 422
        },
        {
            "type": "class",
            "name": "Module_six_moves_urllib_response",
            "methods": null,
            "lineno": 477
        },
        {
            "type": "class",
            "name": "Module_six_moves_urllib_robotparser",
            "methods": null,
            "lineno": 501
        },
        {
            "type": "class",
            "name": "Module_six_moves_urllib",
            "methods": [
                "Method `__dir__` (line 535)"
            ],
            "lineno": 524
        },
        {
            "type": "function",
            "name": "add_move",
            "args": [
                "move"
            ],
            "lineno": 544
        },
        {
            "type": "function",
            "name": "remove_move",
            "args": [
                "name"
            ],
            "lineno": 549
        },
        {
            "type": "function",
            "name": "assertCountEqual",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 745
        },
        {
            "type": "function",
            "name": "assertRaisesRegex",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 749
        },
        {
            "type": "function",
            "name": "assertRegex",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 753
        },
        {
            "type": "function",
            "name": "assertNotRegex",
            "args": [
                "self",
                "*args",
                "**kwargs"
            ],
            "lineno": 757
        },
        {
            "type": "function",
            "name": "with_metaclass",
            "args": [
                "meta",
                "*bases"
            ],
            "lineno": 929
        },
        {
            "type": "function",
            "name": "add_metaclass",
            "args": [
                "metaclass"
            ],
            "lineno": 953
        },
        {
            "type": "function",
            "name": "ensure_binary",
            "args": [
                "s",
                "encoding",
                "errors"
            ],
            "lineno": 973
        },
        {
            "type": "function",
            "name": "ensure_str",
            "args": [
                "s",
                "encoding",
                "errors"
            ],
            "lineno": 991
        },
        {
            "type": "function",
            "name": "ensure_text",
            "args": [
                "s",
                "encoding",
                "errors"
            ],
            "lineno": 1014
        },
        {
            "type": "function",
            "name": "python_2_unicode_compatible",
            "args": [
                "klass"
            ],
            "lineno": 1033
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 92
        },
        {
            "type": "function",
            "name": "__get__",
            "args": [
                "self",
                "obj",
                "tp"
            ],
            "lineno": 95
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "old",
                "new"
            ],
            "lineno": 108
        },
        {
            "type": "function",
            "name": "_resolve",
            "args": [
                "self"
            ],
            "lineno": 117
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "attr"
            ],
            "lineno": 120
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 128
        },
        {
            "type": "function",
            "name": "__dir__",
            "args": [
                "self"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name",
                "old_mod",
                "new_mod",
                "old_attr",
                "new_attr"
            ],
            "lineno": 142
        },
        {
            "type": "function",
            "name": "_resolve",
            "args": [
                "self"
            ],
            "lineno": 160
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "six_module_name"
            ],
            "lineno": 174
        },
        {
            "type": "function",
            "name": "_add_module",
            "args": [
                "self",
                "mod",
                "*fullnames"
            ],
            "lineno": 178
        },
        {
            "type": "function",
            "name": "_get_module",
            "args": [
                "self",
                "fullname"
            ],
            "lineno": 182
        },
        {
            "type": "function",
            "name": "find_module",
            "args": [
                "self",
                "fullname",
                "path"
            ],
            "lineno": 185
        },
        {
            "type": "function",
            "name": "find_spec",
            "args": [
                "self",
                "fullname",
                "path",
                "target"
            ],
            "lineno": 190
        },
        {
            "type": "function",
            "name": "__get_module",
            "args": [
                "self",
                "fullname"
            ],
            "lineno": 195
        },
        {
            "type": "function",
            "name": "load_module",
            "args": [
                "self",
                "fullname"
            ],
            "lineno": 201
        },
        {
            "type": "function",
            "name": "is_package",
            "args": [
                "self",
                "fullname"
            ],
            "lineno": 215
        },
        {
            "type": "function",
            "name": "get_code",
            "args": [
                "self",
                "fullname"
            ],
            "lineno": 224
        },
        {
            "type": "function",
            "name": "create_module",
            "args": [
                "self",
                "spec"
            ],
            "lineno": 233
        },
        {
            "type": "function",
            "name": "exec_module",
            "args": [
                "self",
                "module"
            ],
            "lineno": 236
        },
        {
            "type": "function",
            "name": "__dir__",
            "args": [
                "self"
            ],
            "lineno": 535
        },
        {
            "type": "function",
            "name": "get_unbound_function",
            "args": [
                "unbound"
            ],
            "lineno": 599
        },
        {
            "type": "function",
            "name": "create_unbound_method",
            "args": [
                "func",
                "cls"
            ],
            "lineno": 604
        },
        {
            "type": "function",
            "name": "get_unbound_function",
            "args": [
                "unbound"
            ],
            "lineno": 610
        },
        {
            "type": "function",
            "name": "create_bound_method",
            "args": [
                "func",
                "obj"
            ],
            "lineno": 613
        },
        {
            "type": "function",
            "name": "create_unbound_method",
            "args": [
                "func",
                "cls"
            ],
            "lineno": 616
        },
        {
            "type": "class",
            "name": "Iterator",
            "methods": [
                "Method `next` (line 620)"
            ],
            "lineno": 619
        },
        {
            "type": "function",
            "name": "iterkeys",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 639
        },
        {
            "type": "function",
            "name": "itervalues",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 642
        },
        {
            "type": "function",
            "name": "iteritems",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 645
        },
        {
            "type": "function",
            "name": "iterlists",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 648
        },
        {
            "type": "function",
            "name": "iterkeys",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 658
        },
        {
            "type": "function",
            "name": "itervalues",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 661
        },
        {
            "type": "function",
            "name": "iteritems",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 664
        },
        {
            "type": "function",
            "name": "iterlists",
            "args": [
                "d",
                "**kw"
            ],
            "lineno": 667
        },
        {
            "type": "function",
            "name": "b",
            "args": [
                "s"
            ],
            "lineno": 686
        },
        {
            "type": "function",
            "name": "u",
            "args": [
                "s"
            ],
            "lineno": 689
        },
        {
            "type": "function",
            "name": "b",
            "args": [
                "s"
            ],
            "lineno": 716
        },
        {
            "type": "function",
            "name": "u",
            "args": [
                "s"
            ],
            "lineno": 721
        },
        {
            "type": "function",
            "name": "byte2int",
            "args": [
                "bs"
            ],
            "lineno": 727
        },
        {
            "type": "function",
            "name": "indexbytes",
            "args": [
                "buf",
                "i"
            ],
            "lineno": 730
        },
        {
            "type": "function",
            "name": "reraise",
            "args": [
                "tp",
                "value",
                "tb"
            ],
            "lineno": 764
        },
        {
            "type": "function",
            "name": "exec_",
            "args": [
                "_code_",
                "_globs_",
                "_locs_"
            ],
            "lineno": 777
        },
        {
            "type": "function",
            "name": "raise_from",
            "args": [
                "value",
                "from_value"
            ],
            "lineno": 810
        },
        {
            "type": "function",
            "name": "print_",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 817
        },
        {
            "type": "function",
            "name": "print_",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 878
        },
        {
            "type": "function",
            "name": "_update_wrapper",
            "args": [
                "wrapper",
                "wrapped",
                "assigned",
                "updated"
            ],
            "lineno": 894
        },
        {
            "type": "function",
            "name": "wraps",
            "args": [
                "wrapped",
                "assigned",
                "updated"
            ],
            "lineno": 914
        },
        {
            "type": "class",
            "name": "metaclass",
            "methods": [
                "Method `__new__` (line 935)",
                "Method `__prepare__` (line 947)"
            ],
            "lineno": 934
        },
        {
            "type": "function",
            "name": "wrapper",
            "args": [
                "cls"
            ],
            "lineno": 956
        },
        {
            "type": "class",
            "name": "X",
            "methods": [
                "Method `__len__` (line 61)"
            ],
            "lineno": 60
        },
        {
            "type": "function",
            "name": "advance_iterator",
            "args": [
                "it"
            ],
            "lineno": 582
        },
        {
            "type": "function",
            "name": "callable",
            "args": [
                "obj"
            ],
            "lineno": 593
        },
        {
            "type": "function",
            "name": "next",
            "args": [
                "self"
            ],
            "lineno": 620
        },
        {
            "type": "function",
            "name": "write",
            "args": [
                "data"
            ],
            "lineno": 823
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "name",
                "this_bases",
                "d"
            ],
            "lineno": 935
        },
        {
            "type": "function",
            "name": "__prepare__",
            "args": [
                "cls",
                "name",
                "this_bases"
            ],
            "lineno": 947
        },
        {
            "type": "function",
            "name": "__len__",
            "args": [
                "self"
            ],
            "lineno": 61
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/packages/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/util/connection.py": [
        {
            "type": "function",
            "name": "is_connection_dropped",
            "args": [
                "conn"
            ],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "create_connection",
            "args": [
                "address",
                "timeout",
                "source_address",
                "socket_options"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "_set_socket_options",
            "args": [
                "sock",
                "options"
            ],
            "lineno": 100
        },
        {
            "type": "function",
            "name": "allowed_gai_family",
            "args": [],
            "lineno": 108
        },
        {
            "type": "function",
            "name": "_has_ipv6",
            "args": [
                "host"
            ],
            "lineno": 119
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/util/proxy.py": [
        {
            "type": "function",
            "name": "connection_requires_http_tunnel",
            "args": [
                "proxy_url",
                "proxy_config",
                "destination_scheme"
            ],
            "lineno": 4
        },
        {
            "type": "function",
            "name": "create_proxy_ssl_context",
            "args": [
                "ssl_version",
                "cert_reqs",
                "ca_certs",
                "ca_cert_dir",
                "ca_cert_data"
            ],
            "lineno": 37
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/util/queue.py": [
        {
            "type": "class",
            "name": "LifoQueue",
            "methods": [
                "Method `_init` (line 12)",
                "Method `_qsize` (line 15)",
                "Method `_put` (line 18)",
                "Method `_get` (line 21)"
            ],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "_init",
            "args": [
                "self",
                "_"
            ],
            "lineno": 12
        },
        {
            "type": "function",
            "name": "_qsize",
            "args": [
                "self",
                "len"
            ],
            "lineno": 15
        },
        {
            "type": "function",
            "name": "_put",
            "args": [
                "self",
                "item"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "_get",
            "args": [
                "self"
            ],
            "lineno": 21
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/util/request.py": [
        {
            "type": "function",
            "name": "make_headers",
            "args": [
                "keep_alive",
                "accept_encoding",
                "user_agent",
                "basic_auth",
                "proxy_basic_auth",
                "disable_cache"
            ],
            "lineno": 20
        },
        {
            "type": "function",
            "name": "set_file_position",
            "args": [
                "body",
                "pos"
            ],
            "lineno": 92
        },
        {
            "type": "function",
            "name": "rewind_body",
            "args": [
                "body",
                "body_pos"
            ],
            "lineno": 110
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/util/response.py": [
        {
            "type": "function",
            "name": "is_fp_closed",
            "args": [
                "obj"
            ],
            "lineno": 9
        },
        {
            "type": "function",
            "name": "assert_header_parsing",
            "args": [
                "headers"
            ],
            "lineno": 40
        },
        {
            "type": "function",
            "name": "is_response_to_head",
            "args": [
                "response"
            ],
            "lineno": 94
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/util/retry.py": [
        {
            "type": "class",
            "name": "_RetryMeta",
            "methods": [
                "Method `DEFAULT_METHOD_WHITELIST` (line 37)",
                "Method `DEFAULT_METHOD_WHITELIST` (line 46)",
                "Method `DEFAULT_REDIRECT_HEADERS_BLACKLIST` (line 55)",
                "Method `DEFAULT_REDIRECT_HEADERS_BLACKLIST` (line 64)",
                "Method `BACKOFF_MAX` (line 73)",
                "Method `BACKOFF_MAX` (line 82)"
            ],
            "lineno": 35
        },
        {
            "type": "class",
            "name": "Retry",
            "methods": [
                "Method `__init__` (line 243)",
                "Method `new` (line 304)",
                "Method `from_int` (line 341)",
                "Method `get_backoff_time` (line 354)",
                "Method `parse_retry_after` (line 371)",
                "Method `get_retry_after` (line 394)",
                "Method `sleep_for_retry` (line 404)",
                "Method `_sleep_backoff` (line 412)",
                "Method `sleep` (line 418)",
                "Method `_is_connection_error` (line 434)",
                "Method `_is_read_error` (line 442)",
                "Method `_is_method_retryable` (line 448)",
                "Method `is_retry` (line 468)",
                "Method `is_exhausted` (line 488)",
                "Method `increment` (line 504)",
                "Method `__repr__` (line 598)",
                "Method `__getattr__` (line 604)"
            ],
            "lineno": 92
        },
        {
            "type": "function",
            "name": "DEFAULT_METHOD_WHITELIST",
            "args": [
                "cls"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "DEFAULT_METHOD_WHITELIST",
            "args": [
                "cls",
                "value"
            ],
            "lineno": 46
        },
        {
            "type": "function",
            "name": "DEFAULT_REDIRECT_HEADERS_BLACKLIST",
            "args": [
                "cls"
            ],
            "lineno": 55
        },
        {
            "type": "function",
            "name": "DEFAULT_REDIRECT_HEADERS_BLACKLIST",
            "args": [
                "cls",
                "value"
            ],
            "lineno": 64
        },
        {
            "type": "function",
            "name": "BACKOFF_MAX",
            "args": [
                "cls"
            ],
            "lineno": 73
        },
        {
            "type": "function",
            "name": "BACKOFF_MAX",
            "args": [
                "cls",
                "value"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "total",
                "connect",
                "read",
                "redirect",
                "status",
                "other",
                "allowed_methods",
                "status_forcelist",
                "backoff_factor",
                "raise_on_redirect",
                "raise_on_status",
                "history",
                "respect_retry_after_header",
                "remove_headers_on_redirect",
                "method_whitelist"
            ],
            "lineno": 243
        },
        {
            "type": "function",
            "name": "new",
            "args": [
                "self",
                "**kw"
            ],
            "lineno": 304
        },
        {
            "type": "function",
            "name": "from_int",
            "args": [
                "cls",
                "retries",
                "redirect",
                "default"
            ],
            "lineno": 341
        },
        {
            "type": "function",
            "name": "get_backoff_time",
            "args": [
                "self"
            ],
            "lineno": 354
        },
        {
            "type": "function",
            "name": "parse_retry_after",
            "args": [
                "self",
                "retry_after"
            ],
            "lineno": 371
        },
        {
            "type": "function",
            "name": "get_retry_after",
            "args": [
                "self",
                "response"
            ],
            "lineno": 394
        },
        {
            "type": "function",
            "name": "sleep_for_retry",
            "args": [
                "self",
                "response"
            ],
            "lineno": 404
        },
        {
            "type": "function",
            "name": "_sleep_backoff",
            "args": [
                "self"
            ],
            "lineno": 412
        },
        {
            "type": "function",
            "name": "sleep",
            "args": [
                "self",
                "response"
            ],
            "lineno": 418
        },
        {
            "type": "function",
            "name": "_is_connection_error",
            "args": [
                "self",
                "err"
            ],
            "lineno": 434
        },
        {
            "type": "function",
            "name": "_is_read_error",
            "args": [
                "self",
                "err"
            ],
            "lineno": 442
        },
        {
            "type": "function",
            "name": "_is_method_retryable",
            "args": [
                "self",
                "method"
            ],
            "lineno": 448
        },
        {
            "type": "function",
            "name": "is_retry",
            "args": [
                "self",
                "method",
                "status_code",
                "has_retry_after"
            ],
            "lineno": 468
        },
        {
            "type": "function",
            "name": "is_exhausted",
            "args": [
                "self"
            ],
            "lineno": 488
        },
        {
            "type": "function",
            "name": "increment",
            "args": [
                "self",
                "method",
                "url",
                "response",
                "error",
                "_pool",
                "_stacktrace"
            ],
            "lineno": 504
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 598
        },
        {
            "type": "function",
            "name": "__getattr__",
            "args": [
                "self",
                "item"
            ],
            "lineno": 604
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/util/ssltransport.py": [
        {
            "type": "class",
            "name": "SSLTransport",
            "methods": [
                "Method `_validate_ssl_context_for_tls_in_tls` (line 23)",
                "Method `__init__` (line 44)",
                "Method `__enter__` (line 63)",
                "Method `__exit__` (line 66)",
                "Method `fileno` (line 69)",
                "Method `read` (line 72)",
                "Method `recv` (line 75)",
                "Method `recv_into` (line 80)",
                "Method `sendall` (line 89)",
                "Method `send` (line 99)",
                "Method `makefile` (line 105)",
                "Method `unwrap` (line 150)",
                "Method `close` (line 153)",
                "Method `getpeercert` (line 156)",
                "Method `version` (line 159)",
                "Method `cipher` (line 162)",
                "Method `selected_alpn_protocol` (line 165)",
                "Method `selected_npn_protocol` (line 168)",
                "Method `shared_ciphers` (line 171)",
                "Method `compression` (line 174)",
                "Method `settimeout` (line 177)",
                "Method `gettimeout` (line 180)",
                "Method `_decref_socketios` (line 183)",
                "Method `_wrap_ssl_read` (line 186)",
                "Method `_ssl_io_loop` (line 195)"
            ],
            "lineno": 11
        },
        {
            "type": "function",
            "name": "_validate_ssl_context_for_tls_in_tls",
            "args": [
                "ssl_context"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "socket",
                "ssl_context",
                "server_hostname",
                "suppress_ragged_eofs"
            ],
            "lineno": 44
        },
        {
            "type": "function",
            "name": "__enter__",
            "args": [
                "self"
            ],
            "lineno": 63
        },
        {
            "type": "function",
            "name": "__exit__",
            "args": [
                "self",
                "*_"
            ],
            "lineno": 66
        },
        {
            "type": "function",
            "name": "fileno",
            "args": [
                "self"
            ],
            "lineno": 69
        },
        {
            "type": "function",
            "name": "read",
            "args": [
                "self",
                "len",
                "buffer"
            ],
            "lineno": 72
        },
        {
            "type": "function",
            "name": "recv",
            "args": [
                "self",
                "len",
                "flags"
            ],
            "lineno": 75
        },
        {
            "type": "function",
            "name": "recv_into",
            "args": [
                "self",
                "buffer",
                "nbytes",
                "flags"
            ],
            "lineno": 80
        },
        {
            "type": "function",
            "name": "sendall",
            "args": [
                "self",
                "data",
                "flags"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "send",
            "args": [
                "self",
                "data",
                "flags"
            ],
            "lineno": 99
        },
        {
            "type": "function",
            "name": "makefile",
            "args": [
                "self",
                "mode",
                "buffering",
                "encoding",
                "errors",
                "newline"
            ],
            "lineno": 105
        },
        {
            "type": "function",
            "name": "unwrap",
            "args": [
                "self"
            ],
            "lineno": 150
        },
        {
            "type": "function",
            "name": "close",
            "args": [
                "self"
            ],
            "lineno": 153
        },
        {
            "type": "function",
            "name": "getpeercert",
            "args": [
                "self",
                "binary_form"
            ],
            "lineno": 156
        },
        {
            "type": "function",
            "name": "version",
            "args": [
                "self"
            ],
            "lineno": 159
        },
        {
            "type": "function",
            "name": "cipher",
            "args": [
                "self"
            ],
            "lineno": 162
        },
        {
            "type": "function",
            "name": "selected_alpn_protocol",
            "args": [
                "self"
            ],
            "lineno": 165
        },
        {
            "type": "function",
            "name": "selected_npn_protocol",
            "args": [
                "self"
            ],
            "lineno": 168
        },
        {
            "type": "function",
            "name": "shared_ciphers",
            "args": [
                "self"
            ],
            "lineno": 171
        },
        {
            "type": "function",
            "name": "compression",
            "args": [
                "self"
            ],
            "lineno": 174
        },
        {
            "type": "function",
            "name": "settimeout",
            "args": [
                "self",
                "value"
            ],
            "lineno": 177
        },
        {
            "type": "function",
            "name": "gettimeout",
            "args": [
                "self"
            ],
            "lineno": 180
        },
        {
            "type": "function",
            "name": "_decref_socketios",
            "args": [
                "self"
            ],
            "lineno": 183
        },
        {
            "type": "function",
            "name": "_wrap_ssl_read",
            "args": [
                "self",
                "len",
                "buffer"
            ],
            "lineno": 186
        },
        {
            "type": "function",
            "name": "_ssl_io_loop",
            "args": [
                "self",
                "func",
                "*args"
            ],
            "lineno": 195
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/util/ssl_.py": [
        {
            "type": "function",
            "name": "_const_compare_digest_backport",
            "args": [
                "a",
                "b"
            ],
            "lineno": 30
        },
        {
            "type": "function",
            "name": "assert_fingerprint",
            "args": [
                "cert",
                "fingerprint"
            ],
            "lineno": 182
        },
        {
            "type": "function",
            "name": "resolve_cert_reqs",
            "args": [
                "candidate"
            ],
            "lineno": 211
        },
        {
            "type": "function",
            "name": "resolve_ssl_version",
            "args": [
                "candidate"
            ],
            "lineno": 234
        },
        {
            "type": "function",
            "name": "create_urllib3_context",
            "args": [
                "ssl_version",
                "cert_reqs",
                "options",
                "ciphers"
            ],
            "lineno": 250
        },
        {
            "type": "function",
            "name": "ssl_wrap_socket",
            "args": [
                "sock",
                "keyfile",
                "certfile",
                "cert_reqs",
                "ca_certs",
                "server_hostname",
                "ssl_version",
                "ciphers",
                "ssl_context",
                "ca_cert_dir",
                "key_password",
                "ca_cert_data",
                "tls_in_tls"
            ],
            "lineno": 355
        },
        {
            "type": "function",
            "name": "is_ipaddress",
            "args": [
                "hostname"
            ],
            "lineno": 457
        },
        {
            "type": "function",
            "name": "_is_key_file_encrypted",
            "args": [
                "key_file"
            ],
            "lineno": 470
        },
        {
            "type": "function",
            "name": "_ssl_wrap_socket_impl",
            "args": [
                "sock",
                "ssl_context",
                "tls_in_tls",
                "server_hostname"
            ],
            "lineno": 481
        },
        {
            "type": "function",
            "name": "disable_check_hostname",
            "args": [],
            "lineno": 325
        },
        {
            "type": "class",
            "name": "SSLContext",
            "methods": [
                "Method `__init__` (line 134)",
                "Method `load_cert_chain` (line 145)",
                "Method `load_verify_locations` (line 149)",
                "Method `set_ciphers` (line 158)",
                "Method `wrap_socket` (line 161)"
            ],
            "lineno": 133
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "protocol_version"
            ],
            "lineno": 134
        },
        {
            "type": "function",
            "name": "load_cert_chain",
            "args": [
                "self",
                "certfile",
                "keyfile"
            ],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "load_verify_locations",
            "args": [
                "self",
                "cafile",
                "capath",
                "cadata"
            ],
            "lineno": 149
        },
        {
            "type": "function",
            "name": "set_ciphers",
            "args": [
                "self",
                "cipher_suite"
            ],
            "lineno": 158
        },
        {
            "type": "function",
            "name": "wrap_socket",
            "args": [
                "self",
                "socket",
                "server_hostname",
                "server_side"
            ],
            "lineno": 161
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/util/ssl_match_hostname.py": [
        {
            "type": "class",
            "name": "CertificateError",
            "methods": null,
            "lineno": 21
        },
        {
            "type": "function",
            "name": "_dnsname_match",
            "args": [
                "dn",
                "hostname",
                "max_wildcards"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "_to_unicode",
            "args": [
                "obj"
            ],
            "lineno": 79
        },
        {
            "type": "function",
            "name": "_ipaddress_match",
            "args": [
                "ipname",
                "host_ip"
            ],
            "lineno": 86
        },
        {
            "type": "function",
            "name": "match_hostname",
            "args": [
                "cert",
                "hostname"
            ],
            "lineno": 98
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/util/timeout.py": [
        {
            "type": "class",
            "name": "Timeout",
            "methods": [
                "Method `__init__` (line 101)",
                "Method `__repr__` (line 107)",
                "Method `resolve_default_timeout` (line 119)",
                "Method `_validate_timeout` (line 123)",
                "Method `from_float` (line 169)",
                "Method `clone` (line 184)",
                "Method `start_connect` (line 198)",
                "Method `get_connect_duration` (line 209)",
                "Method `connect_timeout` (line 224)",
                "Method `read_timeout` (line 242)"
            ],
            "lineno": 19
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "total",
                "connect",
                "read"
            ],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 107
        },
        {
            "type": "function",
            "name": "resolve_default_timeout",
            "args": [
                "cls",
                "timeout"
            ],
            "lineno": 119
        },
        {
            "type": "function",
            "name": "_validate_timeout",
            "args": [
                "cls",
                "value",
                "name"
            ],
            "lineno": 123
        },
        {
            "type": "function",
            "name": "from_float",
            "args": [
                "cls",
                "timeout"
            ],
            "lineno": 169
        },
        {
            "type": "function",
            "name": "clone",
            "args": [
                "self"
            ],
            "lineno": 184
        },
        {
            "type": "function",
            "name": "start_connect",
            "args": [
                "self"
            ],
            "lineno": 198
        },
        {
            "type": "function",
            "name": "get_connect_duration",
            "args": [
                "self"
            ],
            "lineno": 209
        },
        {
            "type": "function",
            "name": "connect_timeout",
            "args": [
                "self"
            ],
            "lineno": 224
        },
        {
            "type": "function",
            "name": "read_timeout",
            "args": [
                "self"
            ],
            "lineno": 242
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/util/url.py": [
        {
            "type": "class",
            "name": "Url",
            "methods": [
                "Method `__new__` (line 91)",
                "Method `hostname` (line 110)",
                "Method `request_uri` (line 115)",
                "Method `netloc` (line 125)",
                "Method `url` (line 132)",
                "Method `__str__` (line 171)"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "split_first",
            "args": [
                "s",
                "delims"
            ],
            "lineno": 175
        },
        {
            "type": "function",
            "name": "_encode_invalid_chars",
            "args": [
                "component",
                "allowed_chars",
                "encoding"
            ],
            "lineno": 210
        },
        {
            "type": "function",
            "name": "_remove_path_dot_segments",
            "args": [
                "path"
            ],
            "lineno": 244
        },
        {
            "type": "function",
            "name": "_normalize_host",
            "args": [
                "host",
                "scheme"
            ],
            "lineno": 274
        },
        {
            "type": "function",
            "name": "_idna_encode",
            "args": [
                "name"
            ],
            "lineno": 305
        },
        {
            "type": "function",
            "name": "_encode_target",
            "args": [
                "target"
            ],
            "lineno": 323
        },
        {
            "type": "function",
            "name": "parse_url",
            "args": [
                "url"
            ],
            "lineno": 333
        },
        {
            "type": "function",
            "name": "get_host",
            "args": [
                "url"
            ],
            "lineno": 430
        },
        {
            "type": "function",
            "name": "__new__",
            "args": [
                "cls",
                "scheme",
                "auth",
                "host",
                "port",
                "path",
                "query",
                "fragment"
            ],
            "lineno": 91
        },
        {
            "type": "function",
            "name": "hostname",
            "args": [
                "self"
            ],
            "lineno": 110
        },
        {
            "type": "function",
            "name": "request_uri",
            "args": [
                "self"
            ],
            "lineno": 115
        },
        {
            "type": "function",
            "name": "netloc",
            "args": [
                "self"
            ],
            "lineno": 125
        },
        {
            "type": "function",
            "name": "url",
            "args": [
                "self"
            ],
            "lineno": 132
        },
        {
            "type": "function",
            "name": "__str__",
            "args": [
                "self"
            ],
            "lineno": 171
        },
        {
            "type": "function",
            "name": "ensure_type",
            "args": [
                "x"
            ],
            "lineno": 416
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/util/wait.py": [
        {
            "type": "class",
            "name": "NoWayToWaitForSocketError",
            "methods": null,
            "lineno": 14
        },
        {
            "type": "function",
            "name": "select_wait_for_socket",
            "args": [
                "sock",
                "read",
                "write",
                "timeout"
            ],
            "lineno": 70
        },
        {
            "type": "function",
            "name": "poll_wait_for_socket",
            "args": [
                "sock",
                "read",
                "write",
                "timeout"
            ],
            "lineno": 89
        },
        {
            "type": "function",
            "name": "null_wait_for_socket",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 109
        },
        {
            "type": "function",
            "name": "_have_working_poll",
            "args": [],
            "lineno": 113
        },
        {
            "type": "function",
            "name": "wait_for_socket",
            "args": [
                "*args",
                "**kwargs"
            ],
            "lineno": 126
        },
        {
            "type": "function",
            "name": "wait_for_read",
            "args": [
                "sock",
                "timeout"
            ],
            "lineno": 141
        },
        {
            "type": "function",
            "name": "wait_for_write",
            "args": [
                "sock",
                "timeout"
            ],
            "lineno": 148
        },
        {
            "type": "function",
            "name": "_retry_on_intr",
            "args": [
                "fn",
                "timeout"
            ],
            "lineno": 42
        },
        {
            "type": "function",
            "name": "_retry_on_intr",
            "args": [
                "fn",
                "timeout"
            ],
            "lineno": 47
        },
        {
            "type": "function",
            "name": "do_poll",
            "args": [
                "t"
            ],
            "lineno": 101
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/util/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/contrib/_securetransport/bindings.py": [
        {
            "type": "function",
            "name": "load_cdll",
            "args": [
                "name",
                "macos10_16_path"
            ],
            "lineno": 65
        },
        {
            "type": "class",
            "name": "CFConst",
            "methods": null,
            "lineno": 423
        },
        {
            "type": "class",
            "name": "SecurityConst",
            "methods": null,
            "lineno": 432
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/contrib/_securetransport/low_level.py": [
        {
            "type": "function",
            "name": "_cf_data_from_bytes",
            "args": [
                "bytestring"
            ],
            "lineno": 27
        },
        {
            "type": "function",
            "name": "_cf_dictionary_from_tuples",
            "args": [
                "tuples"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "_cfstr",
            "args": [
                "py_bstr"
            ],
            "lineno": 59
        },
        {
            "type": "function",
            "name": "_create_cfstring_array",
            "args": [
                "lst"
            ],
            "lineno": 73
        },
        {
            "type": "function",
            "name": "_cf_string_to_unicode",
            "args": [
                "value"
            ],
            "lineno": 104
        },
        {
            "type": "function",
            "name": "_assert_no_error",
            "args": [
                "error",
                "exception_class"
            ],
            "lineno": 129
        },
        {
            "type": "function",
            "name": "_cert_array_from_pem",
            "args": [
                "pem_bundle"
            ],
            "lineno": 150
        },
        {
            "type": "function",
            "name": "_is_cert",
            "args": [
                "item"
            ],
            "lineno": 196
        },
        {
            "type": "function",
            "name": "_is_identity",
            "args": [
                "item"
            ],
            "lineno": 204
        },
        {
            "type": "function",
            "name": "_temporary_keychain",
            "args": [],
            "lineno": 212
        },
        {
            "type": "function",
            "name": "_load_items_from_file",
            "args": [
                "keychain",
                "path"
            ],
            "lineno": 247
        },
        {
            "type": "function",
            "name": "_load_client_cert_chain",
            "args": [
                "keychain",
                "*paths"
            ],
            "lineno": 302
        },
        {
            "type": "function",
            "name": "_build_tls_unknown_ca_alert",
            "args": [
                "version"
            ],
            "lineno": 386
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/contrib/_securetransport/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/packages/backports/makefile.py": [
        {
            "type": "function",
            "name": "backport_makefile",
            "args": [
                "self",
                "mode",
                "buffering",
                "encoding",
                "errors",
                "newline"
            ],
            "lineno": 13
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/packages/backports/weakref_finalize.py": [
        {
            "type": "class",
            "name": "weakref_finalize",
            "methods": [
                "Method `__init__` (line 43)",
                "Method `__call__` (line 61)",
                "Method `detach` (line 68)",
                "Method `peek` (line 76)",
                "Method `alive` (line 85)",
                "Method `atexit` (line 90)",
                "Method `atexit` (line 96)",
                "Method `__repr__` (line 101)",
                "Method `_select_for_exit` (line 115)",
                "Method `_exitfunc` (line 122)"
            ],
            "lineno": 17
        },
        {
            "type": "class",
            "name": "_Info",
            "methods": null,
            "lineno": 40
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "obj",
                "func",
                "*args",
                "**kwargs"
            ],
            "lineno": 43
        },
        {
            "type": "function",
            "name": "__call__",
            "args": [
                "self",
                "_"
            ],
            "lineno": 61
        },
        {
            "type": "function",
            "name": "detach",
            "args": [
                "self"
            ],
            "lineno": 68
        },
        {
            "type": "function",
            "name": "peek",
            "args": [
                "self"
            ],
            "lineno": 76
        },
        {
            "type": "function",
            "name": "alive",
            "args": [
                "self"
            ],
            "lineno": 85
        },
        {
            "type": "function",
            "name": "atexit",
            "args": [
                "self"
            ],
            "lineno": 90
        },
        {
            "type": "function",
            "name": "atexit",
            "args": [
                "self",
                "value"
            ],
            "lineno": 96
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 101
        },
        {
            "type": "function",
            "name": "_select_for_exit",
            "args": [
                "cls"
            ],
            "lineno": 115
        },
        {
            "type": "function",
            "name": "_exitfunc",
            "args": [
                "cls"
            ],
            "lineno": 122
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/.venv/Lib/site-packages/pip/_vendor/urllib3/packages/backports/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/common/config.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/common/logging_config.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/common/utils.py": [
        {
            "type": "class",
            "name": "InvalidWheelFilename",
            "methods": null,
            "lineno": 16
        },
        {
            "type": "class",
            "name": "InvalidSdistFilename",
            "methods": null,
            "lineno": 22
        },
        {
            "type": "function",
            "name": "canonicalize_name",
            "args": [
                "name"
            ],
            "lineno": 33
        },
        {
            "type": "function",
            "name": "canonicalize_version",
            "args": [
                "version"
            ],
            "lineno": 39
        },
        {
            "type": "function",
            "name": "parse_wheel_filename",
            "args": [
                "filename"
            ],
            "lineno": 82
        },
        {
            "type": "function",
            "name": "parse_sdist_filename",
            "args": [
                "filename"
            ],
            "lineno": 118
        },
        {
            "type": "function",
            "name": "get_project_name",
            "args": [
                "directory"
            ],
            "lineno": 140
        },
        {
            "type": "function",
            "name": "list_python_files",
            "args": [
                "directory"
            ],
            "lineno": 145
        },
        {
            "type": "function",
            "name": "summarize_for_gpt",
            "args": [
                "text",
                "max_sentences",
                "max_length"
            ],
            "lineno": 150
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/file_manager/file_manager.py": [
        {
            "type": "class",
            "name": "FileManager",
            "methods": [
                "Method `__init__` (line 22)",
                "Method `ensure_directory` (line 28)",
                "Method `move_file` (line 32)",
                "Method `batch_move_files` (line 54)"
            ],
            "lineno": 21
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "base_dir"
            ],
            "lineno": 22
        },
        {
            "type": "function",
            "name": "ensure_directory",
            "args": [
                "directory"
            ],
            "lineno": 28
        },
        {
            "type": "function",
            "name": "move_file",
            "args": [
                "self",
                "src",
                "dest"
            ],
            "lineno": 32
        },
        {
            "type": "function",
            "name": "batch_move_files",
            "args": [
                "self",
                "file_mapping"
            ],
            "lineno": 54
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/file_manager/main.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/file_manager/__init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/project_generator/main.py": [
        {
            "type": "function",
            "name": "main",
            "args": [
                "args"
            ],
            "lineno": 46
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/project_generator/new_project.py": [
        {
            "type": "function",
            "name": "list_folders",
            "args": [
                "drive_path"
            ],
            "lineno": 25
        },
        {
            "type": "function",
            "name": "select_parent_folder",
            "args": [],
            "lineno": 34
        },
        {
            "type": "function",
            "name": "ensure_directory_exists",
            "args": [
                "directory"
            ],
            "lineno": 62
        },
        {
            "type": "function",
            "name": "create_project_from_tree",
            "args": [
                "tree_file",
                "base_path"
            ],
            "lineno": 77
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/project_generator/__init__.py": [
        {
            "type": "function",
            "name": "make_distribution_for_install_requirement",
            "args": [
                "install_req"
            ],
            "lineno": 7
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/project_reader/code_summary.py": [
        {
            "type": "function",
            "name": "get_function_args",
            "args": [
                "node"
            ],
            "lineno": 16
        },
        {
            "type": "function",
            "name": "process_file",
            "args": [
                "file_path"
            ],
            "lineno": 26
        },
        {
            "type": "function",
            "name": "summarize_code",
            "args": [
                "directory"
            ],
            "lineno": 78
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/project_reader/file_tree.py": [
        {
            "type": "function",
            "name": "generate_file_tree",
            "args": [
                "directory",
                "depth"
            ],
            "lineno": 18
        },
        {
            "type": "function",
            "name": "safe_read_file",
            "args": [
                "file_path"
            ],
            "lineno": 45
        },
        {
            "type": "function",
            "name": "parse_python_code",
            "args": [
                "file_path"
            ],
            "lineno": 60
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/project_reader/logging_config.py": [
        {
            "type": "function",
            "name": "setup_logging",
            "args": [],
            "lineno": 4
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/project_reader/main.py": [
        {
            "type": "function",
            "name": "save_json",
            "args": [
                "output_file",
                "data"
            ],
            "lineno": 23
        },
        {
            "type": "function",
            "name": "select_directory",
            "args": [
                "prompt"
            ],
            "lineno": 29
        },
        {
            "type": "function",
            "name": "ensure_directory_exists",
            "args": [
                "directory"
            ],
            "lineno": 37
        },
        {
            "type": "function",
            "name": "main",
            "args": [
                "directory",
                "output_directory"
            ],
            "lineno": 44
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/project_reader/markdown_output.py": [
        {
            "type": "function",
            "name": "save_as_markdown",
            "args": [
                "output_file",
                "data",
                "gpt_summaries",
                "title"
            ],
            "lineno": 1
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/project_reader/schemas.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/project_reader/tags.py": [
        {
            "type": "class",
            "name": "Tag",
            "methods": [
                "Method `__init__` (line 4)",
                "Method `__repr__` (line 7)"
            ],
            "lineno": 3
        },
        {
            "type": "function",
            "name": "parse_tag",
            "args": [
                "tag_str"
            ],
            "lineno": 10
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "name"
            ],
            "lineno": 4
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 7
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/project_reader/version.py": [
        {
            "type": "class",
            "name": "InvalidVersion",
            "methods": null,
            "lineno": 3
        },
        {
            "type": "class",
            "name": "Version",
            "methods": [
                "Method `__init__` (line 8)",
                "Method `__repr__` (line 13)"
            ],
            "lineno": 7
        },
        {
            "type": "function",
            "name": "__init__",
            "args": [
                "self",
                "version_str"
            ],
            "lineno": 8
        },
        {
            "type": "function",
            "name": "__repr__",
            "args": [
                "self"
            ],
            "lineno": 13
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/project_reader/__init__.py": [
        {
            "type": "function",
            "name": "create_command",
            "args": [
                "name",
                "**kwargs"
            ],
            "lineno": 109
        },
        {
            "type": "function",
            "name": "get_similar_commands",
            "args": [
                "name"
            ],
            "lineno": 121
        }
    ],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/project_reader/tests/ __init__.py": [],
    "D:/Coding/Python_Projects/the_aichemist_codex/src/project_reader/tests/test_project_reader/ test_file_tree.py": []
}