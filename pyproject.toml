[project]
name = "the_aichemist_codex"
version = "0.1.0"
description = "A modular file and project management system."
readme = "README.md"
requires-python = ">=3.13.0"
dependencies = [
  # Core Dependencies
  "EbookLib>=0.17.1",
  "Kreuzberg>=0.1.0",
  "PyYAML>=6.0.1",
  "aiofiles>=24.1.0",
  "aiohttp>=3.8.5",
  "annotated-types>=0.7.0",
  "anyio>=4.8.0",
  "asyncio>=3.4.3",
  "attrs>=25.1.0",
  "click>=8.1.8",
  "colorama>=0.4.6",
  "dynaconf>=3.2.10",
  "ezdxf>=1.0.0",
  "fastjsonschema>=2.21.1",
  "importlib_metadata>=8.6.1",
  "iniconfig>=2.0.0",
  "jsonschema-specifications>=2024.10.1",
  "jsonschema>=4.23.0",
  "jupyter_core>=5.7.2",
  "lxml>=4.9.3",
  "mutagen>=1.47.0",
  "nbformat>=5.10.4",
  "odfpy>=1.4.1",
  "openpyxl>=3.1.0",
  "packaging>=24.2",
  "pandas>=2.0.0",
  "platformdirs>=4.3.6",
  "pluggy>=1.5.0",
  "psutil>=7.0.0",
  "pydantic>=2.10.6",
  "pydantic_core>=2.27.2",
  "pydub>=0.25.1",
  "pypdf>=3.17.1",
  "python-docx>=0.8.11",
  "python-dotenv>=1.0.1",
  "python-magic-bin>=0.4.14; sys_platform == 'win32'",
  "rarfile>=4.0",
  "rapidfuzz>=2.15.1",
  "referencing>=0.36.2",
  "reportlab>=4.0.4",
  "rich>=13.6.0",
  "rpds-py>=0.23.1",
  "setuptools>=75.8.0",
  "structlog>=25.1.0",
  "tabulate>=0.9.0",
  "tenacity>=9.0.0",
  "tiktoken>=0.5.1",
  "tomli>=2.0.1",
  "traitlets>=5.14.3",
  "typing_extensions>=4.12.2",
  "watchdog>=3.0.0",
  "whoosh>=2.7.4",
  "xmltodict>=0.13.0",
  "zipp>=3.21.0",

  # Graph & Visualization (for Relationship Mapping)
  "networkx>=3.1",
  "pydot>=1.4.2",
  "matplotlib>=3.7.1",

  # AI & NLP
  "sentence-transformers>=2.2.2",
  "faiss-cpu>=1.7.4",
  "scikit-learn>=1.3.0",
  "numpy>=1.24.0",
  "pytesseract>=0.3.10",
  "openai>=1.3.5",

  # Search & Indexing
  "sqlite-utils>=3.36.0",
  "sqlalchemy>=2.0.23",
  "fastapi>=0.111.0",

  # Security & Compliance
  "cryptography>=41.0.7",
  "pyjwt>=2.7.0",
  "bcrypt>=4.1.2",
  "casbin>=1.38.0",
  "loguru>=0.7.2",
  "py7zr>=0.22.0",
  "aiosqlite>=0.21.0",
]

[project.optional-dependencies]
dev = [
  "Pygments>=2.18.0",
  "black>=24.8.0",
  "build>=1.2.1",
  "codecov>=2.1.13",
  "ipykernel>=6.29.5",
  "ipython>=8.18.1",
  "isort>=5.13.2",
  "mypy-extensions>=1.0.0",
  "mypy>=1.11.1",
  "nbqa>=1.8.7",
  "mkdocs-material>=9.5.33",
  "mkdocs>=1.6.0",
  "mkdocstrings-python>=1.10.8",
  "mkdocstrings>=0.25.2",
  "pre-commit>=3.8.0",
  "pytest-asyncio>=0.25.3",
  "pytest-benchmark>=4.0.0",
  "pytest-cov>=6.0.0",
  "pytest-mock>=3.14.0",
  "pytest>=8.3.4",
  "pytest-asyncio>=0.25.3",
  # Add PyDeps for dependency visualization
  "pydeps>=1.12.17",

  # PyDeps requires graphviz to generate visualization
  "graphviz>=0.20.1",
  "types-aiofiles>=23.2.0.0",
  "types-networkx>=3.1.0.0",
  "types-pywin32>=306.0.0.0",
  "ruff>=0.1.13",
  "setuptools>=73.0.1",
  "sphinx-autodoc-typehints>=1.22.0",
  "sphinx-copybutton>=0.5.2",
  "sphinx-rtd-theme>=2.0.0",
  "sphinx>=6.2.1",
  "sphinxcontrib-mermaid>=0.9.2",
  "twine>=5.1.0",
  "virtualenv>=20.26.3",
]

[project.scripts]
codex = "the_aichemist_codex.backend.cli:main"
docs = "docs.build_docs:main"

[build-system]
requires = ["setuptools>=75.8.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["the_aichemist_codex*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
tmp_path_retention_count = 2
tmp_path_retention_policy = "failed"
addopts = "--basetemp=./tmp"
markers = ["asyncio: mark a test as an asyncio test"]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"


[tool.ruff]
include = ["pyproject.toml", "src/**/*.py", "scripts/**/*.py", "src/**/*.py"]

exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

# Same as Black.
line-length = 88
indent-width = 4


[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "ANN", # flake8-annotations
    "S",   # flake8-bandit
    "A",   # flake8-builtins
]
ignore = [
    "E501",  # Line too long
    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotation for `cls` in classmethod
    "ANN401", # Dynamically typed expressions (Any) are disallowed
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
allow_untyped_globals = false
allow_redefinition = false
local_partial_types = true
ignore_missing_imports = true
show_none_errors = true

[[tool.mypy.overrides]]
module = "docs.*"
disallow_untyped_defs = false
check_untyped_defs = false

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
check_untyped_defs = false

[tool.pydeps]
max_bacon = 2             # Maximum dependency distance to include
cluster = true            # Group modules from the same package
reverse = false           # Show reverse dependencies

# Exclude standard library modules
exclude = [
    # Standard library
    "re", "os", "sys", "collections", "typing", "json", "time", "datetime",
    "pathlib", "uuid", "logging", "abc", "inspect", "functools", "itertools",
    "importlib", "shutil", "tempfile", "warnings", "weakref", "contextlib",
    "subprocess", "multiprocessing", "threading", "argparse", "traceback",

    # External libraries (common ones that add noise)
    "numpy.*", "pandas.*", "matplotlib.*", "setuptools.*", "aiohttp.*",
    "asyncio.*", "pydantic.*", "click.*", "rich.*", "sqlalchemy.*",

    # Virtual environment paths
    ".venv.*", "site-packages.*", "dist-packages.*",

    # Test modules/directories
    "*test*", "*tests*", "*pytest*", "*mock*", "*conftest*",

    # Build/documentation related
    "docs.*", "build.*", "dist.*", "sphinx.*", "*setup*"
]

# Additional PyDeps options for better visualization
max_module_depth = 4      # Limit module depth for readability
min_cluster_size = 2      # Minimum number of nodes to form a cluster
noise_level = 1000        # High value to avoid excluding nodes
